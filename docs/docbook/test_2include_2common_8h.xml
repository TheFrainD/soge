<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test_2include_2common_8h">
<title>deps/cglm/test/include/common.h File Reference</title>
<indexterm><primary>deps/cglm/test/include/common.h</primary></indexterm>
<programlisting>#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;cglm/cglm.h&gt;
#include &lt;cglm/struct.h&gt;
#include &lt;cglm/call.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structtest__status__t">test_status_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structtest__entry__t">test_entry_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a525335710b53cb064ca56b936120431e">_USE_MATH_DEFINES</link>   /* for windows */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1af08ec37a8c99d747fb60fa15bc28678b">_CRT_SECURE_NO_WARNINGS</link>   /* for windows */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a369266c24eacffb87046522897a570d5">_GNU_SOURCE</link>   /* for drand48() */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1aae323ccefefb18c33a5017ab19035c89">CGLM_CLIPSPACE_INCLUDE_ALL</link></para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>   &quot;\033[0m&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a7b3b25cba33b07c303f3060fe41887f6">BLACK</link>   &quot;\033[30m&quot;             /* Black */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a8d23feea868a983c8c2b661e1e16972f">RED</link>   &quot;\033[31m&quot;             /* Red */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1acfbc006ea433ad708fdee3e82996e721">GREEN</link>   &quot;\033[32m&quot;             /* Green */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1abf681265909adf3d3e8116c93c0ba179">YELLOW</link>   &quot;\033[33m&quot;             /* Yellow */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a79d10e672abb49ad63eeaa8aaef57c38">BLUE</link>   &quot;\033[34m&quot;             /* Blue */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a6f699060902f800f12aaae150f3a708e">MAGENTA</link>   &quot;\033[35m&quot;             /* Magenta */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ad243f93c16bc4c1d3e0a13b84421d760">CYAN</link>   &quot;\033[36m&quot;             /* Cyan */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a87b537f5fa5c109d3c05c13d6b18f382">WHITE</link>   &quot;\033[37m&quot;             /* White */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1aef2fe95894117165b29036718221979f">BOLDBLACK</link>   &quot;\033[1m\033[30m&quot;      /* Bold Black */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ab912d02c7998c3d47d05f87be4e2c920">BOLDRED</link>   &quot;\033[1m\033[31<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Red */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a4a6c893a1703c33ede7d702fe5f97c91">BOLDGREEN</link>   &quot;\033[1m\033[32<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Green */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a8cec79108dfc3c61e8e32d390ec28b26">BOLDYELLOW</link>   &quot;\033[1m\033[33<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Yellow */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a11e77c19555cbd15bcc744ff36a18635">BOLDBLUE</link>   &quot;\033[1m\033[34<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Blue */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ac4723c5ee12cfca16e2172b57b99cb07">BOLDMAGENTA</link>   &quot;\033[1m\033[35<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Magenta */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ae87af5e6363eb1913b17f24dcb60a22d">BOLDCYAN</link>   &quot;\033[1m\033[36<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Cyan */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1aa4ef051614aa0bd503b0a18ee158c5d7">BOLDWHITE</link>   &quot;\033[1m\033[37<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold White */</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a8712bfa8efa8889cbb781c239c758b60">TEST_DECLARE</link>(FUN)   <link linkend="_structtest__status__t">test_status_t</link> test_ ## FUN(<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>);</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ae87f348ecd39f945ab90e0726d8ee446">TEST_ENTRY</link>(FUN)   { #FUN, test_ ## FUN, 0, 0 },</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a93cbf104add07315fefaa6ca453cd7b1">TEST_LIST</link>   static <link linkend="_structtest__entry__t">test_entry_t</link> tests[] =</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ae4b532a93c757194ec73b6790a3e6b1f">EXPAND</link>(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)   <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link></para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a81d97b2292c59c9c556bd9fbee21eb96">TEST_OK</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>   return (<link linkend="_structtest__status__t">test_status_t</link>){<link linkend="_tinycthread_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>, <link linkend="_test_2include_2common_8h_1a81d97b2292c59c9c556bd9fbee21eb96">TEST_OK</link>};</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ac58ab4b243b3a0880b2da1af57ee36a0">TEST_IMPL_ARG1</link>(FUN)</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1adb64b3512bff98ba246917157c625ea3">TEST_IMPL_ARG2</link>(PREFIX,  FUN)   <link linkend="_test_2include_2common_8h_1ac58ab4b243b3a0880b2da1af57ee36a0">TEST_IMPL_ARG1</link>(PREFIX ## FUN)</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a5e289b601446282ae5c8398983aac8c2">TEST_IMPL_ARG3</link>(<link linkend="_glext_8h_1a4b247ab422408c1761a36f9034c2585b">arg1</link>,  <link linkend="_glext_8h_1a5aee5a44bf92a9837fea48e41ef0df57">arg2</link>,  <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link>, ...)   <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link></para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ab49dd9812834eb7198e9a0461cff2349">TEST_IMPL_CHOOSER</link>(...)   <link linkend="_test_2include_2common_8h_1ae4b532a93c757194ec73b6790a3e6b1f">EXPAND</link>(<link linkend="_test_2include_2common_8h_1a5e289b601446282ae5c8398983aac8c2">TEST_IMPL_ARG3</link>(__VA_ARGS__, <link linkend="_test_2include_2common_8h_1adb64b3512bff98ba246917157c625ea3">TEST_IMPL_ARG2</link>, <link linkend="_test_2include_2common_8h_1ac58ab4b243b3a0880b2da1af57ee36a0">TEST_IMPL_ARG1</link>))</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a8e86e453457fcb25ff3e800e78b025db">TEST_IMPL</link>(...)   <link linkend="_test_2include_2common_8h_1ae4b532a93c757194ec73b6790a3e6b1f">EXPAND</link>(<link linkend="_test_2include_2common_8h_1ab49dd9812834eb7198e9a0461cff2349">TEST_IMPL_CHOOSER</link>(__VA_ARGS__)(__VA_ARGS__))</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1af51db70d3071a1d11bff15abc9caf234">ASSERT_EXT</link>(expr,  msg)</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a2ed59d517ba56f1f4c059f00ee238122">ASSERT_ARG1</link>(expr)   <link linkend="_test_2include_2common_8h_1af51db70d3071a1d11bff15abc9caf234">ASSERT_EXT</link>(expr, <link linkend="_tinycthread_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a6b3ae771e2fd2a674d80dc4bb16fbbdc">ASSERT_ARG2</link>(expr,  msg)   <link linkend="_test_2include_2common_8h_1af51db70d3071a1d11bff15abc9caf234">ASSERT_EXT</link>(expr, msg)</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a42c2a2efb74d5f9ea98fd5a0d2032a82">ASSERT_ARG3</link>(<link linkend="_glext_8h_1a4b247ab422408c1761a36f9034c2585b">arg1</link>,  <link linkend="_glext_8h_1a5aee5a44bf92a9837fea48e41ef0df57">arg2</link>,  <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link>, ...)   <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link></para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1acadfade822f45b11167a21289bed71be">ASSERT_CHOOSER</link>(...)   <link linkend="_test_2include_2common_8h_1a42c2a2efb74d5f9ea98fd5a0d2032a82">ASSERT_ARG3</link>(__VA_ARGS__, <link linkend="_test_2include_2common_8h_1a6b3ae771e2fd2a674d80dc4bb16fbbdc">ASSERT_ARG2</link>, <link linkend="_test_2include_2common_8h_1a2ed59d517ba56f1f4c059f00ee238122">ASSERT_ARG1</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(...)   do { <link linkend="_test_2include_2common_8h_1acadfade822f45b11167a21289bed71be">ASSERT_CHOOSER</link>(__VA_ARGS__)(__VA_ARGS__) } while(0);</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a30dae4277b7792b1c641ced79bdfca4e">ASSERTIFY</link>(expr)</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1ab27d9ed950c8dc84877de8230866e50a">OK_TEXT</link>   &quot;✔︎&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a4a521453b6d80c450b2fea32eaa16658">FAIL_TEXT</link>   &quot;𐄂&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_test_2include_2common_8h_1a753a15aa6534b6c69875f3e7c7bb5d2d">FINAL_TEXT</link>   &quot;🎉&quot;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test_2include_2common_8h_1aa64d4e1c1193ec71decf74846d01503b">test_status_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structtest__status__t">test_status_t</link>(* <link linkend="_test_2include_2common_8h_1a33b718b14c185d20daf5c94ebf3fff62">fntest</link>) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structtest__entry__t">test_entry_t</link> <link linkend="_test_2include_2common_8h_1a2444282171efe86073345d93bd55217c">test_entry_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_test_2include_2common_8h_1af08ec37a8c99d747fb60fa15bc28678b"/>    <section>
    <title>_CRT_SECURE_NO_WARNINGS</title>
<indexterm><primary>_CRT_SECURE_NO_WARNINGS</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>_CRT_SECURE_NO_WARNINGS</secondary></indexterm>
<para><computeroutput>#define _CRT_SECURE_NO_WARNINGS   /* for windows */</computeroutput></para><para>
Definition at line 16 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a369266c24eacffb87046522897a570d5"/>    <section>
    <title>_GNU_SOURCE</title>
<indexterm><primary>_GNU_SOURCE</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>_GNU_SOURCE</secondary></indexterm>
<para><computeroutput>#define _GNU_SOURCE   /* for drand48() */</computeroutput></para><para>
Definition at line 20 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a525335710b53cb064ca56b936120431e"/>    <section>
    <title>_USE_MATH_DEFINES</title>
<indexterm><primary>_USE_MATH_DEFINES</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>_USE_MATH_DEFINES</secondary></indexterm>
<para><computeroutput>#define _USE_MATH_DEFINES   /* for windows */</computeroutput></para><para>
Definition at line 12 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004"/>    <section>
    <title>ASSERT</title>
<indexterm><primary>ASSERT</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>ASSERT</secondary></indexterm>
<para><computeroutput>#define ASSERT( ...)   do { <link linkend="_test_2include_2common_8h_1acadfade822f45b11167a21289bed71be">ASSERT_CHOOSER</link>(__VA_ARGS__)(__VA_ARGS__) } while(0);</computeroutput></para><para>
Definition at line 131 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a2ed59d517ba56f1f4c059f00ee238122"/>    <section>
    <title>ASSERT_ARG1</title>
<indexterm><primary>ASSERT_ARG1</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>ASSERT_ARG1</secondary></indexterm>
<para><computeroutput>#define ASSERT_ARG1( expr)   <link linkend="_test_2include_2common_8h_1af51db70d3071a1d11bff15abc9caf234">ASSERT_EXT</link>(expr, <link linkend="_tinycthread_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)</computeroutput></para><para>
Definition at line 126 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a6b3ae771e2fd2a674d80dc4bb16fbbdc"/>    <section>
    <title>ASSERT_ARG2</title>
<indexterm><primary>ASSERT_ARG2</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>ASSERT_ARG2</secondary></indexterm>
<para><computeroutput>#define ASSERT_ARG2( expr,  msg)   <link linkend="_test_2include_2common_8h_1af51db70d3071a1d11bff15abc9caf234">ASSERT_EXT</link>(expr, msg)</computeroutput></para><para>
Definition at line 127 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a42c2a2efb74d5f9ea98fd5a0d2032a82"/>    <section>
    <title>ASSERT_ARG3</title>
<indexterm><primary>ASSERT_ARG3</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>ASSERT_ARG3</secondary></indexterm>
<para><computeroutput>#define ASSERT_ARG3( <link linkend="_glext_8h_1a4b247ab422408c1761a36f9034c2585b">arg1</link>,  <link linkend="_glext_8h_1a5aee5a44bf92a9837fea48e41ef0df57">arg2</link>,  <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link>,  ...)   <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link></computeroutput></para><para>
Definition at line 128 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1acadfade822f45b11167a21289bed71be"/>    <section>
    <title>ASSERT_CHOOSER</title>
<indexterm><primary>ASSERT_CHOOSER</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>ASSERT_CHOOSER</secondary></indexterm>
<para><computeroutput>#define ASSERT_CHOOSER( ...)   <link linkend="_test_2include_2common_8h_1a42c2a2efb74d5f9ea98fd5a0d2032a82">ASSERT_ARG3</link>(__VA_ARGS__, <link linkend="_test_2include_2common_8h_1a6b3ae771e2fd2a674d80dc4bb16fbbdc">ASSERT_ARG2</link>, <link linkend="_test_2include_2common_8h_1a2ed59d517ba56f1f4c059f00ee238122">ASSERT_ARG1</link>)</computeroutput></para><para>
Definition at line 130 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1af51db70d3071a1d11bff15abc9caf234"/>    <section>
    <title>ASSERT_EXT</title>
<indexterm><primary>ASSERT_EXT</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>ASSERT_EXT</secondary></indexterm>
<para><computeroutput>#define ASSERT_EXT( expr,  msg)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(expr))&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;fprintf(stderr,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a8d23feea868a983c8c2b661e1e16972f">RED</link>&#32;<emphasis role="stringliteral">&quot;&#32;&#32;assert&#32;fail&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;in&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ae87af5e6363eb1913b17f24dcb60a22d">BOLDCYAN</link>&#32;<emphasis role="stringliteral">&quot;%s&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;on&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ac4723c5ee12cfca16e2172b57b99cb07">BOLDMAGENTA</link>&#32;<emphasis role="stringliteral">&quot;line&#32;%d&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1aa4ef051614aa0bd503b0a18ee158c5d7">BOLDWHITE</link>&#32;<emphasis role="stringliteral">&quot;&#32;ASSERT(%s)\n&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FILE__,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#expr);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;return&#32;(<link linkend="_structtest__status__t">test_status_t</link>){msg,&#32;0};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;}
</programlisting><para>
Definition at line 113 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a30dae4277b7792b1c641ced79bdfca4e"/>    <section>
    <title>ASSERTIFY</title>
<indexterm><primary>ASSERTIFY</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>ASSERTIFY</secondary></indexterm>
<para><computeroutput>#define ASSERTIFY( expr)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;test_status_t&#32;ts;&#32;\
&#32;&#32;&#32;&#32;ts&#32;=&#32;expr;&#32;\
&#32;&#32;&#32;&#32;if&#32;(ts.status&#32;!=&#32;<link linkend="_test_2include_2common_8h_1a81d97b2292c59c9c556bd9fbee21eb96">TEST_OK</link>)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a8d23feea868a983c8c2b661e1e16972f">RED</link>&#32;<emphasis role="stringliteral">&quot;&#32;&#32;assert&#32;fail&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;in&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ae87af5e6363eb1913b17f24dcb60a22d">BOLDCYAN</link>&#32;<emphasis role="stringliteral">&quot;%s&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;on&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ac4723c5ee12cfca16e2172b57b99cb07">BOLDMAGENTA</link>&#32;<emphasis role="stringliteral">&quot;line&#32;%d&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1aa4ef051614aa0bd503b0a18ee158c5d7">BOLDWHITE</link>&#32;<emphasis role="stringliteral">&quot;&#32;ASSERTIFY(%s)\n&quot;</emphasis>&#32;<link linkend="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299">RESET</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__FILE__,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__LINE__,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#expr);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;return&#32;(<link linkend="_structtest__status__t">test_status_t</link>){ts.msg,&#32;0};&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0);
</programlisting><para>
Definition at line 132 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a7b3b25cba33b07c303f3060fe41887f6"/>    <section>
    <title>BLACK</title>
<indexterm><primary>BLACK</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BLACK</secondary></indexterm>
<para><computeroutput>#define BLACK   &quot;\033[30m&quot;             /* Black */</computeroutput></para><para>
Definition at line 52 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a79d10e672abb49ad63eeaa8aaef57c38"/>    <section>
    <title>BLUE</title>
<indexterm><primary>BLUE</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BLUE</secondary></indexterm>
<para><computeroutput>#define BLUE   &quot;\033[34m&quot;             /* Blue */</computeroutput></para><para>
Definition at line 56 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1aef2fe95894117165b29036718221979f"/>    <section>
    <title>BOLDBLACK</title>
<indexterm><primary>BOLDBLACK</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDBLACK</secondary></indexterm>
<para><computeroutput>#define BOLDBLACK   &quot;\033[1m\033[30m&quot;      /* Bold Black */</computeroutput></para><para>
Definition at line 60 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a11e77c19555cbd15bcc744ff36a18635"/>    <section>
    <title>BOLDBLUE</title>
<indexterm><primary>BOLDBLUE</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDBLUE</secondary></indexterm>
<para><computeroutput>#define BOLDBLUE   &quot;\033[1m\033[34<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Blue */</computeroutput></para><para>
Definition at line 64 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ae87af5e6363eb1913b17f24dcb60a22d"/>    <section>
    <title>BOLDCYAN</title>
<indexterm><primary>BOLDCYAN</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDCYAN</secondary></indexterm>
<para><computeroutput>#define BOLDCYAN   &quot;\033[1m\033[36<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Cyan */</computeroutput></para><para>
Definition at line 66 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a4a6c893a1703c33ede7d702fe5f97c91"/>    <section>
    <title>BOLDGREEN</title>
<indexterm><primary>BOLDGREEN</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDGREEN</secondary></indexterm>
<para><computeroutput>#define BOLDGREEN   &quot;\033[1m\033[32<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Green */</computeroutput></para><para>
Definition at line 62 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ac4723c5ee12cfca16e2172b57b99cb07"/>    <section>
    <title>BOLDMAGENTA</title>
<indexterm><primary>BOLDMAGENTA</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDMAGENTA</secondary></indexterm>
<para><computeroutput>#define BOLDMAGENTA   &quot;\033[1m\033[35<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Magenta */</computeroutput></para><para>
Definition at line 65 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ab912d02c7998c3d47d05f87be4e2c920"/>    <section>
    <title>BOLDRED</title>
<indexterm><primary>BOLDRED</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDRED</secondary></indexterm>
<para><computeroutput>#define BOLDRED   &quot;\033[1m\033[31<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Red */</computeroutput></para><para>
Definition at line 61 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1aa4ef051614aa0bd503b0a18ee158c5d7"/>    <section>
    <title>BOLDWHITE</title>
<indexterm><primary>BOLDWHITE</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDWHITE</secondary></indexterm>
<para><computeroutput>#define BOLDWHITE   &quot;\033[1m\033[37<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold White */</computeroutput></para><para>
Definition at line 67 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a8cec79108dfc3c61e8e32d390ec28b26"/>    <section>
    <title>BOLDYELLOW</title>
<indexterm><primary>BOLDYELLOW</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>BOLDYELLOW</secondary></indexterm>
<para><computeroutput>#define BOLDYELLOW   &quot;\033[1m\033[33<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>&quot;      /* Bold Yellow */</computeroutput></para><para>
Definition at line 63 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1aae323ccefefb18c33a5017ab19035c89"/>    <section>
    <title>CGLM_CLIPSPACE_INCLUDE_ALL</title>
<indexterm><primary>CGLM_CLIPSPACE_INCLUDE_ALL</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>CGLM_CLIPSPACE_INCLUDE_ALL</secondary></indexterm>
<para><computeroutput>#define CGLM_CLIPSPACE_INCLUDE_ALL</computeroutput></para><para>
Definition at line 24 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ad243f93c16bc4c1d3e0a13b84421d760"/>    <section>
    <title>CYAN</title>
<indexterm><primary>CYAN</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>CYAN</secondary></indexterm>
<para><computeroutput>#define CYAN   &quot;\033[36m&quot;             /* Cyan */</computeroutput></para><para>
Definition at line 58 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ae4b532a93c757194ec73b6790a3e6b1f"/>    <section>
    <title>EXPAND</title>
<indexterm><primary>EXPAND</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>EXPAND</secondary></indexterm>
<para><computeroutput>#define EXPAND( <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)   <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link></computeroutput></para><para>
Definition at line 96 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a4a521453b6d80c450b2fea32eaa16658"/>    <section>
    <title>FAIL_TEXT</title>
<indexterm><primary>FAIL_TEXT</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>FAIL_TEXT</secondary></indexterm>
<para><computeroutput>#define FAIL_TEXT   &quot;𐄂&quot;</computeroutput></para><para>
Definition at line 155 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a753a15aa6534b6c69875f3e7c7bb5d2d"/>    <section>
    <title>FINAL_TEXT</title>
<indexterm><primary>FINAL_TEXT</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>FINAL_TEXT</secondary></indexterm>
<para><computeroutput>#define FINAL_TEXT   &quot;🎉&quot;</computeroutput></para><para>
Definition at line 156 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1acfbc006ea433ad708fdee3e82996e721"/>    <section>
    <title>GREEN</title>
<indexterm><primary>GREEN</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>GREEN</secondary></indexterm>
<para><computeroutput>#define GREEN   &quot;\033[32m&quot;             /* Green */</computeroutput></para><para>
Definition at line 54 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a6f699060902f800f12aaae150f3a708e"/>    <section>
    <title>MAGENTA</title>
<indexterm><primary>MAGENTA</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>MAGENTA</secondary></indexterm>
<para><computeroutput>#define MAGENTA   &quot;\033[35m&quot;             /* Magenta */</computeroutput></para><para>
Definition at line 57 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ab27d9ed950c8dc84877de8230866e50a"/>    <section>
    <title>OK_TEXT</title>
<indexterm><primary>OK_TEXT</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>OK_TEXT</secondary></indexterm>
<para><computeroutput>#define OK_TEXT   &quot;✔︎&quot;</computeroutput></para><para>
Definition at line 154 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a8d23feea868a983c8c2b661e1e16972f"/>    <section>
    <title>RED</title>
<indexterm><primary>RED</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>RED</secondary></indexterm>
<para><computeroutput>#define RED   &quot;\033[31m&quot;             /* Red */</computeroutput></para><para>
Definition at line 53 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ab702106cf3b3e96750b6845ded4e0299"/>    <section>
    <title>RESET</title>
<indexterm><primary>RESET</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>RESET</secondary></indexterm>
<para><computeroutput>#define RESET   &quot;\033[0m&quot;</computeroutput></para><para>
Definition at line 51 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a8712bfa8efa8889cbb781c239c758b60"/>    <section>
    <title>TEST_DECLARE</title>
<indexterm><primary>TEST_DECLARE</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_DECLARE</secondary></indexterm>
<para><computeroutput>#define TEST_DECLARE( FUN)   <link linkend="_structtest__status__t">test_status_t</link> test_ ## FUN(<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>);</computeroutput></para><para>
Definition at line 91 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ae87f348ecd39f945ab90e0726d8ee446"/>    <section>
    <title>TEST_ENTRY</title>
<indexterm><primary>TEST_ENTRY</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_ENTRY</secondary></indexterm>
<para><computeroutput>#define TEST_ENTRY( FUN)   { #FUN, test_ ## FUN, 0, 0 },</computeroutput></para><para>
Definition at line 92 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a8e86e453457fcb25ff3e800e78b025db"/>    <section>
    <title>TEST_IMPL</title>
<indexterm><primary>TEST_IMPL</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_IMPL</secondary></indexterm>
<para><computeroutput>#define TEST_IMPL( ...)   <link linkend="_test_2include_2common_8h_1ae4b532a93c757194ec73b6790a3e6b1f">EXPAND</link>(<link linkend="_test_2include_2common_8h_1ab49dd9812834eb7198e9a0461cff2349">TEST_IMPL_CHOOSER</link>(__VA_ARGS__)(__VA_ARGS__))</computeroutput></para><para>
Definition at line 111 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ac58ab4b243b3a0880b2da1af57ee36a0"/>    <section>
    <title>TEST_IMPL_ARG1</title>
<indexterm><primary>TEST_IMPL_ARG1</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_IMPL_ARG1</secondary></indexterm>
<para><computeroutput>#define TEST_IMPL_ARG1( FUN)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;<link linkend="_structtest__status__t">test_status_t</link>&#32;test_&#32;##&#32;FUN&#32;(<emphasis role="keywordtype">void</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;test_status_t&#32;test_&#32;##&#32;FUN()
</programlisting><para>
Definition at line 101 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1adb64b3512bff98ba246917157c625ea3"/>    <section>
    <title>TEST_IMPL_ARG2</title>
<indexterm><primary>TEST_IMPL_ARG2</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_IMPL_ARG2</secondary></indexterm>
<para><computeroutput>#define TEST_IMPL_ARG2( PREFIX,  FUN)   <link linkend="_test_2include_2common_8h_1ac58ab4b243b3a0880b2da1af57ee36a0">TEST_IMPL_ARG1</link>(PREFIX ## FUN)</computeroutput></para><para>
Definition at line 105 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a5e289b601446282ae5c8398983aac8c2"/>    <section>
    <title>TEST_IMPL_ARG3</title>
<indexterm><primary>TEST_IMPL_ARG3</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_IMPL_ARG3</secondary></indexterm>
<para><computeroutput>#define TEST_IMPL_ARG3( <link linkend="_glext_8h_1a4b247ab422408c1761a36f9034c2585b">arg1</link>,  <link linkend="_glext_8h_1a5aee5a44bf92a9837fea48e41ef0df57">arg2</link>,  <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link>,  ...)   <link linkend="_glext_8h_1a525a52cc20e1aa70741e5c7dae172f25">arg3</link></computeroutput></para><para>
Definition at line 106 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1ab49dd9812834eb7198e9a0461cff2349"/>    <section>
    <title>TEST_IMPL_CHOOSER</title>
<indexterm><primary>TEST_IMPL_CHOOSER</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_IMPL_CHOOSER</secondary></indexterm>
<para><computeroutput>#define TEST_IMPL_CHOOSER( ...)   <link linkend="_test_2include_2common_8h_1ae4b532a93c757194ec73b6790a3e6b1f">EXPAND</link>(<link linkend="_test_2include_2common_8h_1a5e289b601446282ae5c8398983aac8c2">TEST_IMPL_ARG3</link>(__VA_ARGS__, <link linkend="_test_2include_2common_8h_1adb64b3512bff98ba246917157c625ea3">TEST_IMPL_ARG2</link>, <link linkend="_test_2include_2common_8h_1ac58ab4b243b3a0880b2da1af57ee36a0">TEST_IMPL_ARG1</link>))</computeroutput></para><para>
Definition at line 108 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a93cbf104add07315fefaa6ca453cd7b1"/>    <section>
    <title>TEST_LIST</title>
<indexterm><primary>TEST_LIST</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_LIST</secondary></indexterm>
<para><computeroutput>#define TEST_LIST   static <link linkend="_structtest__entry__t">test_entry_t</link> tests[] =</computeroutput></para><para>
Definition at line 93 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a81d97b2292c59c9c556bd9fbee21eb96"/>    <section>
    <title>TEST_OK</title>
<indexterm><primary>TEST_OK</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_OK</secondary></indexterm>
<para><computeroutput>#define TEST_OK   1</computeroutput></para><para>
Definition at line 98 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096"/>    <section>
    <title>TEST_SUCCESS</title>
<indexterm><primary>TEST_SUCCESS</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>TEST_SUCCESS</secondary></indexterm>
<para><computeroutput>#define TEST_SUCCESS   return (<link linkend="_structtest__status__t">test_status_t</link>){<link linkend="_tinycthread_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>, <link linkend="_test_2include_2common_8h_1a81d97b2292c59c9c556bd9fbee21eb96">TEST_OK</link>};</computeroutput></para><para>
Definition at line 99 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a87b537f5fa5c109d3c05c13d6b18f382"/>    <section>
    <title>WHITE</title>
<indexterm><primary>WHITE</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>WHITE</secondary></indexterm>
<para><computeroutput>#define WHITE   &quot;\033[37m&quot;             /* White */</computeroutput></para><para>
Definition at line 59 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1abf681265909adf3d3e8116c93c0ba179"/>    <section>
    <title>YELLOW</title>
<indexterm><primary>YELLOW</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>YELLOW</secondary></indexterm>
<para><computeroutput>#define YELLOW   &quot;\033[33m&quot;             /* Yellow */</computeroutput></para><para>
Definition at line 55 of file common.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_test_2include_2common_8h_1a33b718b14c185d20daf5c94ebf3fff62"/>    <section>
    <title>fntest</title>
<indexterm><primary>fntest</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>fntest</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structtest__status__t">test_status_t</link>(* fntest) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</computeroutput></para><para>
Definition at line 40 of file common.h.</para>
    </section><anchor xml:id="_test_2include_2common_8h_1a2444282171efe86073345d93bd55217c"/>    <section>
    <title>test_entry_t</title>
<indexterm><primary>test_entry_t</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>test_entry_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structtest__entry__t">test_entry_t</link> <link linkend="_structtest__entry__t">test_entry_t</link></computeroutput></para>    </section><anchor xml:id="_test_2include_2common_8h_1aa64d4e1c1193ec71decf74846d01503b"/>    <section>
    <title>test_status_t</title>
<indexterm><primary>test_status_t</primary><secondary>common.h</secondary></indexterm>
<indexterm><primary>common.h</primary><secondary>test_status_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structtest__status__t">test_status_t</link> <link linkend="_structtest__status__t">test_status_t</link></computeroutput></para></section>
</section>
</section>
