<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_splitview_8c">
<title>deps/glfw/examples/splitview.c File Reference</title>
<indexterm><primary>deps/glfw/examples/splitview.c</primary></indexterm>
<programlisting>#include &lt;glad/gl.h&gt;
#include &lt;GLFW/glfw3.h&gt;
#include &lt;math.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;linmath.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_splitview_8c_1a09f9c3bf094ecaf707c673924ffd615a">GLAD_GL_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_splitview_8c_1a088324ad8995e3eb76024e3e79083d48">GLFW_INCLUDE_NONE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_splitview_8c_1acfb6d5cd05fe03a42972c0c57cf73506">TORUS_MAJOR</link>   1.5</para>
</listitem>
            <listitem><para>#define <link linkend="_splitview_8c_1ac75210c23b87fc15bd89025847226a7e">TORUS_MINOR</link>   0.5</para>
</listitem>
            <listitem><para>#define <link linkend="_splitview_8c_1a6b35feaaa1487695b330b068ba41a91c">TORUS_MAJOR_RES</link>   32</para>
</listitem>
            <listitem><para>#define <link linkend="_splitview_8c_1ac73cef19ed0e92c4b98b538f7ea96ccc">TORUS_MINOR_RES</link>   32</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_splitview_8c_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_splitview_8c_1a09f9c3bf094ecaf707c673924ffd615a"/>    <section>
    <title>GLAD_GL_IMPLEMENTATION</title>
<indexterm><primary>GLAD_GL_IMPLEMENTATION</primary><secondary>splitview.c</secondary></indexterm>
<indexterm><primary>splitview.c</primary><secondary>GLAD_GL_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define GLAD_GL_IMPLEMENTATION</computeroutput></para><para>
Definition at line 13 of file splitview.c.</para>
    </section><anchor xml:id="_splitview_8c_1a088324ad8995e3eb76024e3e79083d48"/>    <section>
    <title>GLFW_INCLUDE_NONE</title>
<indexterm><primary>GLFW_INCLUDE_NONE</primary><secondary>splitview.c</secondary></indexterm>
<indexterm><primary>splitview.c</primary><secondary>GLFW_INCLUDE_NONE</secondary></indexterm>
<para><computeroutput>#define GLFW_INCLUDE_NONE</computeroutput></para><para>
Definition at line 15 of file splitview.c.</para>
    </section><anchor xml:id="_splitview_8c_1acfb6d5cd05fe03a42972c0c57cf73506"/>    <section>
    <title>TORUS_MAJOR</title>
<indexterm><primary>TORUS_MAJOR</primary><secondary>splitview.c</secondary></indexterm>
<indexterm><primary>splitview.c</primary><secondary>TORUS_MAJOR</secondary></indexterm>
<para><computeroutput>#define TORUS_MAJOR   1.5</computeroutput></para><para>
Definition at line 55 of file splitview.c.</para>
    </section><anchor xml:id="_splitview_8c_1a6b35feaaa1487695b330b068ba41a91c"/>    <section>
    <title>TORUS_MAJOR_RES</title>
<indexterm><primary>TORUS_MAJOR_RES</primary><secondary>splitview.c</secondary></indexterm>
<indexterm><primary>splitview.c</primary><secondary>TORUS_MAJOR_RES</secondary></indexterm>
<para><computeroutput>#define TORUS_MAJOR_RES   32</computeroutput></para><para>
Definition at line 57 of file splitview.c.</para>
    </section><anchor xml:id="_splitview_8c_1ac75210c23b87fc15bd89025847226a7e"/>    <section>
    <title>TORUS_MINOR</title>
<indexterm><primary>TORUS_MINOR</primary><secondary>splitview.c</secondary></indexterm>
<indexterm><primary>splitview.c</primary><secondary>TORUS_MINOR</secondary></indexterm>
<para><computeroutput>#define TORUS_MINOR   0.5</computeroutput></para><para>
Definition at line 56 of file splitview.c.</para>
    </section><anchor xml:id="_splitview_8c_1ac73cef19ed0e92c4b98b538f7ea96ccc"/>    <section>
    <title>TORUS_MINOR_RES</title>
<indexterm><primary>TORUS_MINOR_RES</primary><secondary>splitview.c</secondary></indexterm>
<indexterm><primary>splitview.c</primary><secondary>TORUS_MINOR_RES</secondary></indexterm>
<para><computeroutput>#define TORUS_MINOR_RES   32</computeroutput></para><para>
Definition at line 58 of file splitview.c.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_splitview_8c_1a840291bc02cba5474a4cb46a9b9566fe"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>splitview.c</secondary></indexterm>
<indexterm><primary>splitview.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 486 of file splitview.c.</para>
<programlisting>487 {
488 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>;
489 
490 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialise&#32;GLFW</emphasis>
491 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_group__init_1gab41771f0215a2e0afb4cf1cf98082d40">glfwInit</link>())
492 &#32;&#32;&#32;&#32;{
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;initialize&#32;GLFW\n&quot;</emphasis>);
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
495 &#32;&#32;&#32;&#32;}
496 
497 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1ga2cdf86fdcb7722fb8829c4e201607535">GLFW_SAMPLES</link>,&#32;4);
498 
499 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Open&#32;OpenGL&#32;window</emphasis>
500 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_group__window_1ga680a02abe0e4494b6759d5703240713e">glfwCreateWindow</link>(500,&#32;500,&#32;<emphasis role="stringliteral">&quot;Split&#32;view&#32;demo&quot;</emphasis>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
501 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
502 &#32;&#32;&#32;&#32;{
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;open&#32;GLFW&#32;window\n&quot;</emphasis>);
504 
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
507 &#32;&#32;&#32;&#32;}
508 
509 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;callback&#32;functions</emphasis>
510 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;framebufferSizeFun);
511 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;windowRefreshFun);
512 &#32;&#32;&#32;&#32;<link linkend="_group__input_1ga74124d0eff27040fd10e4df9e17d129c">glfwSetCursorPosCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;cursorPosFun);
513 &#32;&#32;&#32;&#32;<link linkend="_group__input_1gab8f17646f43cdca14e5095512618fdf6">glfwSetMouseButtonCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;mouseButtonFun);
514 &#32;&#32;&#32;&#32;<link linkend="_group__input_1gaa4cbcb81b939b8800e44cea971ddae47">glfwSetKeyCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;key_callback);
515 
516 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Enable&#32;vsync</emphasis>
517 &#32;&#32;&#32;&#32;<link linkend="_group__context_1gafd76c93e15ec8b0b90506a9936a46185">glfwMakeContextCurrent</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
518 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a7e9e0ebe65864f5f2bcd289c5736041b">gladLoadGL</link>(<link linkend="_group__context_1ga0e8af175218929615c16e74938c10f2a">glfwGetProcAddress</link>);
519 &#32;&#32;&#32;&#32;<link linkend="_group__context_1ga12a595c06947cec4967c6e1f14210a8a">glfwSwapInterval</link>(1);
520 
521 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_gl_8h_1aa496c23a9b9b1064e5cec457ecc1ff2f">GLAD_GL_ARB_multisample</link>&#32;||&#32;<link linkend="_glad_8h_1a23a74c1c352ce0d74700bfed06a636e5">GLAD_GL_VERSION_1_3</link>)
522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a3f7fa0df22505dd09a24a4e1e74eca09">glEnable</link>(<link linkend="_gl_8h_1af8a2a4cdd1572339a01b657a3a37d856">GL_MULTISAMPLE_ARB</link>);
523 
524 &#32;&#32;&#32;&#32;<link linkend="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e">glfwGetFramebufferSize</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
525 &#32;&#32;&#32;&#32;framebufferSizeFun(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
526 
527 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Main&#32;loop</emphasis>
528 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)
529 &#32;&#32;&#32;&#32;{
530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;redraw&#32;if&#32;we&#32;need&#32;to</emphasis>
531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_redraw)
532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;windowRefreshFun(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
533 
534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wait&#32;for&#32;new&#32;events</emphasis>
535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link>();
536 
537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;window&#32;should&#32;be&#32;closed</emphasis>
538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_group__window_1gaa6162f67dfa38b8beda2fea623649332">glfwWindowShouldClose</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
540 &#32;&#32;&#32;&#32;}
541 
542 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Close&#32;OpenGL&#32;window&#32;and&#32;terminate&#32;GLFW</emphasis>
543 &#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
544 
545 &#32;&#32;&#32;&#32;exit(EXIT_SUCCESS);
546 }
</programlisting></section>
</section>
</section>
