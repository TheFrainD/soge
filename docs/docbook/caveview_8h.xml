<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_caveview_8h">
<title>deps/stb/tests/caveview/caveview.h File Reference</title>
<indexterm><primary>deps/stb/tests/caveview/caveview.h</primary></indexterm>
<programlisting>#include &quot;stb.h&quot;
#include &quot;stb_voxel_render.h&quot;
#include &quot;cave_parse.h&quot;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structraw__mesh">raw_mesh</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_caveview_8h_1a2a1d7bfce7a2a92571115ed3acfb6a19">BUILD_QUAD_MAX</link>   400000</para>
</listitem>
            <listitem><para>#define <link linkend="_caveview_8h_1afa950acf77b651e25839f9fffcc15e3a">BUILD_BUFFER_SIZE</link>   (4*4*<link linkend="_caveview_8h_1a2a1d7bfce7a2a92571115ed3acfb6a19">BUILD_QUAD_MAX</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_caveview_8h_1a4d65dca8ffc1cd92783b26732044ba59">FACE_BUFFER_SIZE</link>   (  4*<link linkend="_caveview_8h_1a2a1d7bfce7a2a92571115ed3acfb6a19">BUILD_QUAD_MAX</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1a24f0dbbfdca90a74902964396c137bac">mesh_init</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1a19d602180d3af1e1e3969518075548cc">render_init</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1a5a106573dea6ac6f71be5e80fb56eefc">world_init</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1aefd62d461236c6e9ced738eac9d8042c">ods</link> (char *fmt,...)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1af74c70130c88949f4d2bac551594d41f">reset_cache_size</link> (int <link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1a2a4f9ffe000359ba183865da3f860ab5">render_caves</link> (float pos[3])</para>
</listitem>
            <listitem><para><link linkend="_structfast__chunk">fast_chunk</link> * <link linkend="_caveview_8h_1a7c54b9b85359841f7dbe539558bc5aa5">get_converted_fastchunk</link> (int chunk_x, int chunk_y)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1ab4e47a2bc64f10cabe87c675e9b2bcc5">build_chunk</link> (int chunk_x, int chunk_y, <link linkend="_structfast__chunk">fast_chunk</link> *fc_table[4][4], <link linkend="_structraw__mesh">raw_mesh</link> *rm)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_caveview_8h_1a65286ae93fc1fc5e6e88af8d2f02a731">deref_fastchunk</link> (<link linkend="_structfast__chunk">fast_chunk</link> *fc)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_caveview_8h_1afa950acf77b651e25839f9fffcc15e3a"/>    <section>
    <title>BUILD_BUFFER_SIZE</title>
<indexterm><primary>BUILD_BUFFER_SIZE</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>BUILD_BUFFER_SIZE</secondary></indexterm>
<para><computeroutput>#define BUILD_BUFFER_SIZE   (4*4*<link linkend="_caveview_8h_1a2a1d7bfce7a2a92571115ed3acfb6a19">BUILD_QUAD_MAX</link>)</computeroutput></para><para>
Definition at line 29 of file caveview.h.</para>
    </section><anchor xml:id="_caveview_8h_1a2a1d7bfce7a2a92571115ed3acfb6a19"/>    <section>
    <title>BUILD_QUAD_MAX</title>
<indexterm><primary>BUILD_QUAD_MAX</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>BUILD_QUAD_MAX</secondary></indexterm>
<para><computeroutput>#define BUILD_QUAD_MAX   400000</computeroutput></para><para>
Definition at line 28 of file caveview.h.</para>
    </section><anchor xml:id="_caveview_8h_1a4d65dca8ffc1cd92783b26732044ba59"/>    <section>
    <title>FACE_BUFFER_SIZE</title>
<indexterm><primary>FACE_BUFFER_SIZE</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>FACE_BUFFER_SIZE</secondary></indexterm>
<para><computeroutput>#define FACE_BUFFER_SIZE   (  4*<link linkend="_caveview_8h_1a2a1d7bfce7a2a92571115ed3acfb6a19">BUILD_QUAD_MAX</link>)</computeroutput></para><para>
Definition at line 30 of file caveview.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_caveview_8h_1ab4e47a2bc64f10cabe87c675e9b2bcc5"/>    <section>
    <title>build_chunk()</title>
<indexterm><primary>build_chunk</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>build_chunk</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> build_chunk (int chunk_x, int chunk_y, <link linkend="_structfast__chunk">fast_chunk</link> * fc_table[4][4], <link linkend="_structraw__mesh">raw_mesh</link> * rm)</computeroutput></para><para>
Definition at line 602 of file cave_mesher.c.</para>
<programlisting>603 {
604 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>,<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>;
605 &#32;&#32;&#32;<link linkend="_structstbvox__input__description">stbvox_input_description</link>&#32;*map;
606 
607 <emphasis role="preprocessor">&#32;&#32;&#32;#ifdef&#32;VHEIGHT_TEST</emphasis>
608 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;vheight[34][34][18];
609 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
610 
611 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBVOX_CONFIG_DISABLE_TEX2</emphasis>
612 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;tex2_choice[34][34][18];
613 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
614 
615 &#32;&#32;&#32;assert((chunk_x&#32;&amp;&#32;1)&#32;==&#32;0);
616 &#32;&#32;&#32;assert((chunk_y&#32;&amp;&#32;1)&#32;==&#32;0);
617 
618 &#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1a2d8a1b1dea7e8a743e0f5aafb434befb">cx</link>&#32;=&#32;chunk_x;
619 &#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1a9098748aa135ddeeb362867175cc6751">cy</link>&#32;=&#32;chunk_y;
620 
621 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a089559775ad9ffc7671d147ef40f6509">stbvox_set_input_stride</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;34*18,&#32;18);
622 
623 &#32;&#32;&#32;assert(rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>.<link linkend="_structstbvox__mesh__maker_1ae83f21625eef0fb8db4d55900b1e8d74">input</link>.<link linkend="_structstbvox__input__description_1a18e00a30f954f1ab1a1a5ad69e35b8ee">geometry</link>&#32;==&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
624 
625 &#32;&#32;&#32;map&#32;=&#32;<link linkend="_stb__voxel__render_8h_1adadf81990fab203a9b48c738922899e1">stbvox_get_input_description</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>);
626 &#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a85cf8f5f29e98cd445900b131a9a8a8d">block_tex1_face</link>&#32;=&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>;
627 &#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a4cba1da418a53a010b75d6cee593aece">block_color_face</link>&#32;=&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>;
628 &#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1acdcebc8d321327f365bbd3a3468f7f2d">block_geometry</link>&#32;=&#32;<link linkend="_cave__mesher_8c_1ae01a977fd1f7c889f186baee1076b732">minecraft_geom_for_blocktype</link>;
629 
630 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a34226517e08ca1da34b39d34a5c31031">stbvox_reset_buffers</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>);
631 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a3b24ab8855010267a0e93541d1673fb9">stbvox_set_buffer</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;0,&#32;0,&#32;rm-&gt;<link linkend="_structraw__mesh_1aeea914666948a38adf71765721139455">build_buffer</link>,&#32;<link linkend="_caveview_8h_1afa950acf77b651e25839f9fffcc15e3a">BUILD_BUFFER_SIZE</link>);
632 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a3b24ab8855010267a0e93541d1673fb9">stbvox_set_buffer</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;0,&#32;1,&#32;rm-&gt;<link linkend="_structraw__mesh_1a5e8e2e14af2f1cfa02d66f7a2fcb0a81">face_buffer</link>&#32;,&#32;<link linkend="_caveview_8h_1a4d65dca8ffc1cd92783b26732044ba59">FACE_BUFFER_SIZE</link>);
633 
634 &#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a68f6d2ab5ba77e7e80021d60a2af7019">blocktype</link>&#32;=&#32;&amp;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[1][1][1];&#32;<emphasis role="comment">//&#32;this&#32;is&#32;(0,0,0),&#32;but&#32;we&#32;need&#32;to&#32;be&#32;able&#32;to&#32;query&#32;off&#32;the&#32;edges</emphasis>
635 &#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a6b64e4cf0061bfe6dbae7981a002ab77">lighting</link>&#32;=&#32;&amp;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>[1][1][1];
636 
637 &#32;&#32;&#32;<emphasis role="comment">//&#32;fill&#32;in&#32;the&#32;top&#32;two&#32;rows&#32;of&#32;the&#32;buffer</emphasis>
638 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>=0;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>)&#32;{
639 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>=0;&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>)&#32;{
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][16]&#32;=&#32;0;
641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>&#32;[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][16]&#32;=&#32;255;
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][17]&#32;=&#32;0;
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>&#32;[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][17]&#32;=&#32;255;
644 &#32;&#32;&#32;&#32;&#32;&#32;}
645 &#32;&#32;&#32;}
646 
647 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBVOX_CONFIG_DISABLE_TEX2</emphasis>
648 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>=0;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>)&#32;{
649 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>=0;&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>)&#32;{
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;px&#32;=&#32;chunk_x*16&#32;+&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;-&#32;1;
651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;py&#32;=&#32;chunk_y*16&#32;+&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;-&#32;1;
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dist&#32;=&#32;(float)&#32;sqrt(px*px&#32;+&#32;py*py);
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003">s1</link>&#32;=&#32;(float)&#32;sin(dist&#32;/&#32;16),&#32;s2,&#32;s3;
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dist&#32;=&#32;(float)&#32;sqrt((px-80)*(px-80)&#32;+&#32;(py-50)*(py-50));
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s2&#32;=&#32;(float)&#32;sin(dist&#32;/&#32;11);
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>=0;&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>&#32;&lt;&#32;18;&#32;++<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>)&#32;{
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s3&#32;=&#32;(float)&#32;sin(<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>&#32;*&#32;3.141592&#32;/&#32;8);
658 
659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s3&#32;=&#32;<link linkend="_glext_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003">s1</link>*s2*s3;
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tex2_choice[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>]&#32;=&#32;63&#32;&amp;&#32;(int)&#32;<link linkend="_stb_8h_1ab2a4b1beb0e146a2cd0fed985d185909">stb_linear_remap</link>(s3,-1,1,&#32;-20,83);
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
662 &#32;&#32;&#32;&#32;&#32;&#32;}
663 &#32;&#32;&#32;}
664 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
665 
666 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>=256-16;&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>&#32;&gt;=&#32;<link linkend="_cave__mesher_8c_1af205db34cd0a183e5e3481c4f8baa716">SKIP_TERRAIN</link>;&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>&#32;-=&#32;16)
667 &#32;&#32;&#32;{
668 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;z0&#32;=&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>;
669 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;z1&#32;=&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>+16;
670 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(z1&#32;==&#32;256)&#32;z1&#32;=&#32;255;
671 
672 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a72869edd94d6159ab80497d6fcf71071">make_map_segment_for_superchunk_preconvert</link>(chunk_x,&#32;chunk_y,&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>&#32;&gt;&gt;&#32;4,&#32;fc_table,&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>,&#32;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>);
673 
674 &#32;&#32;&#32;&#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a68f6d2ab5ba77e7e80021d60a2af7019">blocktype</link>&#32;=&#32;&amp;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[1][1][1-<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>];&#32;<emphasis role="comment">//&#32;specify&#32;location&#32;of&#32;0,0,0&#32;so&#32;that&#32;accessing&#32;z0..z1&#32;gets&#32;right&#32;data</emphasis>
675 &#32;&#32;&#32;&#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a6b64e4cf0061bfe6dbae7981a002ab77">lighting</link>&#32;=&#32;&amp;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>[1][1][1-<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>];
676 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#ifndef&#32;STBVOX_CONFIG_DISABLE_TEX2</emphasis>
677 &#32;&#32;&#32;&#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a21f1647c23699b973eecb6b2ea50e721">tex2</link>&#32;=&#32;&amp;tex2_choice[1][1][1-<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>];
678 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
679 
680 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;VHEIGHT_TEST</emphasis>
681 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hacky&#32;test&#32;of&#32;vheight</emphasis>
682 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>=0;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>)&#32;{
683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>=0;&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>)&#32;{
684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>=0;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;&lt;&#32;17;&#32;++<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>)&#32;{
686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>]&#32;!=&#32;0&#32;&amp;&amp;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>+1]&#32;==&#32;0)&#32;{
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;topmost&#32;block</emphasis>
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vheight[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>]&#32;=&#32;rand()&#32;&amp;&#32;255;
689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>]&#32;=&#32;168;
690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;&gt;&#32;0&#32;&amp;&amp;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>]&#32;!=&#32;0&#32;&amp;&amp;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>-1]&#32;==&#32;0)&#32;{
691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bottommost&#32;block</emphasis>
692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vheight[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>]&#32;=&#32;((rand()&#32;%&#32;3)&#32;&lt;&lt;&#32;6)&#32;+&#32;((rand()&#32;%&#32;3)&#32;&lt;&lt;&#32;4)&#32;+&#32;((rand()&#32;%&#32;3)&#32;&lt;&lt;&#32;2)&#32;+&#32;(rand()&#32;%&#32;3);
693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>]&#32;=&#32;169;
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vheight[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>]&#32;=&#32;<link linkend="_stb__voxel__render_8h_1a7481d3530d34c5048938868910e259e3">STBVOX_MAKE_VHEIGHT</link>(2,2,2,2);&#32;<emphasis role="comment">//&#32;flat&#32;top</emphasis>
697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
698 &#32;&#32;&#32;&#32;&#32;&#32;}
699 &#32;&#32;&#32;&#32;&#32;&#32;map-&gt;<link linkend="_structstbvox__input__description_1a02de8f98d512dc9cef6094ad7571be05">vheight</link>&#32;=&#32;&amp;vheight[1][1][1-<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>];
700 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
701 
702 &#32;&#32;&#32;&#32;&#32;&#32;{
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a63fbb8703cf2c2718e6a0b4a90db00e6">stbvox_set_input_range</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;0,0,z0,&#32;32,32,z1);
704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1aae8b2a3e95db09861fef397aeb7cf10d">stbvox_set_default_mesh</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;0);
705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1ab792b164e02789bce6e2ba96a4b8f935">stbvox_make_mesh</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>);
706 &#32;&#32;&#32;&#32;&#32;&#32;}
707 
708 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;copy&#32;the&#32;bottom&#32;two&#32;rows&#32;of&#32;data&#32;up&#32;to&#32;the&#32;top</emphasis>
709 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>=0;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>)&#32;{
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>=0;&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;&lt;&#32;34;&#32;++<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>)&#32;{
711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][16]&#32;=&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][0];
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][17]&#32;=&#32;rm-&gt;<link linkend="_structraw__mesh_1aed4362c13d96da67cf5237df5bed86cc">sv_blocktype</link>[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][1];
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>&#32;[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][16]&#32;=&#32;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>&#32;[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][0];
714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>&#32;[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][17]&#32;=&#32;rm-&gt;<link linkend="_structraw__mesh_1afb37f5f58e50feb7d873c2ee28dcf00c">sv_lighting</link>&#32;[<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>][<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>][1];
715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
716 &#32;&#32;&#32;&#32;&#32;&#32;}
717 &#32;&#32;&#32;}
718 
719 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a4592b690afe4825bfabdfd9ae29fb35e">stbvox_set_mesh_coordinates</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;chunk_x*16,&#32;chunk_y*16,&#32;0);
720 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a0a8668048f7cca70ef7043261761da90">stbvox_get_transform</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;rm-&gt;<link linkend="_structraw__mesh_1a85966417fa9b2b01fa2deb493d59996a">transform</link>);
721 
722 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a63fbb8703cf2c2718e6a0b4a90db00e6">stbvox_set_input_range</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;0,0,0,&#32;32,32,255);
723 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a0ad8a7764f93c0592671bcf0e246dc6e">stbvox_get_bounds</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;rm-&gt;<link linkend="_structraw__mesh_1ad56f04c63fd9fc1263329916029d6222">bounds</link>);
724 
725 &#32;&#32;&#32;rm-&gt;<link linkend="_structraw__mesh_1aaa6e0d90284bfa6172577269e7d1d84a">num_quads</link>&#32;=&#32;<link linkend="_stb__voxel__render_8h_1ace18e150b58146e2ec7ecba5ca0517b6">stbvox_get_quad_count</link>(&amp;rm-&gt;<link linkend="_structraw__mesh_1a39eed89ae7fec0a09b73e75946c57640">mm</link>,&#32;0);
726 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1a65286ae93fc1fc5e6e88af8d2f02a731"/>    <section>
    <title>deref_fastchunk()</title>
<indexterm><primary>deref_fastchunk</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>deref_fastchunk</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> deref_fastchunk (<link linkend="_structfast__chunk">fast_chunk</link> * fc)</computeroutput></para><para>
Definition at line 510 of file cave_mesher.c.</para>
<programlisting>511 {
512 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fc)&#32;{
513 &#32;&#32;&#32;&#32;&#32;&#32;assert(fc-&gt;<link linkend="_structfast__chunk_1a0bcf2001e68fdcf8e5eaf83a7ea83440">refcount</link>&#32;&gt;&#32;0);
514 &#32;&#32;&#32;&#32;&#32;&#32;--fc-&gt;<link linkend="_structfast__chunk_1a0bcf2001e68fdcf8e5eaf83a7ea83440">refcount</link>;
515 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fc-&gt;<link linkend="_structfast__chunk_1a0bcf2001e68fdcf8e5eaf83a7ea83440">refcount</link>&#32;==&#32;0)&#32;{
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(fc-&gt;<link linkend="_structfast__chunk_1aea03b39185c1d472a7f61f86529f0863">pointer_to_free</link>);
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(fc);
518 &#32;&#32;&#32;&#32;&#32;&#32;}
519 &#32;&#32;&#32;}
520 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1a7c54b9b85359841f7dbe539558bc5aa5"/>    <section>
    <title>get_converted_fastchunk()</title>
<indexterm><primary>get_converted_fastchunk</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>get_converted_fastchunk</secondary></indexterm>
<para><computeroutput><link linkend="_structfast__chunk">fast_chunk</link>* get_converted_fastchunk (int chunk_x, int chunk_y)</computeroutput></para><para>
Definition at line 534 of file cave_mesher.c.</para>
<programlisting>535 {
536 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slot_x&#32;=&#32;(chunk_x&#32;&amp;&#32;(<link linkend="_cave__mesher_8c_1adc2cfac3a357c5424aafa9d351a2e6ea">cache_size</link>-1));
537 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slot_y&#32;=&#32;(chunk_y&#32;&amp;&#32;(<link linkend="_cave__mesher_8c_1adc2cfac3a357c5424aafa9d351a2e6ea">cache_size</link>-1));
538 &#32;&#32;&#32;<link linkend="_structfast__chunk">fast_chunk</link>&#32;*fc;
539 &#32;&#32;&#32;<link linkend="_structcached__converted__chunk">cached_converted_chunk</link>&#32;*ccc;
540 &#32;&#32;&#32;SDL_LockMutex(<link linkend="_cave__mesher_8c_1a784ba0617dbc4eec455188b9671295aa">chunk_cache_mutex</link>);
541 &#32;&#32;&#32;ccc&#32;=&#32;&amp;<link linkend="_cave__mesher_8c_1ab799c6e56a65a1a9a2c089c9d4b81de9">chunk_cache</link>[slot_y][slot_x];
542 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ccc-&gt;<link linkend="_structcached__converted__chunk_1a890fc62a8689a97e24ffd59097770836">valid</link>)&#32;{
543 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ccc-&gt;<link linkend="_structcached__converted__chunk_1a720a08b6d6b18cf740d807dd119c52c0">chunk_x</link>&#32;==&#32;chunk_x&#32;&amp;&amp;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1a5a71274f9dc7a89cd3e962a719e0ac7f">chunk_y</link>&#32;==&#32;chunk_y)&#32;{
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structfast__chunk">fast_chunk</link>&#32;*fc&#32;=&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>;
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fc)
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++fc-&gt;<link linkend="_structfast__chunk_1a0bcf2001e68fdcf8e5eaf83a7ea83440">refcount</link>;
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SDL_UnlockMutex(<link linkend="_cave__mesher_8c_1a784ba0617dbc4eec455188b9671295aa">chunk_cache_mutex</link>);
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fc;
549 &#32;&#32;&#32;&#32;&#32;&#32;}
550 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>)&#32;{
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a65286ae93fc1fc5e6e88af8d2f02a731">deref_fastchunk</link>(ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>);
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1a890fc62a8689a97e24ffd59097770836">valid</link>&#32;=&#32;0;
554 &#32;&#32;&#32;&#32;&#32;&#32;}
555 &#32;&#32;&#32;}
556 &#32;&#32;&#32;SDL_UnlockMutex(<link linkend="_cave__mesher_8c_1a784ba0617dbc4eec455188b9671295aa">chunk_cache_mutex</link>);
557 
558 &#32;&#32;&#32;fc&#32;=&#32;<link linkend="_cave__parse_8c_1ac3885b139871d53a3d39cca5380075c9">get_decoded_fastchunk_uncached</link>(chunk_x,&#32;-chunk_y);
559 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fc)
560 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a147e37fcae806febbdaac22c776d5685">convert_fastchunk_inplace</link>(fc);
561 
562 &#32;&#32;&#32;SDL_LockMutex(<link linkend="_cave__mesher_8c_1a784ba0617dbc4eec455188b9671295aa">chunk_cache_mutex</link>);
563 &#32;&#32;&#32;<emphasis role="comment">//&#32;another&#32;thread&#32;might&#32;have&#32;updated&#32;it,&#32;so&#32;before&#32;we&#32;overwrite&#32;it...</emphasis>
564 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>)&#32;{
565 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a65286ae93fc1fc5e6e88af8d2f02a731">deref_fastchunk</link>(ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>);
566 &#32;&#32;&#32;&#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
567 &#32;&#32;&#32;}
568 
569 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fc)
570 &#32;&#32;&#32;&#32;&#32;&#32;fc-&gt;<link linkend="_structfast__chunk_1a0bcf2001e68fdcf8e5eaf83a7ea83440">refcount</link>&#32;=&#32;1;&#32;<emphasis role="comment">//&#32;1&#32;in&#32;the&#32;cache</emphasis>
571 
572 &#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1a720a08b6d6b18cf740d807dd119c52c0">chunk_x</link>&#32;=&#32;chunk_x;
573 &#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1a5a71274f9dc7a89cd3e962a719e0ac7f">chunk_y</link>&#32;=&#32;chunk_y;
574 &#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1a890fc62a8689a97e24ffd59097770836">valid</link>&#32;=&#32;1;
575 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fc)
576 &#32;&#32;&#32;&#32;&#32;&#32;++fc-&gt;<link linkend="_structfast__chunk_1a0bcf2001e68fdcf8e5eaf83a7ea83440">refcount</link>;
577 &#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>&#32;=&#32;fc;
578 &#32;&#32;&#32;SDL_UnlockMutex(<link linkend="_cave__mesher_8c_1a784ba0617dbc4eec455188b9671295aa">chunk_cache_mutex</link>);
579 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fc;
580 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1a24f0dbbfdca90a74902964396c137bac"/>    <section>
    <title>mesh_init()</title>
<indexterm><primary>mesh_init</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>mesh_init</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> mesh_init (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 803 of file cave_mesher.c.</para>
<programlisting>804 {
805 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
806 
807 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a784ba0617dbc4eec455188b9671295aa">chunk_cache_mutex</link>&#32;=&#32;SDL_CreateMutex();
808 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a9105640f64bd2fca823fa679f99fb62b">chunk_get_mutex</link>&#32;&#32;&#32;=&#32;SDL_CreateMutex();
809 
810 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;256;&#32;++i)&#32;{
811 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[i],&#32;<link linkend="_cave__mesher_8c_1a17dd80d3766327026eae4547eae231fd">minecraft_info</link>[i]+1,&#32;6);
812 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1af38282980cc171915d4acfe5f3e03c90">effective_blocktype</link>[i]&#32;=&#32;(<link linkend="_cave__mesher_8c_1a17dd80d3766327026eae4547eae231fd">minecraft_info</link>[i][0]&#32;==&#32;<link linkend="_cave__mesher_8c_1aa57e16cd48de3b9a989056ff8df26f84a8e25f3fef8ddfd9ae47971d91958d83b">C_empty</link>&#32;?&#32;0&#32;:&#32;i);
813 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1ae01a977fd1f7c889f186baee1076b732">minecraft_geom_for_blocktype</link>[i]&#32;=&#32;<link linkend="_cave__mesher_8c_1adbdd9089890d950d54cd125d4464eab7">geom_map</link>[<link linkend="_cave__mesher_8c_1a17dd80d3766327026eae4547eae231fd">minecraft_info</link>[i][0]];
814 &#32;&#32;&#32;}
815 &#32;&#32;&#32;<emphasis role="comment">//effective_blocktype[50]&#32;=&#32;0;&#32;//&#32;delete&#32;torches</emphasis>
816 
817 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;6*256;&#32;++i)&#32;{
818 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[0][i]&#32;==&#32;40)
819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[0][i]&#32;=&#32;38&#32;|&#32;64;&#32;<emphasis role="comment">//&#32;apply&#32;to&#32;tex1</emphasis>
820 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[0][i]&#32;==&#32;39)
821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[0][i]&#32;=&#32;39&#32;|&#32;64;&#32;<emphasis role="comment">//&#32;apply&#32;to&#32;tex1</emphasis>
822 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[0][i]&#32;==&#32;105)
823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[0][i]&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;emissive</emphasis>
824 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[0][i]&#32;==&#32;212)
825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[0][i]&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;emissive</emphasis>
826 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[0][i]&#32;==&#32;80)
827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[0][i]&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;emissive</emphasis>
828 &#32;&#32;&#32;}
829 
830 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;6;&#32;++i)&#32;{
831 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[172][i]&#32;=&#32;47&#32;|&#32;64;&#32;<emphasis role="comment">//&#32;apply&#32;to&#32;tex1</emphasis>
832 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[178][i]&#32;=&#32;47&#32;|&#32;64;&#32;<emphasis role="comment">//&#32;apply&#32;to&#32;tex1</emphasis>
833 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[18][i]&#32;=&#32;39&#32;|&#32;64;&#32;<emphasis role="comment">//&#32;green</emphasis>
834 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[161][i]&#32;=&#32;37&#32;|&#32;64;&#32;<emphasis role="comment">//&#32;green</emphasis>
835 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[10][i]&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;emissive&#32;lava</emphasis>
836 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[11][i]&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;emissive</emphasis>
837 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//minecraft_color_for_blocktype[56][i]&#32;=&#32;63;&#32;//&#32;emissive&#32;diamond</emphasis>
838 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a33fdd49440ce0309319d973be49dfd0a">minecraft_color_for_blocktype</link>[48][i]&#32;=&#32;63;&#32;<emphasis role="comment">//&#32;emissive&#32;dungeon</emphasis>
839 &#32;&#32;&#32;}
840 
841 <emphasis role="preprocessor">&#32;&#32;&#32;#ifdef&#32;VHEIGHT_TEST</emphasis>
842 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1af38282980cc171915d4acfe5f3e03c90">effective_blocktype</link>[168]&#32;=&#32;168;
843 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[168][0]&#32;=&#32;1;
844 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[168][1]&#32;=&#32;1;
845 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[168][2]&#32;=&#32;1;
846 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[168][3]&#32;=&#32;1;
847 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[168][4]&#32;=&#32;1;
848 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[168][5]&#32;=&#32;1;
849 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1ae01a977fd1f7c889f186baee1076b732">minecraft_geom_for_blocktype</link>[168]&#32;=&#32;<link linkend="_stb__voxel__render_8h_1abe974f22edeef8189603ba75fd90ff3ca7511f84da0693e6147590c76a74480d6">STBVOX_GEOM_floor_vheight_12</link>;
850 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1af38282980cc171915d4acfe5f3e03c90">effective_blocktype</link>[169]&#32;=&#32;169;
851 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[169][0]&#32;=&#32;1;
852 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[169][1]&#32;=&#32;1;
853 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[169][2]&#32;=&#32;1;
854 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[169][3]&#32;=&#32;1;
855 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[169][4]&#32;=&#32;1;
856 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1add8be801e9bdf08c2966ff797143933a">minecraft_tex1_for_blocktype</link>[169][5]&#32;=&#32;1;
857 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1ae01a977fd1f7c889f186baee1076b732">minecraft_geom_for_blocktype</link>[169]&#32;=&#32;<link linkend="_stb__voxel__render_8h_1abe974f22edeef8189603ba75fd90ff3ca62855fb026ed6bb2b93a02f94b9eaacb">STBVOX_GEOM_ceil_vheight_03</link>;
858 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
859 
860 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[53]&#32;=&#32;1;
861 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[67]&#32;=&#32;2;
862 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[108]&#32;=&#32;3;
863 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[109]&#32;=&#32;4;
864 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[114]&#32;=&#32;5;
865 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[136]&#32;=&#32;6;
866 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[156]&#32;=&#32;7;
867 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;256;&#32;++i)
868 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[i])
869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a626c17451761446962cffc9add2ed539">build_stair_rotations</link>(i,&#32;<link linkend="_cave__mesher_8c_1a2015282d41ced055a462520de780e814">remap_data</link>[<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[i]]);
870 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[35]&#32;&#32;=&#32;8;
871 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1addb3a71c75c33215207185a88be4bb62">build_wool_variations</link>(35,&#32;<link linkend="_cave__mesher_8c_1a2015282d41ced055a462520de780e814">remap_data</link>[<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[35]]);
872 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[5]&#32;=&#32;11;
873 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1adcf4dda69d85bc49b9f4babc57587095">build_wood_variations</link>(5,&#32;<link linkend="_cave__mesher_8c_1a2015282d41ced055a462520de780e814">remap_data</link>[<link linkend="_cave__mesher_8c_1a10cae8a4d85b638a4d2f2ce75883552e">remap</link>[5]]);
874 
875 &#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;the&#32;remap&#32;flags&#32;for&#32;these&#32;so&#32;they&#32;write&#32;the&#32;rotation&#32;values</emphasis>
876 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a16709242463cda7c163b826a5da978c5">remap_in_place</link>(54,&#32;9);
877 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1a16709242463cda7c163b826a5da978c5">remap_in_place</link>(146,&#32;10);
878 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1aefd62d461236c6e9ced738eac9d8042c"/>    <section>
    <title>ods()</title>
<indexterm><primary>ods</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>ods</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> ods (char * fmt,  ...)</computeroutput></para><para>
Definition at line 311 of file cave_main.c.</para>
<programlisting>312 {
313 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_structbuffer">buffer</link>[1000];
314 &#32;&#32;&#32;va_list&#32;va;
315 &#32;&#32;&#32;va_start(va,&#32;fmt);
316 &#32;&#32;&#32;<link linkend="_rrsprintf_8h_1a3e41f3ed65b0d392da13d3341751b5a5">vsprintf</link>(<link linkend="_structbuffer">buffer</link>,&#32;fmt,&#32;va);
317 &#32;&#32;&#32;va_end(va);
318 &#32;&#32;&#32;SDL_Log(<emphasis role="stringliteral">&quot;%s&quot;</emphasis>,&#32;<link linkend="_structbuffer">buffer</link>);
319 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1a2a4f9ffe000359ba183865da3f860ab5"/>    <section>
    <title>render_caves()</title>
<indexterm><primary>render_caves</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>render_caves</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> render_caves (float pos[3])</computeroutput></para><para>
Definition at line 752 of file cave_render.c.</para>
<programlisting>753 {
754 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;=&#32;campos[0],&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;=&#32;campos[1];
755 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;qchunk_x,&#32;qchunk_y;
756 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cam_x,&#32;cam_y;
757 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,&#32;rad;
758 
759 &#32;&#32;&#32;compute_frustum();
760 
761 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a1a7fcf5f88dd3987df4f5a83618c8487">chunk_locations</link>&#32;=&#32;<link linkend="_cave__render_8c_1a90766e990c4a0a3299dae681bef26211">chunks_considered</link>&#32;=&#32;<link linkend="_cave__render_8c_1aabc2460c0dbf3bb17bf2c768624a37a2">chunks_in_frustum</link>&#32;=&#32;0;
762 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a7eb76aa1c7fbf02b3f4cf94c13ba7836">quads_considered</link>&#32;=&#32;<link linkend="_cave__render_8c_1a55f891b23463a28bdca885af7b70b4db">quads_rendered</link>&#32;=&#32;0;
763 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a6289a09b47b1176d64fa499faa7c73ce">chunk_storage_total</link>&#32;=&#32;<link linkend="_cave__render_8c_1aac1c4d107c5e708ee713ec9a6ccddc84">chunk_storage_considered</link>&#32;=&#32;<link linkend="_cave__render_8c_1a2a36f03ff6514a6581bbfdb8c6912a5e">chunk_storage_rendered</link>&#32;=&#32;0;
764 
765 &#32;&#32;&#32;cam_x&#32;=&#32;(int)&#32;floor(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>+0.5);
766 &#32;&#32;&#32;cam_y&#32;=&#32;(int)&#32;floor(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>+0.5);
767 
768 &#32;&#32;&#32;qchunk_x&#32;=&#32;(((int)&#32;floor(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)+16)&#32;&gt;&gt;&#32;5)&#32;&lt;&lt;&#32;1;
769 &#32;&#32;&#32;qchunk_y&#32;=&#32;(((int)&#32;floor(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)+16)&#32;&gt;&gt;&#32;5)&#32;&lt;&lt;&#32;1;
770 
771 &#32;&#32;&#32;<link linkend="_glad_8h_1a3f7fa0df22505dd09a24a4e1e74eca09">glEnable</link>(<link linkend="_gl_8h_1a4fda8987c8cb3d921967cd0a5343f174">GL_ALPHA_TEST</link>);
772 &#32;&#32;&#32;<link linkend="_gl_8h_1a32ca79bf6bda18aaf30a055c48a4fd30">glAlphaFunc</link>(<link linkend="_glad_8h_1aa3bfa1f454ff5072bc1b64e7d30e9584">GL_GREATER</link>,&#32;0.5);
773 
774 &#32;&#32;&#32;<link linkend="_stb__glprog_8h_1ab6c9aabf76a35fa89ef35acd64cdd1a7">stbglUseProgram</link>(<link linkend="_cave__render_8c_1a98050f44d02d9c2ee70b8435c84d82e5">main_prog</link>);
775 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a58563743e658ed82deb1c45915be5311">setup_uniforms</link>(campos);&#32;<emphasis role="comment">//&#32;set&#32;uniforms&#32;to&#32;default&#32;values&#32;inefficiently</emphasis>
776 &#32;&#32;&#32;glActiveTextureARB(<link linkend="_glext_8h_1a5c56f2e8fd1ca5abe5f47e76036ec2d5">GL_TEXTURE2_ARB</link>);
777 &#32;&#32;&#32;<link linkend="_stb__glprog_8h_1a9c550b3836b06a4993b1401605653c7e">stbglEnableVertexAttribArray</link>(0);
778 
779 &#32;&#32;&#32;{
780 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;lighting[2][3]&#32;=&#32;{&#32;{&#32;campos[0],campos[1],campos[2]&#32;},&#32;{&#32;0.75,0.75,0.65f&#32;}&#32;};
781 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;bright&#32;=&#32;8;
782 &#32;&#32;&#32;&#32;&#32;&#32;lighting[1][0]&#32;*=&#32;bright;
783 &#32;&#32;&#32;&#32;&#32;&#32;lighting[1][1]&#32;*=&#32;bright;
784 &#32;&#32;&#32;&#32;&#32;&#32;lighting[1][2]&#32;*=&#32;bright;
785 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__glprog_8h_1a252326a1e2ad9dde401ac5c6fbe12c84">stbglUniform3fv</link>(<link linkend="_stb__glprog_8h_1a188b0d913a30b6ebbdd3629aad89fe45">stbgl_find_uniform</link>(<link linkend="_cave__render_8c_1a98050f44d02d9c2ee70b8435c84d82e5">main_prog</link>,&#32;<emphasis role="stringliteral">&quot;light_source&quot;</emphasis>),&#32;2,&#32;lighting[0]);
786 &#32;&#32;&#32;}
787 
788 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__render_8c_1ab714d9bf6480e3842f9174937f6257c9">global_hack</link>)
789 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a780d126fbb25c976ce349b06059ecc66">set_tex2_alpha</link>(<link linkend="_cave__render_8c_1aae02e1ae69339213673af37e15e343b4">tex2_alpha</link>);
790 
791 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a0ced74c1235cfa302b0fda9cba9682e4">num_meshes_uploaded</link>&#32;=&#32;0;
792 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a654d2857d277992878a8c7ff1f740282">update_meshes_from_render_thread</link>();
793 
794 &#32;&#32;&#32;<emphasis role="comment">//&#32;traverse&#32;all&#32;in-range&#32;chunks&#32;and&#32;analyze&#32;them</emphasis>
795 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=-<link linkend="_cave__render_8c_1a7287aa4341d0bc802616e36453418217">view_dist_in_chunks</link>;&#32;j&#32;&lt;=&#32;<link linkend="_cave__render_8c_1a7287aa4341d0bc802616e36453418217">view_dist_in_chunks</link>;&#32;j&#32;+=&#32;2)&#32;{
796 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=-<link linkend="_cave__render_8c_1a7287aa4341d0bc802616e36453418217">view_dist_in_chunks</link>;&#32;i&#32;&lt;=&#32;<link linkend="_cave__render_8c_1a7287aa4341d0bc802616e36453418217">view_dist_in_chunks</link>;&#32;i&#32;+=&#32;2)&#32;{
797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;priority;
798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cx&#32;=&#32;qchunk_x&#32;+&#32;i;
799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cy&#32;=&#32;qchunk_y&#32;+&#32;j;
800 
801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;=&#32;<link linkend="_cave__render_8c_1a7fd43582038fa12183f22d2b5bc70793">compute_priority</link>(cx,&#32;cy,&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(priority&#32;&gt;=&#32;<link linkend="_cave__render_8c_1a538e3a4857cf9635776e05cf1ada9a83">min_priority</link>)&#32;{
803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slot_x&#32;=&#32;(cx&gt;&gt;1)&#32;&amp;&#32;(<link linkend="_cave__render_8c_1a8fa3a95e690c74108521420c97453ac8">CACHED_MESH_NUM_X</link>-1);
804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slot_y&#32;=&#32;(cy&gt;&gt;1)&#32;&amp;&#32;(<link linkend="_cave__render_8c_1ab63e500c94da0daaf2114b8168f3bd06">CACHED_MESH_NUM_Y</link>-1);
805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structchunk__mesh">chunk_mesh</link>&#32;*cm&#32;=&#32;&amp;<link linkend="_cave__render_8c_1acbd6ac4d8dd8e0747a1d33adb6bb90f5">cached_chunk_mesh</link>[slot_y][slot_x];
806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_cave__render_8c_1a1a7fcf5f88dd3987df4f5a83618c8487">chunk_locations</link>;
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;==&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba9403d38ed10dea456e4b628995e4583c">STATE_valid</link>&#32;&amp;&amp;&#32;priority&#32;&gt;=&#32;0)&#32;{
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;if&#32;chunk&#32;pos&#32;actually&#32;matches</emphasis>
809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1a2c3d88a733672817af404c4342ef34b5">chunk_x</link>&#32;!=&#32;cx&#32;||&#32;cm-&gt;<link linkend="_structchunk__mesh_1a115a5548f6ce659c096d3d45defdc7d6">chunk_y</link>&#32;!=&#32;cy)&#32;{
810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;we&#32;have&#32;a&#32;stale&#32;chunk&#32;we&#32;need&#32;to&#32;recreate</emphasis>
811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a8da956987731d72d3d6af47e0c31ace3">free_chunk</link>(slot_x,&#32;slot_y);&#32;<emphasis role="comment">//&#32;it&#32;probably&#32;will&#32;have&#32;already&#32;gotten&#32;freed,&#32;but&#32;just&#32;in&#32;case</emphasis>
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;==&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba1a69b1351d5fad0def30e9d7d44bc2f3">STATE_invalid</link>)&#32;{
815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1a2c3d88a733672817af404c4342ef34b5">chunk_x</link>&#32;=&#32;cx;
816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1a115a5548f6ce659c096d3d45defdc7d6">chunk_y</link>&#32;=&#32;cy;
817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;=&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba30055d9bf9753d6c86c158dd8273ad42">STATE_needed</link>;
818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>&#32;=&#32;priority;
820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
821 &#32;&#32;&#32;&#32;&#32;&#32;}
822 &#32;&#32;&#32;}
823 
824 &#32;&#32;&#32;<emphasis role="comment">//&#32;draw&#32;front-to-back</emphasis>
825 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(rad&#32;=&#32;0;&#32;rad&#32;&lt;=&#32;<link linkend="_cave__render_8c_1a7287aa4341d0bc802616e36453418217">view_dist_in_chunks</link>;&#32;rad&#32;+=&#32;2)&#32;{
826 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=-rad;&#32;j&#32;&lt;=&#32;rad;&#32;j&#32;+=&#32;2)&#32;{
827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;j&#32;is&#32;+-&#32;rad,&#32;then&#32;iterate&#32;i&#32;through&#32;all&#32;values</emphasis>
828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;j&#32;isn&apos;t&#32;+-rad,&#32;then&#32;i&#32;should&#32;be&#32;only&#32;-rad&#32;&amp;&#32;rad</emphasis>
829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_cave__render_8c_1a863c86bdfd96bf9c461846689c2614aa">step</link>&#32;=&#32;2;
830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(abs(j)&#32;!=&#32;rad)
831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a863c86bdfd96bf9c461846689c2614aa">step</link>&#32;=&#32;2*rad;
832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=-rad;&#32;i&#32;&lt;=&#32;rad;&#32;i&#32;+=&#32;<link linkend="_cave__render_8c_1a863c86bdfd96bf9c461846689c2614aa">step</link>)&#32;{
833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cx&#32;=&#32;qchunk_x&#32;+&#32;i;
834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cy&#32;=&#32;qchunk_y&#32;+&#32;j;
835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slot_x&#32;=&#32;(cx&gt;&gt;1)&#32;&amp;&#32;(<link linkend="_cave__render_8c_1a8fa3a95e690c74108521420c97453ac8">CACHED_MESH_NUM_X</link>-1);
836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;slot_y&#32;=&#32;(cy&gt;&gt;1)&#32;&amp;&#32;(<link linkend="_cave__render_8c_1ab63e500c94da0daaf2114b8168f3bd06">CACHED_MESH_NUM_Y</link>-1);
837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structchunk__mesh">chunk_mesh</link>&#32;*cm&#32;=&#32;&amp;<link linkend="_cave__render_8c_1acbd6ac4d8dd8e0747a1d33adb6bb90f5">cached_chunk_mesh</link>[slot_y][slot_x];
838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;==&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba9403d38ed10dea456e4b628995e4583c">STATE_valid</link>&#32;&amp;&amp;&#32;cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>&#32;&gt;=&#32;0)&#32;{
839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_cave__render_8c_1a90766e990c4a0a3299dae681bef26211">chunks_considered</link>;
840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a7eb76aa1c7fbf02b3f4cf94c13ba7836">quads_considered</link>&#32;+=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a1062810af936566385c5ba2c668e9f6a">num_quads</link>;
841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_box_in_frustum(cm-&gt;<link linkend="_structchunk__mesh_1a34536b1b6efff0e258048519e0a4e33c">bounds</link>[0],&#32;cm-&gt;<link linkend="_structchunk__mesh_1a34536b1b6efff0e258048519e0a4e33c">bounds</link>[1]))&#32;{
842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_cave__render_8c_1aabc2460c0dbf3bb17bf2c768624a37a2">chunks_in_frustum</link>;
843 
844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;@TODO&#32;if&#32;in&#32;range</emphasis>
845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__glprog_8h_1a252326a1e2ad9dde401ac5c6fbe12c84">stbglUniform3fv</link>(<link linkend="_cave__render_8c_1a2c4b0dabe154aae79a7efd8428a6700a">uniform_loc</link>[<link linkend="_stb__voxel__render_8h_1a7859c0a3efa8b1c360f5c2376baf051eab955886cfcf0c2c881d633beeb99ad93">STBVOX_UNIFORM_transform</link>],&#32;3,&#32;cm-&gt;<link linkend="_structchunk__mesh_1a38970d9ccd61ecd637f8d561d3ee6749">transform</link>[0]);
846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glBindBufferARB(<link linkend="_glext_8h_1acb1c5ea3239de87d09959457ffa42f6f">GL_ARRAY_BUFFER_ARB</link>,&#32;cm-&gt;<link linkend="_structchunk__mesh_1a1ed99534ee04fe22dae227b3915a8088">vbuf</link>);
847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a4c19069a22ebd709443b65a9c170be49">glVertexAttribIPointer</link>(0,&#32;1,&#32;<link linkend="_glad_8h_1a69b1c02ba0bd93c643c6d82e0c16eb99">GL_UNSIGNED_INT</link>,&#32;4,&#32;(<emphasis role="keywordtype">void</emphasis>*)&#32;0);
848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a987aecafceffb9afaef11412d42e605b">glBindTexture</link>(<link linkend="_glext_8h_1a516c2e3065f87bfa599e8f521058d684">GL_TEXTURE_BUFFER_ARB</link>,&#32;cm-&gt;<link linkend="_structchunk__mesh_1a5d94f262ea3b806f7541f81bca2b528a">fbuf_tex</link>);
849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a89377449aceadc060b577926b5413bd2">glDrawArrays</link>(<link linkend="_glad_8h_1a36b428225d54dd9cf2e564e5ada3ad3d">GL_QUADS</link>,&#32;0,&#32;cm-&gt;<link linkend="_structchunk__mesh_1a1062810af936566385c5ba2c668e9f6a">num_quads</link>*4);
850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a55f891b23463a28bdca885af7b70b4db">quads_rendered</link>&#32;+=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a1062810af936566385c5ba2c668e9f6a">num_quads</link>;
851 
852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a2a36f03ff6514a6581bbfdb8c6912a5e">chunk_storage_rendered</link>&#32;+=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a4c69ff6d6b3aa9a608951009de68c3a1">vbuf_size</link>&#32;+&#32;cm-&gt;<link linkend="_structchunk__mesh_1a345fe9574e3eaac10f8ff2a4d641fdf4">fbuf_size</link>;
853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1aac1c4d107c5e708ee713ec9a6ccddc84">chunk_storage_considered</link>&#32;+=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a4c69ff6d6b3aa9a608951009de68c3a1">vbuf_size</link>&#32;+&#32;cm-&gt;<link linkend="_structchunk__mesh_1a345fe9574e3eaac10f8ff2a4d641fdf4">fbuf_size</link>;
855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
857 &#32;&#32;&#32;&#32;&#32;&#32;}
858 &#32;&#32;&#32;}
859 
860 &#32;&#32;&#32;<link linkend="_stb__glprog_8h_1a6e0cf99bd61c0ac06ddee977bf2ad82e">stbglDisableVertexAttribArray</link>(0);
861 &#32;&#32;&#32;glBindBufferARB(<link linkend="_glext_8h_1acb1c5ea3239de87d09959457ffa42f6f">GL_ARRAY_BUFFER_ARB</link>,&#32;0);
862 &#32;&#32;&#32;glActiveTextureARB(<link linkend="_glext_8h_1a52f7e4ad7d25b51800d52f7cf4459a39">GL_TEXTURE0_ARB</link>);
863 
864 &#32;&#32;&#32;<link linkend="_stb__glprog_8h_1ab6c9aabf76a35fa89ef35acd64cdd1a7">stbglUseProgram</link>(0);
865 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a71cf846b08a6962abf1c34ab13da6933">num_meshes_started</link>&#32;=&#32;0;
866 
867 &#32;&#32;&#32;{
868 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;MAX_QUEUE&#32;&#32;8</emphasis>
869 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;highest_priority[<link linkend="_cave__render_8c_1ab94814559b67e4a2a564087f821145ea">MAX_QUEUE</link>];
870 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;highest_i[<link linkend="_cave__render_8c_1ab94814559b67e4a2a564087f821145ea">MAX_QUEUE</link>],&#32;highest_j[<link linkend="_cave__render_8c_1ab94814559b67e4a2a564087f821145ea">MAX_QUEUE</link>];
871 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;lowest_priority&#32;=&#32;<link linkend="_cave__render_8c_1a7287aa4341d0bc802616e36453418217">view_dist_in_chunks</link>&#32;*&#32;<link linkend="_cave__render_8c_1a7287aa4341d0bc802616e36453418217">view_dist_in_chunks</link>&#32;*&#32;16&#32;*&#32;16.0f;
872 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lowest_i&#32;=&#32;-1,&#32;lowest_j&#32;=&#32;-1;
873 
874 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="_cave__render_8c_1ab94814559b67e4a2a564087f821145ea">MAX_QUEUE</link>;&#32;++i)&#32;{
875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_priority[i]&#32;=&#32;<link linkend="_cave__render_8c_1a538e3a4857cf9635776e05cf1ada9a83">min_priority</link>;
876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_i[i]&#32;=&#32;-1;
877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_j[i]&#32;=&#32;-1;
878 &#32;&#32;&#32;&#32;&#32;&#32;}
879 
880 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;<link linkend="_cave__render_8c_1ab63e500c94da0daaf2114b8168f3bd06">CACHED_MESH_NUM_Y</link>;&#32;++j)&#32;{
881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="_cave__render_8c_1a8fa3a95e690c74108521420c97453ac8">CACHED_MESH_NUM_X</link>;&#32;++i)&#32;{
882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structchunk__mesh">chunk_mesh</link>&#32;*cm&#32;=&#32;&amp;<link linkend="_cave__render_8c_1acbd6ac4d8dd8e0747a1d33adb6bb90f5">cached_chunk_mesh</link>[j][i];
883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;==&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba9403d38ed10dea456e4b628995e4583c">STATE_valid</link>)&#32;{
884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>&#32;=&#32;<link linkend="_cave__render_8c_1a7fd43582038fa12183f22d2b5bc70793">compute_priority</link>(cm-&gt;<link linkend="_structchunk__mesh_1a2c3d88a733672817af404c4342ef34b5">chunk_x</link>,&#32;cm-&gt;<link linkend="_structchunk__mesh_1a115a5548f6ce659c096d3d45defdc7d6">chunk_y</link>,&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a6289a09b47b1176d64fa499faa7c73ce">chunk_storage_total</link>&#32;+=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a4c69ff6d6b3aa9a608951009de68c3a1">vbuf_size</link>&#32;+&#32;cm-&gt;<link linkend="_structchunk__mesh_1a345fe9574e3eaac10f8ff2a4d641fdf4">fbuf_size</link>;
886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>&#32;&lt;&#32;lowest_priority)&#32;{
887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lowest_priority&#32;=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>;
888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lowest_i&#32;=&#32;i;
889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lowest_j&#32;=&#32;j;
890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;==&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba30055d9bf9753d6c86c158dd8273ad42">STATE_needed</link>)&#32;{
893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>&#32;=&#32;<link linkend="_cave__render_8c_1a7fd43582038fa12183f22d2b5bc70793">compute_priority</link>(cm-&gt;<link linkend="_structchunk__mesh_1a2c3d88a733672817af404c4342ef34b5">chunk_x</link>,&#32;cm-&gt;<link linkend="_structchunk__mesh_1a115a5548f6ce659c096d3d45defdc7d6">chunk_y</link>,&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>&#32;&lt;&#32;<link linkend="_cave__render_8c_1a538e3a4857cf9635776e05cf1ada9a83">min_priority</link>)
895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;=&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba1a69b1351d5fad0def30e9d7d44bc2f3">STATE_invalid</link>;
896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>&#32;&gt;&#32;highest_priority[0])&#32;{
897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_priority[0]&#32;=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>;
899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_i[0]&#32;=&#32;i;
900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_j[0]&#32;=&#32;j;
901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bubble&#32;this&#32;up&#32;to&#32;right&#32;place</emphasis>
902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;<link linkend="_cave__render_8c_1ab94814559b67e4a2a564087f821145ea">MAX_QUEUE</link>-1;&#32;++k)&#32;{
903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(highest_priority[k]&#32;&gt;&#32;highest_priority[k+1])&#32;{
904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_priority[k]&#32;=&#32;highest_priority[k+1];
905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_priority[k+1]&#32;=&#32;cm-&gt;<link linkend="_structchunk__mesh_1a528568b012aae49c80192ba9430def31">priority</link>;
906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_i[k]&#32;=&#32;highest_i[k+1];
907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_i[k+1]&#32;=&#32;i;
908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_j[k]&#32;=&#32;highest_j[k+1];
909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest_j[k+1]&#32;=&#32;j;
910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
917 &#32;&#32;&#32;&#32;&#32;&#32;}
918 
919 
920 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;I&#32;couldn&apos;t&#32;find&#32;any&#32;straightforward&#32;logic&#32;that&#32;avoids</emphasis>
921 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;hysteresis&#32;problem&#32;of&#32;continually&#32;creating&#32;&amp;&#32;freeing</emphasis>
922 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;a&#32;block&#32;on&#32;the&#32;margin,&#32;so&#32;I&#32;just&#32;don&apos;t&#32;free&#32;a&#32;block&#32;until</emphasis>
923 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;it&apos;s&#32;out&#32;of&#32;range,&#32;but&#32;this&#32;doesn&apos;t&#32;actually&#32;correctly</emphasis>
924 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;handle&#32;when&#32;the&#32;cache&#32;is&#32;too&#32;small&#32;for&#32;the&#32;given&#32;range</emphasis>
925 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__render_8c_1a6289a09b47b1176d64fa499faa7c73ce">chunk_storage_total</link>&#32;&gt;=&#32;<link linkend="_cave__render_8c_1a8a1468c6c20eb6549bdb72976fbd13fe">min_chunk_storage</link>&#32;&amp;&amp;&#32;lowest_i&#32;&gt;=&#32;0)&#32;{
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__render_8c_1acbd6ac4d8dd8e0747a1d33adb6bb90f5">cached_chunk_mesh</link>[lowest_j][lowest_i].priority&#32;&lt;&#32;-1200)&#32;<emphasis role="comment">//&#32;-1000?&#32;0?</emphasis>
927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a8da956987731d72d3d6af47e0c31ace3">free_chunk</link>(lowest_i,&#32;lowest_j);
928 &#32;&#32;&#32;&#32;&#32;&#32;}
929 
930 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__render_8c_1a6289a09b47b1176d64fa499faa7c73ce">chunk_storage_total</link>&#32;&lt;&#32;<link linkend="_cave__render_8c_1aaad3ccb28ec5b3ab89cdb42cd3c21771">max_chunk_storage</link>&#32;&amp;&amp;&#32;highest_i[0]&#32;&gt;=&#32;0)&#32;{
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=<link linkend="_cave__render_8c_1ab94814559b67e4a2a564087f821145ea">MAX_QUEUE</link>-1;&#32;j&#32;&gt;=&#32;0;&#32;--j)&#32;{
932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(highest_j[0]&#32;&gt;=&#32;0)&#32;{
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structchunk__mesh">chunk_mesh</link>&#32;*cm&#32;=&#32;&amp;<link linkend="_cave__render_8c_1acbd6ac4d8dd8e0747a1d33adb6bb90f5">cached_chunk_mesh</link>[highest_j[j]][highest_i[j]];
934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__render_8c_1a18386edf73cd3e3f424ea7cb0f5dab1e">request_chunk</link>(cm-&gt;<link linkend="_structchunk__mesh_1a2c3d88a733672817af404c4342ef34b5">chunk_x</link>,&#32;cm-&gt;<link linkend="_structchunk__mesh_1a115a5548f6ce659c096d3d45defdc7d6">chunk_y</link>))&#32;{
935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cm-&gt;<link linkend="_structchunk__mesh_1afb20c6f240e8ffbae40e299c9f2ccb1d">state</link>&#32;=&#32;<link linkend="_cave__render_8c_1ab39a415800ebd0d977c477376649649ba12236ecbf4b9525bd229902691ec52a8">STATE_requested</link>;
936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;couldn&apos;t&#32;queue&#32;this&#32;one,&#32;skip&#32;the&#32;remainder</emphasis>
938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
942 &#32;&#32;&#32;&#32;&#32;&#32;}
943 &#32;&#32;&#32;}
944 
945 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a654d2857d277992878a8c7ff1f740282">update_meshes_from_render_thread</link>();
946 
947 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a080346cc58cb8f8b780aa706f20a1bdc">num_threads_active</link>&#32;=&#32;0;
948 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="_cave__render_8c_1a7cd3d17270efa49416663f4e571144cc">num_mesh_workers</link>;&#32;++i)&#32;{
949 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a080346cc58cb8f8b780aa706f20a1bdc">num_threads_active</link>&#32;+=&#32;(<link linkend="_cave__render_8c_1a285a49a21e43d98e9f7ea0f052a733dc">mesh_data</link>[i].<link linkend="_structmesh__worker_1ac696a930eac8705f16b1dd5f09139713">state</link>&#32;==&#32;<link linkend="_cave__render_8c_1ae33c78feb670de33d2abf21ec0624531af060baead9e16d712b41715e70cf1817">WSTATE_running</link>);
950 &#32;&#32;&#32;}
951 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1a19d602180d3af1e1e3969518075548cc"/>    <section>
    <title>render_init()</title>
<indexterm><primary>render_init</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>render_init</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> render_init (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 403 of file cave_render.c.</para>
<programlisting>404 {
405 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
406 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*binds[]&#32;=&#32;{&#32;<emphasis role="stringliteral">&quot;attr_vertex&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;attr_face&quot;</emphasis>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;};
407 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_wave_8c_1aeb310e20c71a4ca39015f9553658d290">vertex</link>;
408 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fragment;
409 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>=0,<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>=0;
410 
411 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*texdata&#32;=&#32;<link linkend="_stb__image_8c_1a6e3bfbdf11886669cd2153c1136f29db">stbi_load</link>(<emphasis role="stringliteral">&quot;terrain.png&quot;</emphasis>,&#32;&amp;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,&#32;&amp;<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;4);
412 
413 &#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a1b8b7770f24477cf39260eac3ade3400">stbvox_init_mesh_maker</link>(&amp;<link linkend="_cave__render_8c_1abee69a8c0dbc3a083193dea4dddbaf8c">g_mesh_maker</link>);
414 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="_cave__render_8c_1a7cd3d17270efa49416663f4e571144cc">num_mesh_workers</link>;&#32;++i)&#32;{
415 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__voxel__render_8h_1a1b8b7770f24477cf39260eac3ade3400">stbvox_init_mesh_maker</link>(&amp;<link linkend="_cave__render_8c_1a285a49a21e43d98e9f7ea0f052a733dc">mesh_data</link>[i].rm.mm);
416 &#32;&#32;&#32;}
417 
418 &#32;&#32;&#32;<link linkend="_structvertex">vertex</link>&#32;=&#32;<link linkend="_stb__voxel__render_8h_1a79f9e4c051c53927e0f762910729860b">stbvox_get_vertex_shader</link>();
419 &#32;&#32;&#32;fragment&#32;=&#32;<link linkend="_stb__voxel__render_8h_1a21e1e1586c93abcba24be8eb01d8fd3d">stbvox_get_fragment_shader</link>();
420 
421 &#32;&#32;&#32;{
422 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;error_buffer[1024];
423 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*main_vertex[]&#32;=&#32;{&#32;<link linkend="_wave_8c_1aeb310e20c71a4ca39015f9553658d290">vertex</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;};
424 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*main_fragment[]&#32;=&#32;{&#32;fragment,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;};
425 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a98050f44d02d9c2ee70b8435c84d82e5">main_prog</link>&#32;=&#32;<link linkend="_stb__glprog_8h_1a40e75cc08efa43f853e710a6462a29e2">stbgl_create_program</link>(main_vertex,&#32;main_fragment,&#32;binds,&#32;error_buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(error_buffer));
426 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__render_8c_1a98050f44d02d9c2ee70b8435c84d82e5">main_prog</link>&#32;==&#32;0)&#32;{
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__main_8c_1aefd62d461236c6e9ced738eac9d8042c">ods</link>(<emphasis role="stringliteral">&quot;Compile&#32;error&#32;for&#32;main&#32;shader:&#32;%s\n&quot;</emphasis>,&#32;error_buffer);
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(0);
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(1);
430 &#32;&#32;&#32;&#32;&#32;&#32;}
431 &#32;&#32;&#32;}
432 &#32;&#32;&#32;<emphasis role="comment">//init_index_buffer();</emphasis>
433 
434 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a5a929f915201b0dbb791c74db8420500">make_texture_buffer_for_uniform</link>(<link linkend="_stb__voxel__render_8h_1a7859c0a3efa8b1c360f5c2376baf051eaf9b476df9befe12c8855d1ea20db22fe">STBVOX_UNIFORM_texscale</link>&#32;&#32;&#32;&#32;&#32;,&#32;3);
435 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a5a929f915201b0dbb791c74db8420500">make_texture_buffer_for_uniform</link>(<link linkend="_stb__voxel__render_8h_1a7859c0a3efa8b1c360f5c2376baf051ea65f746116b3aa230da8bbb534e6cea97">STBVOX_UNIFORM_texgen</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;4);
436 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a5a929f915201b0dbb791c74db8420500">make_texture_buffer_for_uniform</link>(<link linkend="_stb__voxel__render_8h_1a7859c0a3efa8b1c360f5c2376baf051ea1f8122611f70005180ede22ebffa840f">STBVOX_UNIFORM_color_table</link>&#32;&#32;,&#32;5);
437 
438 &#32;&#32;&#32;<link linkend="_glad_8h_1a82ac4415f852b8b5bfe7356202ca934e">glGenTextures</link>(2,&#32;<link linkend="_cave__render_8c_1a640ed05886b5c54012caed647bb8f728">voxel_tex</link>);
439 
440 &#32;&#32;&#32;<link linkend="_glad_8h_1a987aecafceffb9afaef11412d42e605b">glBindTexture</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_cave__render_8c_1a640ed05886b5c54012caed647bb8f728">voxel_tex</link>[0]);
441 &#32;&#32;&#32;glTexImage3DEXT(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;0,&#32;<link linkend="_glad_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4">GL_RGBA</link>,
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a56dce54d2eef141faab9d338d77e9902">TEX_SIZE</link>,<link linkend="_cave__render_8c_1a56dce54d2eef141faab9d338d77e9902">TEX_SIZE</link>,256,
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,<link linkend="_glad_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4">GL_RGBA</link>,<link linkend="_glad_8h_1a80a33c79f69417372d65d2a65ca36d49">GL_UNSIGNED_BYTE</link>,<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
444 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;256;&#32;++i)&#32;{
445 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(texdata)
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1afaed9dd655d3234c979e5cc06387c4c9">scale_texture</link>(texdata,&#32;(i&amp;15)*<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>/16,&#32;(<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>/16)*(i&gt;&gt;4),&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>);
447 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a3291895cb2521f7295027d4694bbf242">build_base_texture</link>(i);
449 &#32;&#32;&#32;&#32;&#32;&#32;glTexSubImage3DEXT(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;0,&#32;0,0,i,&#32;<link linkend="_cave__render_8c_1a56dce54d2eef141faab9d338d77e9902">TEX_SIZE</link>,<link linkend="_cave__render_8c_1a56dce54d2eef141faab9d338d77e9902">TEX_SIZE</link>,1,&#32;<link linkend="_glad_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4">GL_RGBA</link>,&#32;<link linkend="_glad_8h_1a80a33c79f69417372d65d2a65ca36d49">GL_UNSIGNED_BYTE</link>,&#32;<link linkend="_structtexture">texture</link>[0]);
450 &#32;&#32;&#32;}
451 &#32;&#32;&#32;<link linkend="_glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_glad_8h_1a173a2b2453322dd8d613df6cf2e72480">GL_TEXTURE_MIN_FILTER</link>,&#32;<link linkend="_glad_8h_1a724edc4d9d6f3c1770ff3688f0747acb">GL_LINEAR_MIPMAP_LINEAR</link>);
452 &#32;&#32;&#32;<link linkend="_glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_glad_8h_1acb47a41b5963d44826f44b7370bccc26">GL_TEXTURE_MAG_FILTER</link>,&#32;<link linkend="_glad_8h_1a4e682f218130b98b27a1e33fa7325080">GL_LINEAR</link>);
453 &#32;&#32;&#32;<link linkend="_glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_glext_8h_1a00b65957cb070504d8e364031b176737">GL_TEXTURE_MAX_ANISOTROPY_EXT</link>,&#32;16);
454 <emphasis role="preprocessor">&#32;&#32;&#32;#ifdef&#32;STBVOX_CONFIG_TEX1_EDGE_CLAMP</emphasis>
455 &#32;&#32;&#32;<link linkend="_glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_glad_8h_1a23a0bc2909cc2f79fe7287aaa044e880">GL_TEXTURE_WRAP_S</link>,&#32;<link linkend="_glad_8h_1ae90f81f48642444b4ba7fa5cacf40569">GL_CLAMP_TO_EDGE</link>);
456 &#32;&#32;&#32;<link linkend="_glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_glad_8h_1ac307a4772e1d3decd5b6f36192113ab6">GL_TEXTURE_WRAP_T</link>,&#32;<link linkend="_glad_8h_1ae90f81f48642444b4ba7fa5cacf40569">GL_CLAMP_TO_EDGE</link>);
457 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
458 
459 &#32;&#32;&#32;glGenerateMipmapEXT(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>);
460 
461 &#32;&#32;&#32;<link linkend="_glad_8h_1a987aecafceffb9afaef11412d42e605b">glBindTexture</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_cave__render_8c_1a640ed05886b5c54012caed647bb8f728">voxel_tex</link>[1]);
462 &#32;&#32;&#32;glTexImage3DEXT(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;0,&#32;<link linkend="_glad_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4">GL_RGBA</link>,
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1,1,64,
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,<link linkend="_glad_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4">GL_RGBA</link>,<link linkend="_glad_8h_1a80a33c79f69417372d65d2a65ca36d49">GL_UNSIGNED_BYTE</link>,<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
465 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a5a5da02ffa962221a8ddf7318d07a30b">init_tex2_gradient</link>();
466 &#32;&#32;&#32;<link linkend="_cave__render_8c_1a780d126fbb25c976ce349b06059ecc66">set_tex2_alpha</link>(0.0);
467 <emphasis role="preprocessor">&#32;&#32;&#32;#if&#32;0</emphasis>
468 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;128;&#32;++i)&#32;{
469 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//build_overlay_texture(i);</emphasis>
470 &#32;&#32;&#32;&#32;&#32;&#32;glTexSubImage3DEXT(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;0,&#32;0,0,i,&#32;<link linkend="_cave__render_8c_1a56dce54d2eef141faab9d338d77e9902">TEX_SIZE</link>,<link linkend="_cave__render_8c_1a56dce54d2eef141faab9d338d77e9902">TEX_SIZE</link>,1,&#32;<link linkend="_glad_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4">GL_RGBA</link>,&#32;<link linkend="_glad_8h_1a80a33c79f69417372d65d2a65ca36d49">GL_UNSIGNED_BYTE</link>,&#32;<link linkend="_structtexture">texture</link>[0]);
471 &#32;&#32;&#32;}
472 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
473 &#32;&#32;&#32;<link linkend="_glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_glad_8h_1a173a2b2453322dd8d613df6cf2e72480">GL_TEXTURE_MIN_FILTER</link>,&#32;<link linkend="_glad_8h_1a724edc4d9d6f3c1770ff3688f0747acb">GL_LINEAR_MIPMAP_LINEAR</link>);
474 &#32;&#32;&#32;<link linkend="_glad_8h_1a5817fa85137822142b4951eacd0154e7">glTexParameteri</link>(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>,&#32;<link linkend="_glad_8h_1acb47a41b5963d44826f44b7370bccc26">GL_TEXTURE_MAG_FILTER</link>,&#32;<link linkend="_glad_8h_1a4e682f218130b98b27a1e33fa7325080">GL_LINEAR</link>);
475 &#32;&#32;&#32;glGenerateMipmapEXT(<link linkend="_glext_8h_1a3d1b579f3fdbc2b4789bb447114c5119">GL_TEXTURE_2D_ARRAY_EXT</link>);
476 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1af74c70130c88949f4d2bac551594d41f"/>    <section>
    <title>reset_cache_size()</title>
<indexterm><primary>reset_cache_size</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>reset_cache_size</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> reset_cache_size (int size)</computeroutput></para><para>
Definition at line 490 of file cave_mesher.c.</para>
<programlisting>491 {
492 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j;
493 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;&#32;j&#32;&lt;&#32;<link linkend="_cave__mesher_8c_1adc2cfac3a357c5424aafa9d351a2e6ea">cache_size</link>;&#32;++j)&#32;{
494 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;&#32;i&#32;&lt;&#32;<link linkend="_cave__mesher_8c_1adc2cfac3a357c5424aafa9d351a2e6ea">cache_size</link>;&#32;++i)&#32;{
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structcached__converted__chunk">cached_converted_chunk</link>&#32;*ccc&#32;=&#32;&amp;<link linkend="_cave__mesher_8c_1ab799c6e56a65a1a9a2c089c9d4b81de9">chunk_cache</link>[j][i];
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ccc-&gt;<link linkend="_structcached__converted__chunk_1a890fc62a8689a97e24ffd59097770836">valid</link>)&#32;{
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>)&#32;{
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>-&gt;<link linkend="_structfast__chunk_1aea03b39185c1d472a7f61f86529f0863">pointer_to_free</link>);
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>);
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1ad891f426a0caf16bf5a9a54439beeade">fc</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ccc-&gt;<link linkend="_structcached__converted__chunk_1a890fc62a8689a97e24ffd59097770836">valid</link>&#32;=&#32;0;
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
504 &#32;&#32;&#32;&#32;&#32;&#32;}
505 &#32;&#32;&#32;}
506 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1adc2cfac3a357c5424aafa9d351a2e6ea">cache_size</link>&#32;=&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
507 }
</programlisting>    </section><anchor xml:id="_caveview_8h_1a5a106573dea6ac6f71be5e80fb56eefc"/>    <section>
    <title>world_init()</title>
<indexterm><primary>world_init</primary><secondary>caveview.h</secondary></indexterm>
<indexterm><primary>caveview.h</primary><secondary>world_init</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> world_init (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 478 of file cave_render.c.</para>
<programlisting>479 {
480 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;
481 
482 &#32;&#32;&#32;Uint64&#32;start_time,&#32;end_time;
483 <emphasis role="preprocessor">&#32;&#32;&#32;#ifdef&#32;NDEBUG</emphasis>
484 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>&#32;=&#32;32;
485 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
486 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>&#32;=&#32;12;
487 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
488 
489 &#32;&#32;&#32;start_time&#32;=&#32;SDL_GetPerformanceCounter();
490 
491 &#32;&#32;&#32;<emphasis role="comment">//&#32;iterate&#32;in&#32;8x8&#32;clusters&#32;of&#32;qchunks&#32;at&#32;a&#32;time&#32;to&#32;get&#32;better&#32;converted-chunk-cache&#32;reuse</emphasis>
492 &#32;&#32;&#32;<emphasis role="comment">//&#32;than&#32;a&#32;purely&#32;row-by-row&#32;ordering&#32;is&#32;(single-threaded&#32;this&#32;is&#32;a&#32;bigger&#32;win&#32;than</emphasis>
493 &#32;&#32;&#32;<emphasis role="comment">//&#32;any&#32;of&#32;the&#32;above&#32;optimizations&#32;were,&#32;since&#32;it&#32;halves&#32;zlib/mc-conversion&#32;costs)</emphasis>
494 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>=-<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>;&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;&lt;=&#32;<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>;&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;+=&#32;16)
495 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>=-<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>;&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;&lt;=&#32;<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>;&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;+=&#32;16)
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>=<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;&lt;&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>+16&#32;&amp;&amp;&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;&lt;=&#32;<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>;&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>&#32;+=&#32;2)
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>=<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;&lt;&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>+16&#32;&amp;&amp;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;&lt;=&#32;<link linkend="_glad_8h_1a73b00379db2c7ac5e30a3aa2954a50ee">range</link>;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;+=&#32;2)
498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_cave__render_8c_1a18386edf73cd3e3f424ea7cb0f5dab1e">request_chunk</link>(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>))&#32;{&#32;<emphasis role="comment">//&#32;if&#32;request&#32;fails,&#32;all&#32;threads&#32;are&#32;busy</emphasis>
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a654d2857d277992878a8c7ff1f740282">update_meshes_from_render_thread</link>();
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SDL_Delay(1);
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
502 
503 &#32;&#32;&#32;<emphasis role="comment">//&#32;wait&#32;until&#32;all&#32;the&#32;workers&#32;are&#32;done,</emphasis>
504 &#32;&#32;&#32;<emphasis role="comment">//&#32;(this&#32;is&#32;only&#32;needed&#32;if&#32;we&#32;want&#32;to&#32;time</emphasis>
505 &#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;the&#32;build&#32;finishes,&#32;or&#32;when&#32;we&#32;want&#32;to&#32;reset&#32;the</emphasis>
506 &#32;&#32;&#32;<emphasis role="comment">//&#32;cache&#32;size;&#32;otherwise&#32;we&#32;could&#32;just&#32;go&#32;ahead&#32;and</emphasis>
507 &#32;&#32;&#32;<emphasis role="comment">//&#32;start&#32;rendering&#32;whatever&#32;we&apos;ve&#32;got)</emphasis>
508 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;;)&#32;{
509 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
510 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cave__render_8c_1a654d2857d277992878a8c7ff1f740282">update_meshes_from_render_thread</link>();
511 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;<link linkend="_cave__render_8c_1a7cd3d17270efa49416663f4e571144cc">num_mesh_workers</link>;&#32;++i)
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__render_8c_1a285a49a21e43d98e9f7ea0f052a733dc">mesh_data</link>[i].state&#32;!=&#32;<link linkend="_cave__render_8c_1ae33c78feb670de33d2abf21ec0624531af3fbd3dcee01d8d3f4a3b08150f8f159">WSTATE_idle</link>)
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
514 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;<link linkend="_cave__render_8c_1a7cd3d17270efa49416663f4e571144cc">num_mesh_workers</link>)
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
516 &#32;&#32;&#32;&#32;&#32;&#32;SDL_Delay(3);
517 &#32;&#32;&#32;}
518 
519 &#32;&#32;&#32;end_time&#32;=&#32;SDL_GetPerformanceCounter();
520 &#32;&#32;&#32;<link linkend="_cave__main_8c_1aefd62d461236c6e9ced738eac9d8042c">ods</link>(<emphasis role="stringliteral">&quot;Build&#32;time:&#32;%7.2fs\n&quot;</emphasis>,&#32;(end_time&#32;-&#32;start_time)&#32;/&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;SDL_GetPerformanceFrequency());
521 
522 &#32;&#32;&#32;<emphasis role="comment">//&#32;don&apos;t&#32;waste&#32;lots&#32;of&#32;storage&#32;on&#32;chunk&#32;caches&#32;once&#32;it&apos;s&#32;finished&#32;starting-up;</emphasis>
523 &#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;was&#32;only&#32;needed&#32;to&#32;be&#32;this&#32;large&#32;because&#32;we&#32;worked&#32;in&#32;large&#32;blocks</emphasis>
524 &#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;maximize&#32;sharing</emphasis>
525 &#32;&#32;&#32;<link linkend="_cave__mesher_8c_1af74c70130c88949f4d2bac551594d41f">reset_cache_size</link>(32);
526 }
</programlisting></section>
</section>
</section>
