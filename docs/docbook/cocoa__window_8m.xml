<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_cocoa__window_8m">
<title>deps/glfw/src/cocoa_window.m File Reference</title>
<indexterm><primary>deps/glfw/src/cocoa_window.m</primary></indexterm>
<programlisting>#include &quot;internal.h&quot;
#include &lt;float.h&gt;
#include &lt;string.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_interface_g_l_f_w_window_delegate">GLFWWindowDelegate</link></para>
</listitem>
            <listitem><para>class <link linkend="_interface_g_l_f_w_content_view">GLFWContentView</link></para>
</listitem>
            <listitem><para>class <link linkend="_interface_g_l_f_w_window">GLFWWindow</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>float <link linkend="_cocoa__window_8m_1afb4258e6a6ce85f3fdfd405086fa8847">_glfwTransformYCocoa</link> (float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a4cf759e33fef9e781c7074f4322835f1">_glfwCreateWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> *wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> *ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> *fbconfig)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ad409e6a679e614c699e992147e902a6b">_glfwDestroyWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ae880de076a1a02e9923df492fa797672">_glfwSetWindowTitleCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const char *title)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1aca182e29dd28bd99cc074cd195419ce5">_glfwSetWindowIconCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *images)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a211e5ad52d8510c1ece781a770f45a61">_glfwGetWindowPosCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a32c4fc6931ebcc217765f7bcda7a05d7">_glfwSetWindowPosCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a5335732bb88f0fd0120a4487b57cb3fd">_glfwGetWindowSizeCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a986965eda2ae538a0e1b53db37c99102">_glfwSetWindowSizeCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a0ccc65ede94e4a9d6262a2244edf0d90">_glfwSetWindowSizeLimitsCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int minwidth, int minheight, int maxwidth, int maxheight)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a971074eb27b956a56b02fb058180cc6d">_glfwSetWindowAspectRatioCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int numer, int denom)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a836e87f467d1c98fed7496ada8d0b0c2">_glfwGetFramebufferSizeCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ad69ef3198e9625bd9bf91971fa83fb6c">_glfwGetWindowFrameSizeCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>, int *<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>, int *<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>, int *<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a0fce93f6b24279d112526baaf3850f98">_glfwGetWindowContentScaleCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a0849c826f0f3a12a51978f3808da74cb">_glfwIconifyWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a572ceaad5ec544e5ef2fbe56b1c90e30">_glfwRestoreWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a94d1ac7326e075ece579ffc57fdafae0">_glfwMaximizeWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ab0952778f676e8674cb72d4469c5ef00">_glfwShowWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a47ce035c773448e2bcb90d36776bd83b">_glfwHideWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a3a4e124a0715ea4bdffef5c5aeb9b81b">_glfwRequestWindowAttentionCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ad25a54706585768bfca31ab0ed4ccb1f">_glfwFocusWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a61f5c7e6c2fcb9ad3e6411a6e8357f39">_glfwSetWindowMonitorCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int xpos, int ypos, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int refreshRate)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a5c4632caeeaab410d330f70bd2b855e6">_glfwWindowFocusedCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1ab482ea45110a9866e73ec37544f8a654">_glfwWindowIconifiedCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a51446791f1cad9a9d61901fa63396623">_glfwWindowVisibleCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a7b2f7e5ca68d3870336b00ed20b2b318">_glfwWindowMaximizedCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a8b8c0bd373d9f9d682ce09fd7948c365">_glfwWindowHoveredCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1adc15685ffb958b5ad8c56d62d599efe9">_glfwFramebufferTransparentCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a558cf6151f645e7765d8dd96b6666c94">_glfwSetWindowResizableCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1aff784a2b90156ae71ae2c4b9187ccd43">_glfwSetWindowDecoratedCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ac60c438b0379854c3443dda82dc91d0e">_glfwSetWindowFloatingCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a9b21a6f52a81ef48e5d1628b4bc6babf">_glfwSetWindowMousePassthroughCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_cocoa__window_8m_1a9c12b3cf9ca9f66400d483df22d700c2">_glfwGetWindowOpacityCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a510261f18c0ffe2ad7eba0d448d1e5f7">_glfwSetWindowOpacityCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float opacity)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a387c0c7caba6e2a702db8e3112a99b50">_glfwSetRawMouseMotionCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_cocoa__window_8m_1a2ea01006dbd5f5569ca848f938bbc3a7">_glfwRawMouseMotionSupportedCocoa</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a757a812eed87ea2bccbe05e951b69387">_glfwPollEventsCocoa</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a35793c039673ec5b2e34f6b87b517eb7">_glfwWaitEventsCocoa</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ab81f9e1d123e745f8a4f75f48b7fdd14">_glfwWaitEventsTimeoutCocoa</link> (double <link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1aeb9015543bf8a7f4a69c90af09fc15ba">_glfwPostEmptyEventCocoa</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1acfbd56cb05f4ff167536dd27457675c9">_glfwGetCursorPosCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double *xpos, double *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a5f0792b18b958ab7eec160b5687f2abe">_glfwSetCursorPosCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, double <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a360d9f80249d179204ff225b720834a0">_glfwSetCursorModeCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_cocoa__window_8m_1a9610e15d33c01c40263c55680ae9e01a">_glfwGetScancodeNameCocoa</link> (int scancode)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1ad9c7faa3f5749d8d02661150761160ce">_glfwGetKeyScancodeCocoa</link> (int <link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a52824c412b8aa8301ee48ec39fda5eae">_glfwCreateCursorCocoa</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *<link linkend="_structimage">image</link>, int xhot, int yhot)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a2f3ab63b4e0e4007359c0a8f026b0cbc">_glfwCreateStandardCursorCocoa</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, int shape)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1ae2ff4b18cf7597720aea51f67a211186">_glfwDestroyCursorCocoa</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a402fc6ab6d2438a38864bb9a77f595cd">_glfwSetCursorCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a6a28c007445d95ad4824104ba8eeb47f">_glfwSetClipboardStringCocoa</link> (const char *<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_cocoa__window_8m_1af2afd8cc56628c0317c7a93326e002d6">_glfwGetClipboardStringCocoa</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> <link linkend="_cocoa__window_8m_1a2150005849bc429d94ec05ebe513b045">_glfwGetEGLPlatformCocoa</link> (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> **<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> <link linkend="_cocoa__window_8m_1a8123dd21292eb09feab5008a105b6bd8">_glfwGetEGLNativeDisplayCocoa</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> <link linkend="_cocoa__window_8m_1a97d705d1f2f434b773a9ffb995fa22d0">_glfwGetEGLNativeWindowCocoa</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_cocoa__window_8m_1a298061a0ab444139235c01cf1203d46c">_glfwGetRequiredInstanceExtensionsCocoa</link> (char **extensions)</para>
</listitem>
            <listitem><para>int <link linkend="_cocoa__window_8m_1a26f8d8cd038ce35e85898c3eab01517b">_glfwGetPhysicalDevicePresentationSupportCocoa</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</para>
</listitem>
            <listitem><para><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> <link linkend="_cocoa__window_8m_1a6e29d0331970e66436da6fa466b8d411">_glfwCreateWindowSurfaceCocoa</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *surface)</para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glad_8h_1a58c2a664503e14ffb8f21012aabff3e9">id</link> <link linkend="_cocoa__window_8m_1abc60523370de1728f54e48d7e1d6625a">glfwGetCocoaWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_cocoa__window_8m_1a52824c412b8aa8301ee48ec39fda5eae"/>    <section>
    <title>_glfwCreateCursorCocoa()</title>
<indexterm><primary>_glfwCreateCursorCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwCreateCursorCocoa</secondary></indexterm>
<para><computeroutput>int _glfwCreateCursorCocoa (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * image, int xhot, int yhot)</computeroutput></para><para>
Definition at line 1593 of file cocoa_window.m.</para>
<programlisting>1595 {
1596 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1597 
1598 &#32;&#32;&#32;&#32;NSImage*&#32;native;
1599 &#32;&#32;&#32;&#32;NSBitmapImageRep*&#32;rep;
1600 
1601 &#32;&#32;&#32;&#32;rep&#32;=&#32;[[NSBitmapImageRep&#32;alloc]
1602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initWithBitmapDataPlanes:<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>
1603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixelsWide:<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1a42ecfe2675278f6b7e70033e3ff89e4a">width</link>
1604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixelsHigh:<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1aa478e4be0fe527274f9233cc11ec71e9">height</link>
1605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsPerSample:8
1606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplesPerPixel:4
1607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasAlpha:YES
1608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isPlanar:NO
1609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colorSpaceName:NSCalibratedRGBColorSpace
1610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmapFormat:<link linkend="_cocoa__platform_8h_1af2befa057b2d658822d6d2f095148981">NSBitmapFormatAlphaNonpremultiplied</link>
1611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesPerRow:<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1a42ecfe2675278f6b7e70033e3ff89e4a">width</link>&#32;*&#32;4
1612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitsPerPixel:32];
1613 
1614 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rep&#32;==&#32;nil)
1615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1616 
1617 &#32;&#32;&#32;&#32;memcpy([rep&#32;bitmapData],&#32;<link linkend="_structimage">image</link>-&gt;pixels,&#32;<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1a42ecfe2675278f6b7e70033e3ff89e4a">width</link>&#32;*&#32;<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1aa478e4be0fe527274f9233cc11ec71e9">height</link>&#32;*&#32;4);
1618 
1619 &#32;&#32;&#32;&#32;native&#32;=&#32;[[NSImage&#32;alloc]&#32;initWithSize:NSMakeSize(<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1a42ecfe2675278f6b7e70033e3ff89e4a">width</link>,&#32;<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1aa478e4be0fe527274f9233cc11ec71e9">height</link>)];
1620 &#32;&#32;&#32;&#32;[native&#32;addRepresentation:rep];
1621 
1622 &#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[[NSCursor&#32;alloc]&#32;initWithImage:native
1623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hotSpot:NSMakePoint(xhot,&#32;yhot)];
1624 
1625 &#32;&#32;&#32;&#32;[native&#32;<link linkend="_namespaceconf_1a325dc746d8bf05c54d26351c35a21d90">release</link>];
1626 &#32;&#32;&#32;&#32;[rep&#32;<link linkend="_namespaceconf_1a325dc746d8bf05c54d26351c35a21d90">release</link>];
1627 
1628 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor-&gt;ns.object&#32;==&#32;nil)
1629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1630 
1631 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1632 
1633 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1634 }
1635 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a2f3ab63b4e0e4007359c0a8f026b0cbc"/>    <section>
    <title>_glfwCreateStandardCursorCocoa()</title>
<indexterm><primary>_glfwCreateStandardCursorCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwCreateStandardCursorCocoa</secondary></indexterm>
<para><computeroutput>int _glfwCreateStandardCursorCocoa (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, int shape)</computeroutput></para><para>
Definition at line 1637 of file cocoa_window.m.</para>
<programlisting>1637 {
1638 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1639 
1640 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">SEL</emphasis>&#32;cursorSelector&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1641 
1642 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Try&#32;to&#32;use&#32;a&#32;private&#32;message</emphasis>
1643 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(shape)
1644 &#32;&#32;&#32;&#32;{
1645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad">GLFW_RESIZE_EW_CURSOR</link>:
1646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSelector&#32;=&#32;NSSelectorFromString(<emphasis role="stringliteral">@&quot;_windowResizeEastWestCursor&quot;</emphasis>);
1647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388">GLFW_RESIZE_NS_CURSOR</link>:
1649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSelector&#32;=&#32;NSSelectorFromString(<emphasis role="stringliteral">@&quot;_windowResizeNorthSouthCursor&quot;</emphasis>);
1650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da">GLFW_RESIZE_NWSE_CURSOR</link>:
1652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSelector&#32;=&#32;NSSelectorFromString(<emphasis role="stringliteral">@&quot;_windowResizeNorthWestSouthEastCursor&quot;</emphasis>);
1653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gab06bba3b407f92807ba9b48de667a323">GLFW_RESIZE_NESW_CURSOR</link>:
1655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSelector&#32;=&#32;NSSelectorFromString(<emphasis role="stringliteral">@&quot;_windowResizeNorthEastSouthWestCursor&quot;</emphasis>);
1656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1657 &#32;&#32;&#32;&#32;}
1658 
1659 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursorSelector&#32;&amp;&amp;&#32;[NSCursor&#32;respondsToSelector:cursorSelector])
1660 &#32;&#32;&#32;&#32;{
1661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>&#32;=&#32;[NSCursor&#32;performSelector:cursorSelector];
1662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;([<emphasis role="keywordtype">object</emphasis>&#32;isKindOfClass:[NSCursor&#32;<emphasis role="keyword">class</emphasis>]])
1663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;<link linkend="_glext_8h_1ab49790263c78300fbf05719e38246198">object</link>;
1664 &#32;&#32;&#32;&#32;}
1665 
1666 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;ns.object)
1667 &#32;&#32;&#32;&#32;{
1668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(shape)
1669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a">GLFW_ARROW_CURSOR</link>:
1671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;arrowCursor];
1672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga36185f4375eaada1b04e431244774c86">GLFW_IBEAM_CURSOR</link>:
1674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;IBeamCursor];
1675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22">GLFW_CROSSHAIR_CURSOR</link>:
1677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;crosshairCursor];
1678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0">GLFW_POINTING_HAND_CURSOR</link>:
1680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;pointingHandCursor];
1681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad">GLFW_RESIZE_EW_CURSOR</link>:
1683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;resizeLeftRightCursor];
1684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388">GLFW_RESIZE_NS_CURSOR</link>:
1686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;resizeUpDownCursor];
1687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d">GLFW_RESIZE_ALL_CURSOR</link>:
1689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;closedHandCursor];
1690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga297c503095b034bc8891393b637844b1">GLFW_NOT_ALLOWED_CURSOR</link>:
1692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;ns.object&#32;=&#32;[NSCursor&#32;operationNotAllowedCursor];
1693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1695 &#32;&#32;&#32;&#32;}
1696 
1697 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;ns.object)
1698 &#32;&#32;&#32;&#32;{
1699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga09d6943923a70ddef3a085f5baee786c">GLFW_CURSOR_UNAVAILABLE</link>,
1700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Standard&#32;cursor&#32;shape&#32;unavailable&quot;</emphasis>);
1701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1702 &#32;&#32;&#32;&#32;}
1703 
1704 &#32;&#32;&#32;&#32;[cursor-&gt;ns.object&#32;retain];
1705 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1706 
1707 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1708 }
1709 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a4cf759e33fef9e781c7074f4322835f1"/>    <section>
    <title>_glfwCreateWindowCocoa()</title>
<indexterm><primary>_glfwCreateWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwCreateWindowCocoa</secondary></indexterm>
<para><computeroutput>int _glfwCreateWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> * wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> * ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> * fbconfig)</computeroutput></para><para>
Definition at line 899 of file cocoa_window.m.</para>
<programlisting>902 {
903 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
904 
905 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!createNativeWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;wndconfig,&#32;fbconfig))
906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
907 
908 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;!=&#32;<link linkend="_glfw3_8h_1a8f6dcdc968d214ff14779564f1389264">GLFW_NO_API</link>)
909 &#32;&#32;&#32;&#32;{
910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a0494c9bfd3f584ab41e6dbeeaa0e6a19">GLFW_NATIVE_CONTEXT_API</link>)
911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_cocoa__platform_8h_1ac0510729f33f4aa006a3bc03dc98b37a">_glfwInitNSGL</link>())
913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_cocoa__platform_8h_1a4d57514fb92fa2439dfe429183aee6c6">_glfwCreateContextNSGL</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a03cf65c9ab01fc8b872ba58842c531c9">GLFW_EGL_CONTEXT_API</link>)
918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;EGL&#32;implementation&#32;on&#32;macOS&#32;use&#32;CALayer*&#32;EGLNativeWindowType&#32;so&#32;we</emphasis>
920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;get&#32;the&#32;layer&#32;for&#32;EGL&#32;window&#32;surface&#32;creation.</emphasis>
921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;setWantsLayer:YES];
922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.layer&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;<link linkend="_glad_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>];
923 
924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1ad83def5c7af30c3bfcc9371712ba96ac">_glfwInitEGL</link>())
925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1adfb1d7aa925810c45a2ef4efc268c2fe">_glfwCreateContextEGL</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1afd34a473af9fa81f317910ea371b19e3">GLFW_OSMESA_CONTEXT_API</link>)
930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a9dd1594b1f8991f90844fbeb4a664163">_glfwInitOSMesa</link>())
932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a59950232b3b545e1fa750f6bd7d46201">_glfwCreateContextOSMesa</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
936 &#32;&#32;&#32;&#32;}
937 
938 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
939 &#32;&#32;&#32;&#32;{
940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cocoa__window_8m_1ab0952778f676e8674cb72d4469c5ef00">_glfwShowWindowCocoa</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cocoa__window_8m_1ad25a54706585768bfca31ab0ed4ccb1f">_glfwFocusWindowCocoa</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
943 &#32;&#32;&#32;&#32;}
944 
945 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
946 
947 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
948 }
949 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a6e29d0331970e66436da6fa466b8d411"/>    <section>
    <title>_glfwCreateWindowSurfaceCocoa()</title>
<indexterm><primary>_glfwCreateWindowSurfaceCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwCreateWindowSurfaceCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> _glfwCreateWindowSurfaceCocoa (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> * allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> * surface)</computeroutput></para><para>
Definition at line 1827 of file cocoa_window.m.</para>
<programlisting>1830 {
1831 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1832 
1833 <emphasis role="preprocessor">#if&#32;MAC_OS_X_VERSION_MAX_ALLOWED&#32;&gt;=&#32;101100</emphasis>
1834 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Dynamically&#32;load&#32;Core&#32;Animation&#32;to&#32;avoid&#32;adding&#32;an&#32;extra</emphasis>
1835 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;dependency&#32;for&#32;the&#32;majority&#32;who&#32;don&apos;t&#32;use&#32;MoltenVK</emphasis>
1836 &#32;&#32;&#32;&#32;NSBundle*&#32;bundle&#32;=&#32;[NSBundle&#32;bundleWithPath:<emphasis role="stringliteral">@&quot;/System/Library/Frameworks/QuartzCore.framework&quot;</emphasis>];
1837 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bundle)
1838 &#32;&#32;&#32;&#32;{
1839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Failed&#32;to&#32;find&#32;QuartzCore.framework&quot;</emphasis>);
1841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
1842 &#32;&#32;&#32;&#32;}
1843 
1844 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Create&#32;the&#32;layer&#32;here&#32;as&#32;makeBackingLayer&#32;should&#32;not&#32;return&#32;nil</emphasis>
1845 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.layer&#32;=&#32;[[bundle&#32;classNamed:<emphasis role="stringliteral">@&quot;CAMetalLayer&quot;</emphasis>]&#32;<link linkend="_glad_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>];
1846 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.layer)
1847 &#32;&#32;&#32;&#32;{
1848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Failed&#32;to&#32;create&#32;layer&#32;for&#32;view&quot;</emphasis>);
1850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
1851 &#32;&#32;&#32;&#32;}
1852 
1853 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.retina)
1854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.layer&#32;setContentsScale:[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;backingScaleFactor]];
1855 
1856 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;setLayer:<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.layer];
1857 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;setWantsLayer:YES];
1858 
1859 &#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>&#32;err;
1860 
1861 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1ae21c18d6fc708ba5779e7da6c2c3b8ba">EXT_metal_surface</link>)
1862 &#32;&#32;&#32;&#32;{
1863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_metal_surface_create_info_e_x_t">VkMetalSurfaceCreateInfoEXT</link>&#32;sci;
1864 
1865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cocoa__platform_8h_1a8641dabc3c27896ae83eee97378a305d">PFN_vkCreateMetalSurfaceEXT</link>&#32;vkCreateMetalSurfaceEXT;
1866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkCreateMetalSurfaceEXT&#32;=&#32;(<link linkend="_cocoa__platform_8h_1a8641dabc3c27896ae83eee97378a305d">PFN_vkCreateMetalSurfaceEXT</link>)
1867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkCreateMetalSurfaceEXT&quot;</emphasis>);
1868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkCreateMetalSurfaceEXT)
1869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
1871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Vulkan&#32;instance&#32;missing&#32;VK_EXT_metal_surface&#32;extension&quot;</emphasis>);
1872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
1873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1874 
1875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(&amp;sci,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(sci));
1876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_metal_surface_create_info_e_x_t_1a906dabb9d8f3c49d19c9a4bb9e91a4e4">sType</link>&#32;=&#32;<link linkend="_internal_8h_1aff9f2b99398eb80a2b5a146bc5534ce8a53b3a890b1333eafd7177f921c9570ef">VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT</link>;
1877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_metal_surface_create_info_e_x_t_1a155830803d6d62104242b387b8300866">pLayer</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.layer;
1878 
1879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;vkCreateMetalSurfaceEXT(instance,&#32;&amp;sci,&#32;allocator,&#32;surface);
1880 &#32;&#32;&#32;&#32;}
1881 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1882 &#32;&#32;&#32;&#32;{
1883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_mac_o_s_surface_create_info_m_v_k">VkMacOSSurfaceCreateInfoMVK</link>&#32;sci;
1884 
1885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cocoa__platform_8h_1ab2687cc7bf8e358e33493cd6d03d5719">PFN_vkCreateMacOSSurfaceMVK</link>&#32;vkCreateMacOSSurfaceMVK;
1886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkCreateMacOSSurfaceMVK&#32;=&#32;(<link linkend="_cocoa__platform_8h_1ab2687cc7bf8e358e33493cd6d03d5719">PFN_vkCreateMacOSSurfaceMVK</link>)
1887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkCreateMacOSSurfaceMVK&quot;</emphasis>);
1888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkCreateMacOSSurfaceMVK)
1889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
1891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Vulkan&#32;instance&#32;missing&#32;VK_MVK_macos_surface&#32;extension&quot;</emphasis>);
1892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
1893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1894 
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(&amp;sci,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(sci));
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_mac_o_s_surface_create_info_m_v_k_1a0481299a494983a09cae465f5d3ee2c9">sType</link>&#32;=&#32;<link linkend="_internal_8h_1aff9f2b99398eb80a2b5a146bc5534ce8a09e67e4d6e61816bd6ddf9308b873985">VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK</link>;
1897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_mac_o_s_surface_create_info_m_v_k_1ae8a44db651a353abb488704df9b7129b">pView</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view;
1898 
1899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;vkCreateMacOSSurfaceMVK(instance,&#32;&amp;sci,&#32;allocator,&#32;surface);
1900 &#32;&#32;&#32;&#32;}
1901 
1902 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err)
1903 &#32;&#32;&#32;&#32;{
1904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Failed&#32;to&#32;create&#32;Vulkan&#32;surface:&#32;%s&quot;</emphasis>,
1906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a512b47c0edcaaf41a4f70bfc8d4d78a7">_glfwGetVulkanResultString</link>(err));
1907 &#32;&#32;&#32;&#32;}
1908 
1909 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
1910 <emphasis role="preprocessor">#else</emphasis>
1911 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
1912 <emphasis role="preprocessor">#endif</emphasis>
1913 
1914 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1915 }
1916 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ae2ff4b18cf7597720aea51f67a211186"/>    <section>
    <title>_glfwDestroyCursorCocoa()</title>
<indexterm><primary>_glfwDestroyCursorCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwDestroyCursorCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyCursorCocoa (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 1711 of file cocoa_window.m.</para>
<programlisting>1711 {
1712 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1713 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor-&gt;ns.object)
1714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[(NSCursor*)&#32;cursor-&gt;ns.object&#32;<link linkend="_namespaceconf_1a325dc746d8bf05c54d26351c35a21d90">release</link>];
1715 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1716 }
1717 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ad409e6a679e614c699e992147e902a6b"/>    <section>
    <title>_glfwDestroyWindowCocoa()</title>
<indexterm><primary>_glfwDestroyWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwDestroyWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 951 of file cocoa_window.m.</para>
<programlisting>951 {
952 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
953 
954 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.disabledCursorWindow&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.disabledCursorWindow&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
956 
957 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;orderOut:nil];
958 
959 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releaseMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
961 
962 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy)
963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
964 
965 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setDelegate:nil];
966 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.delegate&#32;<link linkend="_namespaceconf_1a325dc746d8bf05c54d26351c35a21d90">release</link>];
967 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.delegate&#32;=&#32;nil;
968 
969 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;<link linkend="_namespaceconf_1a325dc746d8bf05c54d26351c35a21d90">release</link>];
970 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;=&#32;nil;
971 
972 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;close];
973 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;=&#32;nil;
974 
975 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Allow&#32;Cocoa&#32;to&#32;catch&#32;up&#32;before&#32;returning</emphasis>
976 &#32;&#32;&#32;&#32;<link linkend="_cocoa__window_8m_1a757a812eed87ea2bccbe05e951b69387">_glfwPollEventsCocoa</link>();
977 
978 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
979 }
980 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ad25a54706585768bfca31ab0ed4ccb1f"/>    <section>
    <title>_glfwFocusWindowCocoa()</title>
<indexterm><primary>_glfwFocusWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwFocusWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwFocusWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1192 of file cocoa_window.m.</para>
<programlisting>1192 {
1193 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1194 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;us&#32;the&#32;active&#32;application</emphasis>
1195 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;This&#32;is&#32;here&#32;to&#32;prevent&#32;applications&#32;using&#32;only&#32;hidden&#32;windows&#32;from</emphasis>
1196 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;being&#32;activated,&#32;but&#32;should&#32;probably&#32;not&#32;be&#32;done&#32;every&#32;time&#32;any</emphasis>
1197 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;window&#32;is&#32;shown</emphasis>
1198 &#32;&#32;&#32;&#32;[NSApp&#32;activateIgnoringOtherApps:YES];
1199 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;makeKeyAndOrderFront:nil];
1200 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1201 }
1202 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1adc15685ffb958b5ad8c56d62d599efe9"/>    <section>
    <title>_glfwFramebufferTransparentCocoa()</title>
<indexterm><primary>_glfwFramebufferTransparentCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwFramebufferTransparentCocoa</secondary></indexterm>
<para><computeroutput>int _glfwFramebufferTransparentCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1343 of file cocoa_window.m.</para>
<programlisting>1343 {
1344 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1345 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;![<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isOpaque]&#32;&amp;&amp;&#32;![<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;isOpaque];
1346 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1347 }
1348 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1af2afd8cc56628c0317c7a93326e002d6"/>    <section>
    <title>_glfwGetClipboardStringCocoa()</title>
<indexterm><primary>_glfwGetClipboardStringCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetClipboardStringCocoa</secondary></indexterm>
<para><computeroutput>const char* _glfwGetClipboardStringCocoa (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1736 of file cocoa_window.m.</para>
<programlisting>1736 {
1737 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1738 
1739 &#32;&#32;&#32;&#32;NSPasteboard*&#32;pasteboard&#32;=&#32;[NSPasteboard&#32;generalPasteboard];
1740 
1741 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(![[pasteboard&#32;<link linkend="_glad_8h_1a4acc56c8d89f835adc106648c5d9f491">types</link>]&#32;containsObject:NSPasteboardTypeString])
1742 &#32;&#32;&#32;&#32;{
1743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga196e125ef261d94184e2b55c05762f14">GLFW_FORMAT_UNAVAILABLE</link>,
1744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Failed&#32;to&#32;retrieve&#32;string&#32;from&#32;pasteboard&quot;</emphasis>);
1745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1746 &#32;&#32;&#32;&#32;}
1747 
1748 &#32;&#32;&#32;&#32;NSString*&#32;<emphasis role="keywordtype">object</emphasis>&#32;=&#32;[pasteboard&#32;stringForType:NSPasteboardTypeString];
1749 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">object</emphasis>)
1750 &#32;&#32;&#32;&#32;{
1751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Failed&#32;to&#32;retrieve&#32;object&#32;from&#32;pasteboard&quot;</emphasis>);
1753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1754 &#32;&#32;&#32;&#32;}
1755 
1756 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.clipboardString);
1757 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.clipboardString&#32;=&#32;<link linkend="_init_8c_1a7f0a5b0d879baead229ef5e7381648e8">_glfw_strdup</link>([<emphasis role="keywordtype">object</emphasis>&#32;UTF8String]);
1758 
1759 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.clipboardString;
1760 
1761 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1762 }
1763 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1acfbd56cb05f4ff167536dd27457675c9"/>    <section>
    <title>_glfwGetCursorPosCocoa()</title>
<indexterm><primary>_glfwGetCursorPosCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetCursorPosCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetCursorPosCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double * xpos, double * ypos)</computeroutput></para><para>
Definition at line 1479 of file cocoa_window.m.</para>
<programlisting>1479 {
1480 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1481 
1482 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame];
1483 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;The&#32;returned&#32;location&#32;uses&#32;base&#32;0,1&#32;not&#32;0,0</emphasis>
1484 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSPoint&#32;pos&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;mouseLocationOutsideOfEventStream];
1485 
1486 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
1487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;pos.x;
1488 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
1489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;contentRect.size.height&#32;-&#32;pos.y;
1490 
1491 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1492 }
1493 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a8123dd21292eb09feab5008a105b6bd8"/>    <section>
    <title>_glfwGetEGLNativeDisplayCocoa()</title>
<indexterm><primary>_glfwGetEGLNativeDisplayCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetEGLNativeDisplayCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> _glfwGetEGLNativeDisplayCocoa (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1796 of file cocoa_window.m.</para>
<programlisting>1796 {
1797 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_internal_8h_1a26a1926709daa561cedd150f1a6bbb23">EGL_DEFAULT_DISPLAY</link>;
1798 }
1799 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a97d705d1f2f434b773a9ffb995fa22d0"/>    <section>
    <title>_glfwGetEGLNativeWindowCocoa()</title>
<indexterm><primary>_glfwGetEGLNativeWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetEGLNativeWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> _glfwGetEGLNativeWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1801 of file cocoa_window.m.</para>
<programlisting>1801 {
1802 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.layer;
1803 }
1804 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a2150005849bc429d94ec05ebe513b045"/>    <section>
    <title>_glfwGetEGLPlatformCocoa()</title>
<indexterm><primary>_glfwGetEGLPlatformCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetEGLPlatformCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> _glfwGetEGLPlatformCocoa (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> ** attribs)</computeroutput></para><para>
Definition at line 1765 of file cocoa_window.m.</para>
<programlisting>1765 {
1766 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a9fca831c2886082570fa87e2b7a9267e">ANGLE_platform_angle</link>)
1767 &#32;&#32;&#32;&#32;{
1768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;0;
1769 
1770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1afc8f1d5be1e42ae0a8a1ddecd7482d7d">ANGLE_platform_angle_opengl</link>)
1771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1ad8d9e97ed7790811470366b338833623">GLFW_ANGLE_PLATFORM_TYPE_OPENGL</link>)
1773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a50a1085aadafafe8bae962043ed5003b">EGL_PLATFORM_ANGLE_TYPE_OPENGL_ANGLE</link>;
1774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1775 
1776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a26f43f44ebbf0549d7a7b660c853a4f7">ANGLE_platform_angle_metal</link>)
1777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1ab56d91b26cf223dc67590a93a2f8507d">GLFW_ANGLE_PLATFORM_TYPE_METAL</link>)
1779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1ae6ec0cf1a62e563281a599a92966962f">EGL_PLATFORM_ANGLE_TYPE_METAL_ANGLE</link>;
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1781 
1782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>)
1783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(3,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link>));
1785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[0]&#32;=&#32;<link linkend="_internal_8h_1a30fbd18d0e6ca218cb9b3a579f56972e">EGL_PLATFORM_ANGLE_TYPE_ANGLE</link>;
1786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[1]&#32;=&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>;
1787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[2]&#32;=&#32;<link linkend="_internal_8h_1a6ae1eb8c8ec07b6f5a68f9cd6551691a">EGL_NONE</link>;
1788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_internal_8h_1ae585501f87a1353f924098f26084bb7c">EGL_PLATFORM_ANGLE_ANGLE</link>;
1789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1790 &#32;&#32;&#32;&#32;}
1791 
1792 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1793 }
1794 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a836e87f467d1c98fed7496ada8d0b0c2"/>    <section>
    <title>_glfwGetFramebufferSizeCocoa()</title>
<indexterm><primary>_glfwGetFramebufferSizeCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetFramebufferSizeCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetFramebufferSizeCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 1092 of file cocoa_window.m.</para>
<programlisting>1092 {
1093 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1094 
1095 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame];
1096 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;fbRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;convertRectToBacking:contentRect];
1097 
1098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
1099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;(int)&#32;fbRect.size.width;
1100 &#32;&#32;&#32;&#32;if&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
1101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;(int)&#32;fbRect.size.height;
1102 
1103 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1104 }
1105 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ad9c7faa3f5749d8d02661150761160ce"/>    <section>
    <title>_glfwGetKeyScancodeCocoa()</title>
<indexterm><primary>_glfwGetKeyScancodeCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetKeyScancodeCocoa</secondary></indexterm>
<para><computeroutput>int _glfwGetKeyScancodeCocoa (int key)</computeroutput></para><para>
Definition at line 1588 of file cocoa_window.m.</para>
<programlisting>1588 {
1589 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.scancodes[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
1590 }
1591 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a26f8d8cd038ce35e85898c3eab01517b"/>    <section>
    <title>_glfwGetPhysicalDevicePresentationSupportCocoa()</title>
<indexterm><primary>_glfwGetPhysicalDevicePresentationSupportCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetPhysicalDevicePresentationSupportCocoa</secondary></indexterm>
<para><computeroutput>int _glfwGetPhysicalDevicePresentationSupportCocoa (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</computeroutput></para><para>
Definition at line 1820 of file cocoa_window.m.</para>
<programlisting>1822 {
1823 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1824 }
1825 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a298061a0ab444139235c01cf1203d46c"/>    <section>
    <title>_glfwGetRequiredInstanceExtensionsCocoa()</title>
<indexterm><primary>_glfwGetRequiredInstanceExtensionsCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetRequiredInstanceExtensionsCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetRequiredInstanceExtensionsCocoa (char ** extensions)</computeroutput></para><para>
Definition at line 1806 of file cocoa_window.m.</para>
<programlisting>1806 {
1807 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a5169664f24499b5b82dec093165ca166">KHR_surface</link>&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1ae21c18d6fc708ba5779e7da6c2c3b8ba">EXT_metal_surface</link>)
1808 &#32;&#32;&#32;&#32;{
1809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[0]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_surface&quot;</emphasis>;
1810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[1]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_EXT_metal_surface&quot;</emphasis>;
1811 &#32;&#32;&#32;&#32;}
1812 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a5169664f24499b5b82dec093165ca166">KHR_surface</link>&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a2d3580e46f2aec1ed725d27ff85255bf">MVK_macos_surface</link>)
1813 &#32;&#32;&#32;&#32;{
1814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[0]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_surface&quot;</emphasis>;
1815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[1]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_MVK_macos_surface&quot;</emphasis>;
1816 &#32;&#32;&#32;&#32;}
1817 }
1818 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a9610e15d33c01c40263c55680ae9e01a"/>    <section>
    <title>_glfwGetScancodeNameCocoa()</title>
<indexterm><primary>_glfwGetScancodeNameCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetScancodeNameCocoa</secondary></indexterm>
<para><computeroutput>const char* _glfwGetScancodeNameCocoa (int scancode)</computeroutput></para><para>
Definition at line 1539 of file cocoa_window.m.</para>
<programlisting>1539 {
1540 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1541 
1542 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;&lt;&#32;0&#32;||&#32;scancode&#32;&gt;&#32;0xff&#32;||
1543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.keycodes[scancode]&#32;==&#32;<link linkend="_group__keys_1ga99aacc875b6b27a072552631e13775c7">GLFW_KEY_UNKNOWN</link>)
1544 &#32;&#32;&#32;&#32;{
1545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>,&#32;<emphasis role="stringliteral">&quot;Invalid&#32;scancode&#32;%i&quot;</emphasis>,&#32;scancode);
1546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1547 &#32;&#32;&#32;&#32;}
1548 
1549 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.keycodes[scancode];
1550 
1551 &#32;&#32;&#32;&#32;UInt32&#32;deadKeyState&#32;=&#32;0;
1552 &#32;&#32;&#32;&#32;UniChar&#32;characters[4];
1553 &#32;&#32;&#32;&#32;UniCharCount&#32;characterCount&#32;=&#32;0;
1554 
1555 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(UCKeyTranslate([(NSData*)&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.unicodeData&#32;bytes],
1556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scancode,
1557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kUCKeyActionDisplay,
1558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
1559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cocoa__platform_8h_1a5b55b8c4d02ce99d47f3986371c757e3">LMGetKbdType</link>(),
1560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kUCKeyTranslateNoDeadKeysBit,
1561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;deadKeyState,
1562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(characters)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(characters[0]),
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;characterCount,
1564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;characters)&#32;!=&#32;noErr)
1565 &#32;&#32;&#32;&#32;{
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1567 &#32;&#32;&#32;&#32;}
1568 
1569 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!characterCount)
1570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1571 
1572 &#32;&#32;&#32;&#32;CFStringRef&#32;<emphasis role="keywordtype">string</emphasis>&#32;=&#32;CFStringCreateWithCharactersNoCopy(kCFAllocatorDefault,
1573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;characters,
1574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;characterCount,
1575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kCFAllocatorNull);
1576 &#32;&#32;&#32;&#32;CFStringGetCString(<emphasis role="keywordtype">string</emphasis>,
1577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>],
1578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>]),
1579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kCFStringEncodingUTF8);
1580 &#32;&#32;&#32;&#32;CFRelease(<emphasis role="keywordtype">string</emphasis>);
1581 
1582 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.ns.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
1583 
1584 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1585 }
1586 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a0fce93f6b24279d112526baaf3850f98"/>    <section>
    <title>_glfwGetWindowContentScaleCocoa()</title>
<indexterm><primary>_glfwGetWindowContentScaleCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetWindowContentScaleCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowContentScaleCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 1130 of file cocoa_window.m.</para>
<programlisting>1131 {
1132 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1133 
1134 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;<link linkend="_glext_8h_1a0c0cc65d03e264ad2c5262927b620d3f">points</link>&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame];
1135 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;convertRectToBacking:<link linkend="_glext_8h_1a0c0cc65d03e264ad2c5262927b620d3f">points</link>];
1136 
1137 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
1138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;(float)&#32;(<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>.size.width&#32;/&#32;<link linkend="_glext_8h_1a0c0cc65d03e264ad2c5262927b620d3f">points</link>.size.width);
1139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yscale)
1140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;(float)&#32;(<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>.size.height&#32;/&#32;<link linkend="_glext_8h_1a0c0cc65d03e264ad2c5262927b620d3f">points</link>.size.height);
1141 
1142 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1143 }
1144 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ad69ef3198e9625bd9bf91971fa83fb6c"/>    <section>
    <title>_glfwGetWindowFrameSizeCocoa()</title>
<indexterm><primary>_glfwGetWindowFrameSizeCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetWindowFrameSizeCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowFrameSizeCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * left, int * top, int * right, int * bottom)</computeroutput></para><para>
Definition at line 1107 of file cocoa_window.m.</para>
<programlisting>1109 {
1110 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1111 
1112 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame];
1113 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;frameRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;frameRectForContentRect:contentRect];
1114 
1115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>)
1116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>&#32;=&#32;contentRect.origin.x&#32;-&#32;frameRect.origin.x;
1117 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>)
1118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>&#32;=&#32;frameRect.origin.y&#32;+&#32;frameRect.size.height&#32;-
1119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRect.origin.y&#32;-&#32;contentRect.size.height;
1120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>)
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>&#32;=&#32;frameRect.origin.x&#32;+&#32;frameRect.size.width&#32;-
1122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRect.origin.x&#32;-&#32;contentRect.size.width;
1123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)
1124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>&#32;=&#32;contentRect.origin.y&#32;-&#32;frameRect.origin.y;
1125 
1126 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1127 }
1128 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a9c12b3cf9ca9f66400d483df22d700c2"/>    <section>
    <title>_glfwGetWindowOpacityCocoa()</title>
<indexterm><primary>_glfwGetWindowOpacityCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetWindowOpacityCocoa</secondary></indexterm>
<para><computeroutput>float _glfwGetWindowOpacityCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1382 of file cocoa_window.m.</para>
<programlisting>1382 {
1383 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;alphaValue];
1385 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1386 }
1387 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a211e5ad52d8510c1ece781a770f45a61"/>    <section>
    <title>_glfwGetWindowPosCocoa()</title>
<indexterm><primary>_glfwGetWindowPosCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetWindowPosCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowPosCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * xpos, int * ypos)</computeroutput></para><para>
Definition at line 1000 of file cocoa_window.m.</para>
<programlisting>1000 {
1001 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1002 
1003 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=
1004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;contentRectForFrameRect:[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;frame]];
1005 
1006 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
1007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;contentRect.origin.x;
1008 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
1009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;<link linkend="_cocoa__window_8m_1afb4258e6a6ce85f3fdfd405086fa8847">_glfwTransformYCocoa</link>(contentRect.origin.y&#32;+&#32;contentRect.size.height&#32;-&#32;1);
1010 
1011 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1012 }
1013 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a5335732bb88f0fd0120a4487b57cb3fd"/>    <section>
    <title>_glfwGetWindowSizeCocoa()</title>
<indexterm><primary>_glfwGetWindowSizeCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwGetWindowSizeCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowSizeCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 1027 of file cocoa_window.m.</para>
<programlisting>1027 {
1028 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1029 
1030 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame];
1031 
1032 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
1033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;contentRect.size.width;
1034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
1035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;contentRect.size.height;
1036 
1037 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1038 }
1039 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a47ce035c773448e2bcb90d36776bd83b"/>    <section>
    <title>_glfwHideWindowCocoa()</title>
<indexterm><primary>_glfwHideWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwHideWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwHideWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1178 of file cocoa_window.m.</para>
<programlisting>1178 {
1179 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1180 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;orderOut:nil];
1181 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1182 }
1183 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a0849c826f0f3a12a51978f3808da74cb"/>    <section>
    <title>_glfwIconifyWindowCocoa()</title>
<indexterm><primary>_glfwIconifyWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwIconifyWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwIconifyWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1146 of file cocoa_window.m.</para>
<programlisting>1146 {
1147 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1148 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;miniaturize:nil];
1149 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1150 }
1151 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a94d1ac7326e075ece579ffc57fdafae0"/>    <section>
    <title>_glfwMaximizeWindowCocoa()</title>
<indexterm><primary>_glfwMaximizeWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwMaximizeWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwMaximizeWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1163 of file cocoa_window.m.</para>
<programlisting>1163 {
1164 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(![<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isZoomed])
1166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;<link linkend="_wave_8c_1a5a2149a845f88b6489d3d88845d0f257">zoom</link>:nil];
1167 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1168 }
1169 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a757a812eed87ea2bccbe05e951b69387"/>    <section>
    <title>_glfwPollEventsCocoa()</title>
<indexterm><primary>_glfwPollEventsCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwPollEventsCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPollEventsCocoa (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1407 of file cocoa_window.m.</para>
<programlisting>1407 {
1408 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1409 
1410 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)
1411 &#32;&#32;&#32;&#32;{
1412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NSEvent*&#32;<emphasis role="keyword">event</emphasis>&#32;=&#32;[NSApp&#32;nextEventMatchingMask:<link linkend="_cocoa__platform_8h_1ad90ba4b31a272cdeb62ac764ab428593">NSEventMaskAny</link>
1413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;untilDate:[NSDate&#32;distantPast]
1414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inMode:NSDefaultRunLoopMode
1415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dequeue:YES];
1416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>&#32;==&#32;nil)
1417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1418 
1419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[NSApp&#32;sendEvent:<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>];
1420 &#32;&#32;&#32;&#32;}
1421 
1422 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1423 }
1424 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1aeb9015543bf8a7f4a69c90af09fc15ba"/>    <section>
    <title>_glfwPostEmptyEventCocoa()</title>
<indexterm><primary>_glfwPostEmptyEventCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwPostEmptyEventCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPostEmptyEventCocoa (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1461 of file cocoa_window.m.</para>
<programlisting>1461 {
1462 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1463 
1464 &#32;&#32;&#32;&#32;NSEvent*&#32;<emphasis role="keyword">event</emphasis>&#32;=&#32;[NSEvent&#32;otherEventWithType:<link linkend="_cocoa__platform_8h_1a382369a41c14e4366c20cdd144e87540">NSEventTypeApplicationDefined</link>
1465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a050778a7129cc14e57da7024beb87ce8">location</link>:NSMakePoint(0,&#32;0)
1466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifierFlags:0
1467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timestamp:0
1468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;windowNumber:0
1469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;context:nil
1470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subtype:0
1471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data1:0
1472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data2:0];
1473 &#32;&#32;&#32;&#32;[NSApp&#32;postEvent:<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>&#32;atStart:YES];
1474 
1475 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1476 }
1477 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a2ea01006dbd5f5569ca848f938bbc3a7"/>    <section>
    <title>_glfwRawMouseMotionSupportedCocoa()</title>
<indexterm><primary>_glfwRawMouseMotionSupportedCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwRawMouseMotionSupportedCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwRawMouseMotionSupportedCocoa (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1402 of file cocoa_window.m.</para>
<programlisting>1402 {
1403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1404 }
1405 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a3a4e124a0715ea4bdffef5c5aeb9b81b"/>    <section>
    <title>_glfwRequestWindowAttentionCocoa()</title>
<indexterm><primary>_glfwRequestWindowAttentionCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwRequestWindowAttentionCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRequestWindowAttentionCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1185 of file cocoa_window.m.</para>
<programlisting>1185 {
1186 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1187 &#32;&#32;&#32;&#32;[NSApp&#32;requestUserAttention:NSInformationalRequest];
1188 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1189 }
1190 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a572ceaad5ec544e5ef2fbe56b1c90e30"/>    <section>
    <title>_glfwRestoreWindowCocoa()</title>
<indexterm><primary>_glfwRestoreWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwRestoreWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRestoreWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1153 of file cocoa_window.m.</para>
<programlisting>1153 {
1154 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;([<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isMiniaturized])
1156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;deminiaturize:nil];
1157 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;([<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isZoomed])
1158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;<link linkend="_wave_8c_1a5a2149a845f88b6489d3d88845d0f257">zoom</link>:nil];
1159 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1160 }
1161 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a6a28c007445d95ad4824104ba8eeb47f"/>    <section>
    <title>_glfwSetClipboardStringCocoa()</title>
<indexterm><primary>_glfwSetClipboardStringCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetClipboardStringCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetClipboardStringCocoa (const char * string)</computeroutput></para><para>
Definition at line 1727 of file cocoa_window.m.</para>
<programlisting>1727 {
1728 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1729 &#32;&#32;&#32;&#32;NSPasteboard*&#32;pasteboard&#32;=&#32;[NSPasteboard&#32;generalPasteboard];
1730 &#32;&#32;&#32;&#32;[pasteboard&#32;declareTypes:@[NSPasteboardTypeString]&#32;owner:nil];
1731 &#32;&#32;&#32;&#32;[pasteboard&#32;setString:@(<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>)&#32;forType:NSPasteboardTypeString];
1732 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1733 }
1734 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a402fc6ab6d2438a38864bb9a77f595cd"/>    <section>
    <title>_glfwSetCursorCocoa()</title>
<indexterm><primary>_glfwSetCursorCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetCursorCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 1719 of file cocoa_window.m.</para>
<programlisting>1719 {
1720 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1721 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursorInContentArea(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
1722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1723 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1724 }
1725 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a360d9f80249d179204ff225b720834a0"/>    <section>
    <title>_glfwSetCursorModeCocoa()</title>
<indexterm><primary>_glfwSetCursorModeCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetCursorModeCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorModeCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int mode)</computeroutput></para><para>
Definition at line 1531 of file cocoa_window.m.</para>
<programlisting>1531 {
1532 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1533 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cocoa__window_8m_1a5c4632caeeaab410d330f70bd2b855e6">_glfwWindowFocusedCocoa</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateCursorMode(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1535 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1536 }
1537 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a5f0792b18b958ab7eec160b5687f2abe"/>    <section>
    <title>_glfwSetCursorPosCocoa()</title>
<indexterm><primary>_glfwSetCursorPosCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetCursorPosCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorPosCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double x, double y)</computeroutput></para><para>
Definition at line 1495 of file cocoa_window.m.</para>
<programlisting>1495 {
1496 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1497 
1498 &#32;&#32;&#32;&#32;updateCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1499 
1500 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame];
1501 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;The&#32;returned&#32;location&#32;uses&#32;base&#32;0,1&#32;not&#32;0,0</emphasis>
1502 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSPoint&#32;pos&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;mouseLocationOutsideOfEventStream];
1503 
1504 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.cursorWarpDeltaX&#32;+=&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;-&#32;pos.x;
1505 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.cursorWarpDeltaY&#32;+=&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;-&#32;contentRect.size.height&#32;+&#32;pos.y;
1506 
1507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1508 &#32;&#32;&#32;&#32;{
1509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CGDisplayMoveCursorToPoint(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor-&gt;ns.displayID,
1510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CGPointMake(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>));
1511 &#32;&#32;&#32;&#32;}
1512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1513 &#32;&#32;&#32;&#32;{
1514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;localRect&#32;=&#32;NSMakeRect(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;contentRect.size.height&#32;-&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;-&#32;1,&#32;0,&#32;0);
1515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;globalRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;convertRectToScreen:localRect];
1516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSPoint&#32;globalPoint&#32;=&#32;globalRect.origin;
1517 
1518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CGWarpMouseCursorPosition(CGPointMake(globalPoint.x,
1519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_cocoa__window_8m_1afb4258e6a6ce85f3fdfd405086fa8847">_glfwTransformYCocoa</link>(globalPoint.y)));
1520 &#32;&#32;&#32;&#32;}
1521 
1522 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Calling&#32;this&#32;right&#32;after&#32;setting&#32;the&#32;cursor&#32;position&#32;prevents&#32;macOS</emphasis>
1523 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;freezing&#32;the&#32;cursor&#32;for&#32;a&#32;fraction&#32;of&#32;a&#32;second&#32;afterwards</emphasis>
1524 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;cursorMode&#32;!=&#32;<link linkend="_glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88">GLFW_CURSOR_DISABLED</link>)
1525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CGAssociateMouseAndMouseCursorPosition(<emphasis role="keyword">true</emphasis>);
1526 
1527 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1528 }
1529 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a387c0c7caba6e2a702db8e3112a99b50"/>    <section>
    <title>_glfwSetRawMouseMotionCocoa()</title>
<indexterm><primary>_glfwSetRawMouseMotionCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetRawMouseMotionCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetRawMouseMotionCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1396 of file cocoa_window.m.</para>
<programlisting>1396 {
1397 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga5dda77e023e83151e8bd55a6758f946a">GLFW_FEATURE_UNIMPLEMENTED</link>,
1398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Raw&#32;mouse&#32;motion&#32;not&#32;yet&#32;implemented&quot;</emphasis>);
1399 }
1400 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a971074eb27b956a56b02fb058180cc6d"/>    <section>
    <title>_glfwSetWindowAspectRatioCocoa()</title>
<indexterm><primary>_glfwSetWindowAspectRatioCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowAspectRatioCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowAspectRatioCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int numer, int denom)</computeroutput></para><para>
Definition at line 1082 of file cocoa_window.m.</para>
<programlisting>1082 {
1083 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(numer&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;denom&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
1085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setResizeIncrements:NSMakeSize(1.0,&#32;1.0)];
1086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentAspectRatio:NSMakeSize(numer,&#32;denom)];
1088 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1089 }
1090 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1aff784a2b90156ae71ae2c4b9187ccd43"/>    <section>
    <title>_glfwSetWindowDecoratedCocoa()</title>
<indexterm><primary>_glfwSetWindowDecoratedCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowDecoratedCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowDecoratedCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1357 of file cocoa_window.m.</para>
<programlisting>1357 {
1358 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1359 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setStyleMask:getStyleMask(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)];
1360 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;makeFirstResponder:<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view];
1361 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1362 }
1363 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ac60c438b0379854c3443dda82dc91d0e"/>    <section>
    <title>_glfwSetWindowFloatingCocoa()</title>
<indexterm><primary>_glfwSetWindowFloatingCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowFloatingCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowFloatingCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1365 of file cocoa_window.m.</para>
<programlisting>1365 {
1366 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
1368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setLevel:NSFloatingWindowLevel];
1369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setLevel:NSNormalWindowLevel];
1371 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1372 }
1373 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1aca182e29dd28bd99cc074cd195419ce5"/>    <section>
    <title>_glfwSetWindowIconCocoa()</title>
<indexterm><primary>_glfwSetWindowIconCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowIconCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowIconCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int count, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * images)</computeroutput></para><para>
Definition at line 993 of file cocoa_window.m.</para>
<programlisting>994 {
995 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Regular&#32;windows&#32;do&#32;not&#32;have&#32;icons&#32;on&#32;macOS&quot;</emphasis>);
997 }
998 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a61f5c7e6c2fcb9ad3e6411a6e8357f39"/>    <section>
    <title>_glfwSetWindowMonitorCocoa()</title>
<indexterm><primary>_glfwSetWindowMonitorCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowMonitorCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMonitorCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int xpos, int ypos, int width, int height, int refreshRate)</computeroutput></para><para>
Definition at line 1204 of file cocoa_window.m.</para>
<programlisting>1208 {
1209 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1210 
1211 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor&#32;==&#32;monitor)
1212 &#32;&#32;&#32;&#32;{
1213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor)
1214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1aa869aae87a7a75ba89211619ba103aa1">window</link>&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=
1221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NSMakeRect(xpos,&#32;<link linkend="_cocoa__window_8m_1afb4258e6a6ce85f3fdfd405086fa8847">_glfwTransformYCocoa</link>(ypos&#32;+&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;-&#32;1),&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;frameRect&#32;=
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;frameRectForContentRect:contentRect
1224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;styleMask:getStyleMask(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)];
1225 
1226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setFrame:frameRect&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>:YES];
1227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1228 
1229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1230 &#32;&#32;&#32;&#32;}
1231 
1232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releaseMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1234 
1235 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a5cfc56e9a5e1e8dd88862c9c7b8a6f7f">_glfwInputWindowMonitor</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;monitor);
1236 
1237 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Allow&#32;the&#32;state&#32;cached&#32;in&#32;Cocoa&#32;to&#32;catch&#32;up&#32;to&#32;reality</emphasis>
1238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Solve&#32;this&#32;in&#32;a&#32;less&#32;terrible&#32;way</emphasis>
1239 &#32;&#32;&#32;&#32;<link linkend="_cocoa__window_8m_1a757a812eed87ea2bccbe05e951b69387">_glfwPollEventsCocoa</link>();
1240 
1241 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSUInteger&#32;styleMask&#32;=&#32;getStyleMask(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1242 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setStyleMask:styleMask];
1243 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Changing&#32;the&#32;style&#32;mask&#32;can&#32;cause&#32;the&#32;first&#32;responder&#32;to&#32;be&#32;cleared</emphasis>
1244 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;makeFirstResponder:<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view];
1245 
1246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1247 &#32;&#32;&#32;&#32;{
1248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setLevel:NSMainMenuWindowLevel&#32;+&#32;1];
1249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setHasShadow:NO];
1250 
1251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1252 &#32;&#32;&#32;&#32;}
1253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1254 &#32;&#32;&#32;&#32;{
1255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NSRect&#32;contentRect&#32;=&#32;NSMakeRect(xpos,&#32;<link linkend="_cocoa__window_8m_1afb4258e6a6ce85f3fdfd405086fa8847">_glfwTransformYCocoa</link>(ypos&#32;+&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;-&#32;1),
1256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
1257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NSRect&#32;frameRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;frameRectForContentRect:contentRect
1258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;styleMask:styleMask];
1259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setFrame:frameRect&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>:YES];
1260 
1261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;numer&#32;!=&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;&amp;&amp;
1262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;denom&#32;!=&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
1263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentAspectRatio:NSMakeSize(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;numer,
1265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;denom)];
1266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1267 
1268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;minwidth&#32;!=&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;&amp;&amp;
1269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;minheight&#32;!=&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
1270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentMinSize:NSMakeSize(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;minwidth,
1272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;minheight)];
1273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1274 
1275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;maxwidth&#32;!=&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;&amp;&amp;
1276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;maxheight&#32;!=&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
1277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentMaxSize:NSMakeSize(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;maxwidth,
1279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;maxheight)];
1280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1281 
1282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;floating)
1283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setLevel:NSFloatingWindowLevel];
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setLevel:NSNormalWindowLevel];
1286 
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setHasShadow:YES];
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Clearing&#32;NSWindowStyleMaskTitled&#32;resets&#32;and&#32;disables&#32;the&#32;window</emphasis>
1289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;title&#32;property&#32;but&#32;the&#32;miniwindow&#32;title&#32;property&#32;is&#32;unaffected</emphasis>
1290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setTitle:[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;miniwindowTitle]];
1291 &#32;&#32;&#32;&#32;}
1292 
1293 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1294 }
1295 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a9b21a6f52a81ef48e5d1628b4bc6babf"/>    <section>
    <title>_glfwSetWindowMousePassthroughCocoa()</title>
<indexterm><primary>_glfwSetWindowMousePassthroughCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowMousePassthroughCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMousePassthroughCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1375 of file cocoa_window.m.</para>
<programlisting>1375 {
1376 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1377 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setIgnoresMouseEvents:<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>];
1378 &#32;&#32;&#32;&#32;}
1379 }
1380 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a510261f18c0ffe2ad7eba0d448d1e5f7"/>    <section>
    <title>_glfwSetWindowOpacityCocoa()</title>
<indexterm><primary>_glfwSetWindowOpacityCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowOpacityCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowOpacityCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float opacity)</computeroutput></para><para>
Definition at line 1389 of file cocoa_window.m.</para>
<programlisting>1389 {
1390 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1391 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setAlphaValue:opacity];
1392 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1393 }
1394 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a32c4fc6931ebcc217765f7bcda7a05d7"/>    <section>
    <title>_glfwSetWindowPosCocoa()</title>
<indexterm><primary>_glfwSetWindowPosCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowPosCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowPosCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int x, int y)</computeroutput></para><para>
Definition at line 1015 of file cocoa_window.m.</para>
<programlisting>1015 {
1016 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1017 
1018 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;contentRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame];
1019 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;dummyRect&#32;=&#32;NSMakeRect(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_cocoa__window_8m_1afb4258e6a6ce85f3fdfd405086fa8847">_glfwTransformYCocoa</link>(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;+&#32;contentRect.size.height&#32;-&#32;1),&#32;0,&#32;0);
1020 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSRect&#32;frameRect&#32;=&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;frameRectForContentRect:dummyRect];
1021 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setFrameOrigin:frameRect.origin];
1022 
1023 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1024 }
1025 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a558cf6151f645e7765d8dd96b6666c94"/>    <section>
    <title>_glfwSetWindowResizableCocoa()</title>
<indexterm><primary>_glfwSetWindowResizableCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowResizableCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowResizableCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1350 of file cocoa_window.m.</para>
<programlisting>1350 {
1351 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1352 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setStyleMask:getStyleMask(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)];
1353 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1354 }
1355 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a986965eda2ae538a0e1b53db37c99102"/>    <section>
    <title>_glfwSetWindowSizeCocoa()</title>
<indexterm><primary>_glfwSetWindowSizeCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowSizeCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int width, int height)</computeroutput></para><para>
Definition at line 1041 of file cocoa_window.m.</para>
<programlisting>1041 {
1042 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1043 
1044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1045 &#32;&#32;&#32;&#32;{
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor-&gt;window&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1048 &#32;&#32;&#32;&#32;}
1049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1050 &#32;&#32;&#32;&#32;{
1051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NSRect&#32;contentRect&#32;=
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;contentRectForFrameRect:[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;frame]];
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRect.origin.y&#32;+=&#32;contentRect.size.height&#32;-&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRect.size&#32;=&#32;NSMakeSize(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
1055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setFrame:[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;frameRectForContentRect:contentRect]
1056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>:YES];
1057 &#32;&#32;&#32;&#32;}
1058 
1059 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1060 }
1061 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a0ccc65ede94e4a9d6262a2244edf0d90"/>    <section>
    <title>_glfwSetWindowSizeLimitsCocoa()</title>
<indexterm><primary>_glfwSetWindowSizeLimitsCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowSizeLimitsCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeLimitsCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int minwidth, int minheight, int maxwidth, int maxheight)</computeroutput></para><para>
Definition at line 1063 of file cocoa_window.m.</para>
<programlisting>1065 {
1066 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1067 
1068 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(minwidth&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;minheight&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
1069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentMinSize:NSMakeSize(0,&#32;0)];
1070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentMinSize:NSMakeSize(minwidth,&#32;minheight)];
1072 
1073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxwidth&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;maxheight&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
1074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentMaxSize:NSMakeSize(DBL_MAX,&#32;DBL_MAX)];
1075 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setContentMaxSize:NSMakeSize(maxwidth,&#32;maxheight)];
1077 
1078 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1079 }
1080 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ae880de076a1a02e9923df492fa797672"/>    <section>
    <title>_glfwSetWindowTitleCocoa()</title>
<indexterm><primary>_glfwSetWindowTitleCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwSetWindowTitleCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowTitleCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const char * title)</computeroutput></para><para>
Definition at line 982 of file cocoa_window.m.</para>
<programlisting>982 {
983 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
984 &#32;&#32;&#32;&#32;NSString*&#32;<emphasis role="keywordtype">string</emphasis>&#32;=&#32;@(title);
985 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setTitle:<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>];
986 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Set&#32;the&#32;miniwindow&#32;title&#32;explicitly&#32;as&#32;setTitle:&#32;doesn&apos;t&#32;update&#32;it</emphasis>
987 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;the&#32;window&#32;lacks&#32;NSWindowStyleMaskTitled</emphasis>
988 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;setMiniwindowTitle:<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>];
989 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
990 }
991 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ab0952778f676e8674cb72d4469c5ef00"/>    <section>
    <title>_glfwShowWindowCocoa()</title>
<indexterm><primary>_glfwShowWindowCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwShowWindowCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwShowWindowCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1171 of file cocoa_window.m.</para>
<programlisting>1171 {
1172 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1173 &#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;orderFront:nil];
1174 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1175 }
1176 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1afb4258e6a6ce85f3fdfd405086fa8847"/>    <section>
    <title>_glfwTransformYCocoa()</title>
<indexterm><primary>_glfwTransformYCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwTransformYCocoa</secondary></indexterm>
<para><computeroutput>float _glfwTransformYCocoa (float y)</computeroutput></para><para>
Definition at line 889 of file cocoa_window.m.</para>
<programlisting>889 {
890 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CGDisplayBounds(CGMainDisplayID()).size.height&#32;-&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;-&#32;1;
891 }
892 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a35793c039673ec5b2e34f6b87b517eb7"/>    <section>
    <title>_glfwWaitEventsCocoa()</title>
<indexterm><primary>_glfwWaitEventsCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwWaitEventsCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsCocoa (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1426 of file cocoa_window.m.</para>
<programlisting>1426 {
1427 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1428 
1429 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;I&#32;wanted&#32;to&#32;pass&#32;NO&#32;to&#32;dequeue:,&#32;and&#32;rely&#32;on&#32;PollEvents&#32;to</emphasis>
1430 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dequeue&#32;and&#32;send.&#32;&#32;For&#32;reasons&#32;not&#32;at&#32;all&#32;clear&#32;to&#32;me,&#32;passing</emphasis>
1431 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NO&#32;to&#32;dequeue:&#32;causes&#32;this&#32;method&#32;never&#32;to&#32;return.</emphasis>
1432 &#32;&#32;&#32;&#32;NSEvent&#32;*<emphasis role="keyword">event</emphasis>&#32;=&#32;[NSApp&#32;nextEventMatchingMask:<link linkend="_cocoa__platform_8h_1ad90ba4b31a272cdeb62ac764ab428593">NSEventMaskAny</link>
1433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;untilDate:[NSDate&#32;distantFuture]
1434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inMode:NSDefaultRunLoopMode
1435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dequeue:YES];
1436 &#32;&#32;&#32;&#32;[NSApp&#32;sendEvent:<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>];
1437 
1438 &#32;&#32;&#32;&#32;<link linkend="_cocoa__window_8m_1a757a812eed87ea2bccbe05e951b69387">_glfwPollEventsCocoa</link>();
1439 
1440 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1441 }
1442 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ab81f9e1d123e745f8a4f75f48b7fdd14"/>    <section>
    <title>_glfwWaitEventsTimeoutCocoa()</title>
<indexterm><primary>_glfwWaitEventsTimeoutCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwWaitEventsTimeoutCocoa</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsTimeoutCocoa (double timeout)</computeroutput></para><para>
Definition at line 1444 of file cocoa_window.m.</para>
<programlisting>1444 {
1445 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1446 
1447 &#32;&#32;&#32;&#32;NSDate*&#32;date&#32;=&#32;[NSDate&#32;dateWithTimeIntervalSinceNow:<link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>];
1448 &#32;&#32;&#32;&#32;NSEvent*&#32;<emphasis role="keyword">event</emphasis>&#32;=&#32;[NSApp&#32;nextEventMatchingMask:<link linkend="_cocoa__platform_8h_1ad90ba4b31a272cdeb62ac764ab428593">NSEventMaskAny</link>
1449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;untilDate:date
1450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inMode:NSDefaultRunLoopMode
1451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dequeue:YES];
1452 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>)
1453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[NSApp&#32;sendEvent:<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>];
1454 
1455 &#32;&#32;&#32;&#32;<link linkend="_cocoa__window_8m_1a757a812eed87ea2bccbe05e951b69387">_glfwPollEventsCocoa</link>();
1456 
1457 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1458 }
1459 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a5c4632caeeaab410d330f70bd2b855e6"/>    <section>
    <title>_glfwWindowFocusedCocoa()</title>
<indexterm><primary>_glfwWindowFocusedCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwWindowFocusedCocoa</secondary></indexterm>
<para><computeroutput>int _glfwWindowFocusedCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1297 of file cocoa_window.m.</para>
<programlisting>1297 {
1298 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1299 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isKeyWindow];
1300 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1301 }
1302 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a8b8c0bd373d9f9d682ce09fd7948c365"/>    <section>
    <title>_glfwWindowHoveredCocoa()</title>
<indexterm><primary>_glfwWindowHoveredCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwWindowHoveredCocoa</secondary></indexterm>
<para><computeroutput>int _glfwWindowHoveredCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1325 of file cocoa_window.m.</para>
<programlisting>1325 {
1326 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1327 
1328 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;NSPoint&#32;point&#32;=&#32;[NSEvent&#32;mouseLocation];
1329 
1330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;([NSWindow&#32;windowNumberAtPoint:point&#32;belowWindowWithWindowNumber:0]&#32;!=
1331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;windowNumber])
1332 &#32;&#32;&#32;&#32;{
1333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1334 &#32;&#32;&#32;&#32;}
1335 
1336 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NSMouseInRect(point,
1337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;convertRectToScreen:[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.view&#32;frame]],&#32;NO);
1338 
1339 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1340 }
1341 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1ab482ea45110a9866e73ec37544f8a654"/>    <section>
    <title>_glfwWindowIconifiedCocoa()</title>
<indexterm><primary>_glfwWindowIconifiedCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwWindowIconifiedCocoa</secondary></indexterm>
<para><computeroutput>int _glfwWindowIconifiedCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1304 of file cocoa_window.m.</para>
<programlisting>1304 {
1305 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1306 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isMiniaturized];
1307 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1308 }
1309 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a7b2f7e5ca68d3870336b00ed20b2b318"/>    <section>
    <title>_glfwWindowMaximizedCocoa()</title>
<indexterm><primary>_glfwWindowMaximizedCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwWindowMaximizedCocoa</secondary></indexterm>
<para><computeroutput>int _glfwWindowMaximizedCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1318 of file cocoa_window.m.</para>
<programlisting>1318 {
1319 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isZoomed];
1321 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1322 }
1323 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1a51446791f1cad9a9d61901fa63396623"/>    <section>
    <title>_glfwWindowVisibleCocoa()</title>
<indexterm><primary>_glfwWindowVisibleCocoa</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>_glfwWindowVisibleCocoa</secondary></indexterm>
<para><computeroutput>int _glfwWindowVisibleCocoa (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1311 of file cocoa_window.m.</para>
<programlisting>1311 {
1312 &#32;&#32;&#32;&#32;@autoreleasepool&#32;{
1313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object&#32;isVisible];
1314 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;autoreleasepool</emphasis>
1315 }
1316 
</programlisting>    </section><anchor xml:id="_cocoa__window_8m_1abc60523370de1728f54e48d7e1d6625a"/>    <section>
    <title>glfwGetCocoaWindow()</title>
<indexterm><primary>glfwGetCocoaWindow</primary><secondary>cocoa_window.m</secondary></indexterm>
<indexterm><primary>cocoa_window.m</primary><secondary>glfwGetCocoaWindow</secondary></indexterm>
<para><computeroutput><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glad_8h_1a58c2a664503e14ffb8f21012aabff3e9">id</link> glfwGetCocoaWindow (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * handle)</computeroutput></para><para>
Definition at line 1923 of file cocoa_window.m.</para>
<programlisting>1923 {
1924 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;(<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*)&#32;handle;
1925 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(nil);
1926 
1927 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>.<link linkend="_struct___g_l_f_wplatform_1adadc0cac5c197cc28788bc4993a9f6da">platformID</link>&#32;!=&#32;<link linkend="_group__init_1ga83b18714254f75bc2f0cdbafa0f10b6b">GLFW_PLATFORM_COCOA</link>)
1928 &#32;&#32;&#32;&#32;{
1929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,
1930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Cocoa:&#32;Platform&#32;not&#32;initialized&quot;</emphasis>);
1931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1932 &#32;&#32;&#32;&#32;}
1933 
1934 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;ns.object;
1935 }
1936 
</programlisting></section>
</section>
</section>
