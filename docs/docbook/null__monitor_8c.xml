<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_null__monitor_8c">
<title>deps/glfw/src/null_monitor.c File Reference</title>
<indexterm><primary>deps/glfw/src/null_monitor.c</primary></indexterm>
<programlisting>#include &quot;internal.h&quot;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;math.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_null__monitor_8c_1a339d261e3d07b4c45c393dfd4452908b">_glfwPollMonitorsNull</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_null__monitor_8c_1a0d7c225bc6576fd5fea1d8a26d432c8c">_glfwFreeMonitorNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_null__monitor_8c_1a1e81eddc13231e54342eff02726e8728">_glfwGetMonitorPosNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_null__monitor_8c_1a3bb4dc5cd26d5e80f713fafc071f39fa">_glfwGetMonitorContentScaleNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_null__monitor_8c_1ac7dda306ec2006471faa653bbefe9ba6">_glfwGetMonitorWorkareaNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *xpos, int *ypos, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * <link linkend="_null__monitor_8c_1ab10735cdc44e7874c985a89cd0ab4d7b">_glfwGetVideoModesNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *found)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_null__monitor_8c_1ae519e7492dd33cd99a061be09c98523c">_glfwGetVideoModeNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> *<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_null__monitor_8c_1a67d7f3710e7856b007821f6729751c46">_glfwGetGammaRampNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_null__monitor_8c_1af8d1f4f2409c49dd5d5e282233a36cb6">_glfwSetGammaRampNull</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_null__monitor_8c_1a0d7c225bc6576fd5fea1d8a26d432c8c"/>    <section>
    <title>_glfwFreeMonitorNull()</title>
<indexterm><primary>_glfwFreeMonitorNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwFreeMonitorNull</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwFreeMonitorNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor)</computeroutput></para><para>
Definition at line 68 of file null_monitor.c.</para>
<programlisting>69 {
70 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a9ec7f45d75c8b6435f49b22b86672806">_glfwFreeGammaArrays</link>(&amp;monitor-&gt;null.ramp);
71 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1a67d7f3710e7856b007821f6729751c46"/>    <section>
    <title>_glfwGetGammaRampNull()</title>
<indexterm><primary>_glfwGetGammaRampNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwGetGammaRampNull</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwGetGammaRampNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp)</computeroutput></para><para>
Definition at line 119 of file null_monitor.c.</para>
<programlisting>120 {
121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!monitor-&gt;null.ramp.size)
122 &#32;&#32;&#32;&#32;{
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
124 
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1acb6a8b432b06fd0accdfc0e046785109">_glfwAllocGammaArrays</link>(&amp;monitor-&gt;null.ramp,&#32;256);
126 
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;monitor-&gt;null.ramp.size;&#32;&#32;i++)
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;gamma&#32;=&#32;2.2f;
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;i&#32;/&#32;(float)&#32;(monitor-&gt;null.ramp.size&#32;-&#32;1);
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;powf(<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>,&#32;1.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;/&#32;gamma)&#32;*&#32;65535.f&#32;+&#32;0.5f;
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;<link linkend="_init_8c_1af27e3c452fbb2a7133339f77b72fcf37">_glfw_fminf</link>(<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>,&#32;65535.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
134 
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor-&gt;null.ramp.red[i]&#32;&#32;&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;short)&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>;
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor-&gt;null.ramp.green[i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;short)&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor-&gt;null.ramp.blue[i]&#32;&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;short)&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>;
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
139 &#32;&#32;&#32;&#32;}
140 
141 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1acb6a8b432b06fd0accdfc0e046785109">_glfwAllocGammaArrays</link>(ramp,&#32;monitor-&gt;null.ramp.size);
142 &#32;&#32;&#32;&#32;memcpy(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1a2cce5d968734b685623eef913e635138">red</link>,&#32;&#32;&#32;monitor-&gt;null.ramp.red,&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">short</emphasis>)&#32;*&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>);
143 &#32;&#32;&#32;&#32;memcpy(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1affccc6f5df47820b6562d709da3a5a3a">green</link>,&#32;monitor-&gt;null.ramp.green,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">short</emphasis>)&#32;*&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>);
144 &#32;&#32;&#32;&#32;memcpy(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1acf0c836d0efe29c392fe8d1a1042744b">blue</link>,&#32;&#32;monitor-&gt;null.ramp.blue,&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">short</emphasis>)&#32;*&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>);
145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
146 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1a3bb4dc5cd26d5e80f713fafc071f39fa"/>    <section>
    <title>_glfwGetMonitorContentScaleNull()</title>
<indexterm><primary>_glfwGetMonitorContentScaleNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwGetMonitorContentScaleNull</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorContentScaleNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 81 of file null_monitor.c.</para>
<programlisting>83 {
84 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;1.f;
86 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yscale)
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;1.f;
88 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1a1e81eddc13231e54342eff02726e8728"/>    <section>
    <title>_glfwGetMonitorPosNull()</title>
<indexterm><primary>_glfwGetMonitorPosNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwGetMonitorPosNull</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorPosNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * xpos, int * ypos)</computeroutput></para><para>
Definition at line 73 of file null_monitor.c.</para>
<programlisting>74 {
75 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;0;
77 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;0;
79 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1ac7dda306ec2006471faa653bbefe9ba6"/>    <section>
    <title>_glfwGetMonitorWorkareaNull()</title>
<indexterm><primary>_glfwGetMonitorWorkareaNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwGetMonitorWorkareaNull</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorWorkareaNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * xpos, int * ypos, int * width, int * height)</computeroutput></para><para>
Definition at line 90 of file null_monitor.c.</para>
<programlisting>93 {
94 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;getVideoMode();
95 
96 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;0;
98 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;10;
100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.width;
102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.height&#32;-&#32;10;
104 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1ae519e7492dd33cd99a061be09c98523c"/>    <section>
    <title>_glfwGetVideoModeNull()</title>
<indexterm><primary>_glfwGetVideoModeNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwGetVideoModeNull</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetVideoModeNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * mode)</computeroutput></para><para>
Definition at line 114 of file null_monitor.c.</para>
<programlisting>115 {
116 &#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;getVideoMode();
117 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1ab10735cdc44e7874c985a89cd0ab4d7b"/>    <section>
    <title>_glfwGetVideoModesNull()</title>
<indexterm><primary>_glfwGetVideoModesNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwGetVideoModesNull</secondary></indexterm>
<para><computeroutput><link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>* _glfwGetVideoModesNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * found)</computeroutput></para><para>
Definition at line 106 of file null_monitor.c.</para>
<programlisting>107 {
108 &#32;&#32;&#32;&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(1,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>));
109 &#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;getVideoMode();
110 &#32;&#32;&#32;&#32;*found&#32;=&#32;1;
111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>;
112 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1a339d261e3d07b4c45c393dfd4452908b"/>    <section>
    <title>_glfwPollMonitorsNull()</title>
<indexterm><primary>_glfwPollMonitorsNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwPollMonitorsNull</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPollMonitorsNull (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 54 of file null_monitor.c.</para>
<programlisting>55 {
56 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;dpi&#32;=&#32;141.f;
57 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;getVideoMode();
58 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor&#32;=&#32;<link linkend="_internal_8h_1aba9010067229bd447389b85b22f15b72">_glfwAllocMonitor</link>(<emphasis role="stringliteral">&quot;Null&#32;SuperNoop&#32;0&quot;</emphasis>,
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.width&#32;*&#32;25.4f&#32;/&#32;dpi),
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.height&#32;*&#32;25.4f&#32;/&#32;dpi));
61 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a2a45c0c0677b73011b7364e2cdd9760d">_glfwInputMonitor</link>(monitor,&#32;<link linkend="_glfw3_8h_1abe11513fd1ffbee5bb9b173f06028b9e">GLFW_CONNECTED</link>,&#32;<link linkend="_internal_8h_1a9455a4c5815aa9184abd69811f939496">_GLFW_INSERT_FIRST</link>);
62 }
</programlisting>    </section><anchor xml:id="_null__monitor_8c_1af8d1f4f2409c49dd5d5e282233a36cb6"/>    <section>
    <title>_glfwSetGammaRampNull()</title>
<indexterm><primary>_glfwSetGammaRampNull</primary><secondary>null_monitor.c</secondary></indexterm>
<indexterm><primary>null_monitor.c</primary><secondary>_glfwSetGammaRampNull</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetGammaRampNull (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp)</computeroutput></para><para>
Definition at line 148 of file null_monitor.c.</para>
<programlisting>149 {
150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;null.ramp.size&#32;!=&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>)
151 &#32;&#32;&#32;&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Null:&#32;Gamma&#32;ramp&#32;size&#32;must&#32;match&#32;current&#32;ramp&#32;size&quot;</emphasis>);
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
155 &#32;&#32;&#32;&#32;}
156 
157 &#32;&#32;&#32;&#32;memcpy(monitor-&gt;null.ramp.red,&#32;&#32;&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1a2cce5d968734b685623eef913e635138">red</link>,&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">short</emphasis>)&#32;*&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>);
158 &#32;&#32;&#32;&#32;memcpy(monitor-&gt;null.ramp.green,&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1affccc6f5df47820b6562d709da3a5a3a">green</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">short</emphasis>)&#32;*&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>);
159 &#32;&#32;&#32;&#32;memcpy(monitor-&gt;null.ramp.blue,&#32;&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1acf0c836d0efe29c392fe8d1a1042744b">blue</link>,&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">short</emphasis>)&#32;*&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>);
160 }
</programlisting></section>
</section>
</section>
