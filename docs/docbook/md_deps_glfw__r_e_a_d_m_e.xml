<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md_deps_glfw__r_e_a_d_m_e">

<para><link xlink:href="https://github.com/glfw/glfw/actions"></link> <link xlink:href="https://ci.appveyor.com/project/elmindreda/glfw"></link> <link xlink:href="https://scan.coverity.com/projects/glfw-glfw"></link></para>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md68">
<title>Introduction</title>

<para>GLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan application development. It provides a simple, platform-independent API for creating windows, contexts and surfaces, reading input, handling events, etc.</para>

<para>GLFW natively supports Windows, macOS and Linux and other Unix-like systems. On Linux both X11 and Wayland are supported.</para>

<para>GLFW is licensed under the <link xlink:href="https://www.glfw.org/license.html">zlib/libpng license</link>.</para>

<para>You can <link xlink:href="https://www.glfw.org/download.html">download</link> the latest stable release as source or Windows binaries, or fetch the <computeroutput>latest</computeroutput> branch from GitHub. Each release starting with 3.0 also has a corresponding <link xlink:href="https://github.com/glfw/glfw/releases">annotated tag</link> with source and binary archives.</para>

<para>The <link xlink:href="https://www.glfw.org/docs/latest/">documentation</link> is available online and is included in all source and binary archives. See the <link xlink:href="https://www.glfw.org/docs/latest/news.html">release notes</link> for new features, caveats and deprecations in the latest release. For more details see the <link xlink:href="https://www.glfw.org/changelog.html">version history</link>.</para>

<para>The <computeroutput>master</computeroutput> branch is the stable integration branch and <emphasis>should</emphasis> always compile and run on all supported platforms, although details of newly added features may change until they have been included in a release. New features and many bug fixes live in <link xlink:href="https://github.com/glfw/glfw/branches/all">other branches</link> until they are stable enough to merge.</para>

<para>If you are new to GLFW, you may find the <link xlink:href="https://www.glfw.org/docs/latest/quick.html">tutorial</link> for GLFW 3 useful. If you have used GLFW 2 in the past, there is a <link xlink:href="https://www.glfw.org/docs/latest/moving.html">transition guide</link> for moving to the GLFW 3 API.</para>

<para>GLFW exists because of the contributions of <link linkend="__c_o_n_t_r_i_b_u_t_o_r_s_8md">many people</link> around the world, whether by reporting bugs, providing community support, adding features, reviewing or testing code, debugging, proofreading docs, suggesting features or fixing bugs.</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md69">
<title>Compiling GLFW</title>

<para>GLFW itself requires only the headers and libraries for your OS and window system. It does not need the headers for any context creation API (WGL, GLX, EGL, NSGL, OSMesa) or rendering API (OpenGL, OpenGL ES, Vulkan) to enable support for them.</para>

<para>GLFW supports compilation on Windows with Visual C++ 2010 and later, MinGW and MinGW-w64, on macOS with Clang and on Linux and other Unix-like systems with GCC and Clang. It will likely compile in other environments as well, but this is not regularly tested.</para>

<para>There are <link xlink:href="https://www.glfw.org/download.html">pre-compiled Windows binaries</link> available for all supported compilers.</para>

<para>See the <link xlink:href="https://www.glfw.org/docs/latest/compile.html">compilation guide</link> for more information about how to compile GLFW yourself.</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md70">
<title>Using GLFW</title>

<para>See the <link xlink:href="https://www.glfw.org/docs/latest/">documentation</link> for tutorials, guides and the API reference.</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md71">
<title>Contributing to GLFW</title>

<para>See the <link xlink:href="https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md">contribution guide</link> for more information.</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md72">
<title>System requirements</title>

<para>GLFW supports Windows XP and later and macOS 10.8 and later. Linux and other Unix-like systems running the X Window System are supported even without a desktop environment or modern extensions, although some features require a running window or clipboard manager. The OSMesa backend requires Mesa 6.3.</para>

<para>See the <link xlink:href="https://www.glfw.org/docs/latest/compat.html">compatibility guide</link> in the documentation for more information.</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md73">
<title>Dependencies</title>

<para>GLFW itself needs only CMake 3.1 or later and the headers and libraries for your OS and window system.</para>

<para>The examples and test programs depend on a number of tiny libraries. These are located in the <computeroutput>deps/</computeroutput> directory.</para>

<para><itemizedlist>
<listitem>
<para><link xlink:href="https://github.com/kimgr/getopt_port/">getopt_port</link> for examples with command-line options</para>
</listitem><listitem>
<para><link xlink:href="https://github.com/tinycthread/tinycthread">TinyCThread</link> for threaded examples</para>
</listitem><listitem>
<para><link xlink:href="https://github.com/Dav1dde/glad">glad2</link> for loading OpenGL and Vulkan functions</para>
</listitem><listitem>
<para><link xlink:href="https://github.com/datenwolf/linmath.h">linmath.h</link> for linear algebra in examples</para>
</listitem><listitem>
<para><link xlink:href="https://github.com/Immediate-Mode-UI/Nuklear">Nuklear</link> for test and example UI</para>
</listitem><listitem>
<para><link xlink:href="https://github.com/nothings/stb">stb_image_write</link> for writing images to disk</para>
</listitem></itemizedlist>
</para>

<para>The documentation is generated with <link xlink:href="https://doxygen.org/">Doxygen</link> if CMake can find that tool.</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md74">
<title>Reporting bugs</title>

<para>Bugs are reported to our <link xlink:href="https://github.com/glfw/glfw/issues">issue tracker</link>. Please check the <link xlink:href="https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md">contribution guide</link> for information on what to include when reporting a bug.</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md75">
<title>Changelog</title>

<para><itemizedlist>
<listitem>
<para>Added <computeroutput>GLFW_PLATFORM</computeroutput> init hint for runtime platform selection (#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_ANY_PLATFORM</computeroutput>, <computeroutput>GLFW_PLATFORM_WIN32</computeroutput>, <computeroutput>GLFW_PLATFORM_COCOA</computeroutput>, <computeroutput>GLFW_PLATFORM_WAYLAND</computeroutput>, <computeroutput>GLFW_PLATFORM_X11</computeroutput> and <computeroutput>GLFW_PLATFORM_NULL</computeroutput> symbols to specify the desired platform (#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>glfwGetPlatform</computeroutput> function to query what platform was selected (#1655,#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>glfwPlatformSupported</computeroutput> function to query if a platform is supported (#1655,#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>glfwInitAllocator</computeroutput> for setting a custom memory allocator (#544,#1628,#1947)</para>
</listitem><listitem>
<para>Added <computeroutput><link linkend="_struct_g_l_f_wallocator">GLFWallocator</link></computeroutput> struct and <computeroutput>GLFWallocatefun</computeroutput>, <computeroutput>GLFWreallocatefun</computeroutput> and <computeroutput>GLFWdeallocatefun</computeroutput> types (#544,#1628,#1947)</para>
</listitem><listitem>
<para>Added <computeroutput>glfwInitVulkanLoader</computeroutput> for using a non-default Vulkan loader (#1374,#1890)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_RESIZE_NWSE_CURSOR</computeroutput>, <computeroutput>GLFW_RESIZE_NESW_CURSOR</computeroutput>, <computeroutput>GLFW_RESIZE_ALL_CURSOR</computeroutput> and <computeroutput>GLFW_NOT_ALLOWED_CURSOR</computeroutput> cursor shapes (#427)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_RESIZE_EW_CURSOR</computeroutput> alias for <computeroutput>GLFW_HRESIZE_CURSOR</computeroutput> (#427)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_RESIZE_NS_CURSOR</computeroutput> alias for <computeroutput>GLFW_VRESIZE_CURSOR</computeroutput> (#427)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_POINTING_HAND_CURSOR</computeroutput> alias for <computeroutput>GLFW_HAND_CURSOR</computeroutput> (#427)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_MOUSE_PASSTHROUGH</computeroutput> window hint for letting mouse input pass through the window (#1236,#1568)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_PLATFORM_UNAVAILABLE</computeroutput> error for platform detection failures (#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_FEATURE_UNAVAILABLE</computeroutput> error for platform limitations (#1692)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_FEATURE_UNIMPLEMENTED</computeroutput> error for incomplete backends (#1692)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_ANGLE_PLATFORM_TYPE</computeroutput> init hint and <computeroutput>GLFW_ANGLE_PLATFORM_TYPE_*</computeroutput> values to select ANGLE backend (#1380)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_X11_XCB_VULKAN_SURFACE</computeroutput> init hint for selecting X11 Vulkan surface extension (#1793)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_BUILD_WIN32</computeroutput> CMake option for enabling Win32 support (#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_BUILD_COCOA</computeroutput> CMake option for enabling Cocoa support (#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_BUILD_X11</computeroutput> CMake option for enabling X11 support (#1958)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_LIBRARY_TYPE</computeroutput> CMake variable for overriding the library type (#279,#1307,#1497,#1574,#1928)</para>
</listitem><listitem>
<para>Added <computeroutput>GLFW_PKG_CONFIG_REQUIRES_PRIVATE</computeroutput> and <computeroutput>GLFW_PKG_CONFIG_LIBS_PRIVATE</computeroutput> CMake variables exposing pkg-config dependencies (#1307)</para>
</listitem><listitem>
<para>Made joystick subsystem initialize at first use (#1284,#1646)</para>
</listitem><listitem>
<para>Made <computeroutput>GLFW_DOUBLEBUFFER</computeroutput> a read-only window attribute</para>
</listitem><listitem>
<para>Updated the minimum required CMake version to 3.1</para>
</listitem><listitem>
<para>Updated gamepad mappings from upstream</para>
</listitem><listitem>
<para>Disabled tests and examples by default when built as a CMake subdirectory</para>
</listitem><listitem>
<para>Renamed <computeroutput>GLFW_USE_WAYLAND</computeroutput> CMake option to <computeroutput>GLFW_BUILD_WAYLAND</computeroutput> (#1958)</para>
</listitem><listitem>
<para>Removed <computeroutput>GLFW_USE_OSMESA</computeroutput> CMake option enabling the Null platform (#1958)</para>
</listitem><listitem>
<para>Removed CMake generated configuration header</para>
</listitem><listitem>
<para>Bugfix: The CMake config-file package used an absolute path and was not relocatable (#1470)</para>
</listitem><listitem>
<para>Bugfix: Video modes with a duplicate screen area were discarded (#1555,#1556)</para>
</listitem><listitem>
<para>Bugfix: Compiling with -Wextra-semi caused warnings (#1440)</para>
</listitem><listitem>
<para>Bugfix: Built-in mappings failed because some OEMs re-used VID/PID (#1583)</para>
</listitem><listitem>
<para>Bugfix: Some extension loader headers did not prevent default OpenGL header inclusion (#1695)</para>
</listitem><listitem>
<para>Bugfix: Buffers were swapped at creation on single-buffered windows (#1873)</para>
</listitem><listitem>
<para>Bugfix: Gamepad mapping updates could spam <computeroutput>GLFW_INVALID_VALUE</computeroutput> due to incompatible controllers sharing hardware ID (#1763)</para>
</listitem><listitem>
<para>Bugfix: Native access functions for context handles did not check that the API matched</para>
</listitem><listitem>
<para>[Win32] Added the <computeroutput>GLFW_WIN32_KEYBOARD_MENU</computeroutput> window hint for enabling access to the window menu</para>
</listitem><listitem>
<para>[Win32] Added a version info resource to the GLFW DLL</para>
</listitem><listitem>
<para>[Win32] Disabled framebuffer transparency on Windows 7 when DWM windows are opaque (#1512)</para>
</listitem><listitem>
<para>[Win32] Bugfix: <computeroutput>GLFW_INCLUDE_VULKAN</computeroutput> plus <computeroutput>VK_USE_PLATFORM_WIN32_KHR</computeroutput> caused symbol redefinition (#1524)</para>
</listitem><listitem>
<para>[Win32] Bugfix: The cursor position event was emitted before its cursor enter event (#1490)</para>
</listitem><listitem>
<para>[Win32] Bugfix: The window hint <computeroutput>GLFW_MAXIMIZED</computeroutput> did not move or resize the window (#1499)</para>
</listitem><listitem>
<para>[Win32] Bugfix: Disabled cursor mode interfered with some non-client actions</para>
</listitem><listitem>
<para>[Win32] Bugfix: Super key was not released after Win+V hotkey (#1622)</para>
</listitem><listitem>
<para>[Win32] Bugfix: <computeroutput>glfwGetKeyName</computeroutput> could access out of bounds and return an invalid pointer</para>
</listitem><listitem>
<para>[Win32] Bugfix: Some synthetic key events were reported as <computeroutput>GLFW_KEY_UNKNOWN</computeroutput> (#1623)</para>
</listitem><listitem>
<para>[Win32] Bugfix: Non-BMP Unicode codepoint input was reported as UTF-16</para>
</listitem><listitem>
<para>[Win32] Bugfix: Monitor functions could return invalid values after configuration change (#1761)</para>
</listitem><listitem>
<para>[Win32] Bugfix: Initialization would segfault on Windows 8 (not 8.1) (#1775)</para>
</listitem><listitem>
<para>[Win32] Bugfix: Duplicate size events were not filtered (#1610)</para>
</listitem><listitem>
<para>[Win32] Bugfix: Full screen windows were incorrectly resized by DPI changes (#1582)</para>
</listitem><listitem>
<para>[Win32] Bugfix: <computeroutput>GLFW_SCALE_TO_MONITOR</computeroutput> had no effect on systems older than Windows 10 version 1703 (#1511)</para>
</listitem><listitem>
<para>[Win32] Bugfix: <computeroutput>USE_MSVC_RUNTIME_LIBRARY_DLL</computeroutput> had no effect on CMake 3.15 or later (#1783,#1796)</para>
</listitem><listitem>
<para>[Win32] Bugfix: Compilation with LLVM for Windows failed (#1807,#1824,#1874)</para>
</listitem><listitem>
<para>[Win32] Bugfix: The foreground lock timeout was overridden, ignoring the user</para>
</listitem><listitem>
<para>[Win32] Bugfix: Content scale queries could fail silently (#1615)</para>
</listitem><listitem>
<para>[Win32] Bugfix: Content scales could have garbage values if monitor was recently disconnected (#1615)</para>
</listitem><listitem>
<para>[Cocoa] Added support for <computeroutput>VK_EXT_metal_surface</computeroutput> (#1619)</para>
</listitem><listitem>
<para>[Cocoa] Added locating the Vulkan loader at runtime in an application bundle</para>
</listitem><listitem>
<para>[Cocoa] Moved main menu creation to GLFW initialization time (#1649)</para>
</listitem><listitem>
<para>[Cocoa] Changed <computeroutput>EGLNativeWindowType</computeroutput> from <computeroutput>NSView</computeroutput> to <computeroutput>CALayer</computeroutput> (#1169)</para>
</listitem><listitem>
<para>[Cocoa] Changed F13 key to report Print Screen for cross-platform consistency (#1786)</para>
</listitem><listitem>
<para>[Cocoa] Removed dependency on the CoreVideo framework</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: <computeroutput>glfwSetWindowSize</computeroutput> used a bottom-left anchor point (#1553)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Window remained on screen after destruction until event poll (#1412)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Event processing before window creation would assert (#1543)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Undecorated windows could not be iconified on recent macOS</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Touching event queue from secondary thread before main thread would abort (#1649)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Non-BMP Unicode codepoint input was reported as UTF-16 (#1635)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Failing to retrieve the refresh rate of built-in displays could leak memory</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Objective-C files were compiled as C with CMake 3.19 (#1787)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Duplicate video modes were not filtered out (#1830)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Menu bar was not clickable on macOS 10.15+ until it lost and regained focus (#1648,#1802)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Monitor name query could segfault on macOS 11 (#1809,#1833)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: The install name of the installed dylib was relative (#1504)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: The MoltenVK layer contents scale was updated only after related events were emitted</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: Moving the cursor programmatically would freeze it for a fraction of a second (#1962)</para>
</listitem><listitem>
<para>[Cocoa] Bugfix: <computeroutput>kIOMasterPortDefault</computeroutput> was deprecated in macOS 12.0 (#1980)</para>
</listitem><listitem>
<para>[X11] Bugfix: The CMake files did not check for the XInput headers (#1480)</para>
</listitem><listitem>
<para>[X11] Bugfix: Key names were not updated when the keyboard layout changed (#1462,#1528)</para>
</listitem><listitem>
<para>[X11] Bugfix: Decorations could not be enabled after window creation (#1566)</para>
</listitem><listitem>
<para>[X11] Bugfix: Content scale fallback value could be inconsistent (#1578)</para>
</listitem><listitem>
<para>[X11] Bugfix: <computeroutput>glfwMaximizeWindow</computeroutput> had no effect on hidden windows</para>
</listitem><listitem>
<para>[X11] Bugfix: Clearing <computeroutput>GLFW_FLOATING</computeroutput> on a hidden window caused invalid read</para>
</listitem><listitem>
<para>[X11] Bugfix: Changing <computeroutput>GLFW_FLOATING</computeroutput> on a hidden window could silently fail</para>
</listitem><listitem>
<para>[X11] Bugfix: Disabled cursor mode was interrupted by indicator windows</para>
</listitem><listitem>
<para>[X11] Bugfix: Monitor physical dimensions could be reported as zero mm</para>
</listitem><listitem>
<para>[X11] Bugfix: Window position events were not emitted during resizing (#1613)</para>
</listitem><listitem>
<para>[X11] Bugfix: <computeroutput>glfwFocusWindow</computeroutput> could terminate on older WMs or without a WM</para>
</listitem><listitem>
<para>[X11] Bugfix: Querying a disconnected monitor could segfault (#1602)</para>
</listitem><listitem>
<para>[X11] Bugfix: IME input of CJK was broken for &quot;C&quot; locale (#1587,#1636)</para>
</listitem><listitem>
<para>[X11] Bugfix: Termination would segfault if the IM had been destroyed</para>
</listitem><listitem>
<para>[X11] Bugfix: Any IM started after initialization would not be detected</para>
</listitem><listitem>
<para>[X11] Bugfix: Xlib errors caused by other parts of the application could be reported as GLFW errors</para>
</listitem><listitem>
<para>[X11] Bugfix: A handle race condition could cause a <computeroutput>BadWindow</computeroutput> error (#1633)</para>
</listitem><listitem>
<para>[X11] Bugfix: XKB path used keysyms instead of physical locations for non-printable keys (#1598)</para>
</listitem><listitem>
<para>[X11] Bugfix: Function keys were mapped to <computeroutput>GLFW_KEY_UNKNOWN</computeroutput> for some layout combinations (#1598)</para>
</listitem><listitem>
<para>[X11] Bugfix: Keys pressed simultaneously with others were not always reported (#1112,#1415,#1472,#1616)</para>
</listitem><listitem>
<para>[X11] Bugfix: Some window attributes were not applied on leaving fullscreen (#1863)</para>
</listitem><listitem>
<para>[X11] Bugfix: Changing <computeroutput>GLFW_FLOATING</computeroutput> could leak memory</para>
</listitem><listitem>
<para>[X11] Bugfix: Icon pixel format conversion worked only by accident, relying on undefined behavior (#1986)</para>
</listitem><listitem>
<para>[X11] Bugfix: Dynamic loading on OpenBSD failed due to soname differences</para>
</listitem><listitem>
<para>[Wayland] Added dynamic loading of all Wayland libraries</para>
</listitem><listitem>
<para>[Wayland] Added support for key names via xkbcommon</para>
</listitem><listitem>
<para>[Wayland] Removed support for <computeroutput>wl_shell</computeroutput> (#1443)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: The <computeroutput>GLFW_HAND_CURSOR</computeroutput> shape used the wrong image (#1432)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: <computeroutput>CLOCK_MONOTONIC</computeroutput> was not correctly enabled</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Repeated keys could be reported with <computeroutput>NULL</computeroutput> window (#1704)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Retrieving partial framebuffer size would segfault</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Scrolling offsets were inverted compared to other platforms (#1463)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Client-Side Decorations were destroyed in the wrong order (#1798)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Monitors physical size could report zero (#1784,#1792)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Some keys were not repeating in Wayland (#1908)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Non-arrow cursors are offset from the hotspot (#1706,#1899)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: The <computeroutput>O_CLOEXEC</computeroutput> flag was not defined on FreeBSD</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Key repeat could lead to a race condition (#1710)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Activating a window would emit two input focus events</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Disable key repeat mechanism when window loses input focus</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Window hiding and showing did not work (#1492,#1731)</para>
</listitem><listitem>
<para>[Wayland] Bugfix: A key being repeated was not released when window lost focus</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Showing a hidden window did not emit a window refresh event</para>
</listitem><listitem>
<para>[Wayland] Bugfix: Full screen window creation did not ignore <computeroutput>GLFW_VISIBLE</computeroutput></para>
</listitem><listitem>
<para>[Wayland] Bugfix: Some keys were reported as wrong key or <computeroutput>GLFW_KEY_UNKNOWN</computeroutput></para>
</listitem><listitem>
<para>[Wayland] Bugfix: Text input did not repeat along with key repeat</para>
</listitem><listitem>
<para>[POSIX] Removed use of deprecated function <computeroutput>gettimeofday</computeroutput></para>
</listitem><listitem>
<para>[POSIX] Bugfix: <computeroutput>CLOCK_MONOTONIC</computeroutput> was not correctly tested for or enabled</para>
</listitem><listitem>
<para>[WGL] Disabled the DWM swap interval hack for Windows 8 and later (#1072)</para>
</listitem><listitem>
<para>[NSGL] Removed enforcement of forward-compatible flag for core contexts</para>
</listitem><listitem>
<para>[NSGL] Bugfix: <computeroutput>GLFW_COCOA_RETINA_FRAMEBUFFER</computeroutput> had no effect on newer macOS versions (#1442)</para>
</listitem><listitem>
<para>[NSGL] Bugfix: Workaround for swap interval on 10.14 broke on 10.12 (#1483)</para>
</listitem><listitem>
<para>[NSGL] Bugfix: Defining <computeroutput>GL_SILENCE_DEPRECATION</computeroutput> externally caused a duplicate definition warning (#1840)</para>
</listitem><listitem>
<para>[EGL] Added platform selection via the <computeroutput>EGL_EXT_platform_base</computeroutput> extension (#442)</para>
</listitem><listitem>
<para>[EGL] Added ANGLE backend selection via <computeroutput>EGL_ANGLE_platform_angle</computeroutput> extension (#1380)</para>
</listitem><listitem>
<para>[EGL] Bugfix: The <computeroutput>GLFW_DOUBLEBUFFER</computeroutput> context attribute was ignored (#1843)</para>
</listitem></itemizedlist>
</para>
</section>
<section xml:id="_md_deps_glfw__r_e_a_d_m_e_1autotoc_md76">
<title>Contact</title>

<para>On <link xlink:href="https://www.glfw.org/">glfw.org</link> you can find the latest version of GLFW, as well as news, documentation and other information about the project.</para>

<para>If you have questions related to the use of GLFW, we have a <link xlink:href="https://discourse.glfw.org/">forum</link>, and the <computeroutput>#glfw</computeroutput> IRC channel on <link xlink:href="https://libera.chat/">Libera.Chat</link>.</para>

<para>If you have a bug to report, a patch to submit or a feature you&apos;d like to request, please file it in the <link xlink:href="https://github.com/glfw/glfw/issues">issue tracker</link> on GitHub.</para>

<para>Finally, if you&apos;re interested in helping out with the development of GLFW or porting it to your favorite platform, join us on the forum, GitHub or IRC. </para>
</section>
</section>
