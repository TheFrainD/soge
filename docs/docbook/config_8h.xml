<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_config_8h" xml:lang="en-US">
<title>include/vally/config.h File Reference</title>
<indexterm><primary>include/vally/config.h</primary></indexterm>
<para>

<para>This header file contains main declarations and macros. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;stdint.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link></para>

<para>Identify OS. </para>
</listitem>
            <listitem><para>#define <link linkend="_config_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>   1</para>

<para>Boolean values. </para>
</listitem>
            <listitem><para>#define <link linkend="_config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>   ((void *)0)</para>
</listitem>
            <listitem><para>#define <link linkend="_config_8h_1a3c12c6d36ad0aa481a3436923d21f4f8">BIT_MASK</link>(n)   (1 &lt;&lt; n)</para>

<para>Creates a bit mask with certain bit toggled on. </para>
</listitem>
            <listitem><para>#define <link linkend="_config_8h_1a3acffbd305ee72dcd4593c0d8af64a4f">MIN</link>(a,  b)   (((a)&lt;(b))?(a):(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_config_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f">MAX</link>(a,  b)   (((a)&gt;(b))?(a):(b))</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef uint8_t <link linkend="_config_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link></para>

<para>Fixed-size unsigned types. </para>
</listitem>
            <listitem><para>typedef uint16_t <link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link></para>
</listitem>
            <listitem><para>typedef uint32_t <link linkend="_config_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link></para>
</listitem>
            <listitem><para>typedef uint64_t <link linkend="_config_8h_1a3f7e2bcbb0b4c338f3c4f6c937cd4234">u64</link></para>
</listitem>
            <listitem><para>typedef int8_t <link linkend="_config_8h_1ae3702327b5f47e83b431e22b33da7b58">i8</link></para>

<para>Fixed-size integer types. </para>
</listitem>
            <listitem><para>typedef int16_t <link linkend="_config_8h_1ad309dbcaeea13aa602d686964156ea0b">i16</link></para>
</listitem>
            <listitem><para>typedef int32_t <link linkend="_config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link></para>
</listitem>
            <listitem><para>typedef int64_t <link linkend="_config_8h_1a85cb35fbe5bf2961d7ad5f26814a91a2">i64</link></para>
</listitem>
            <listitem><para>typedef float <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link></para>

<para>Fixed-size decimal types. </para>
</listitem>
            <listitem><para>typedef double <link linkend="_config_8h_1a94dab5770726ccbef8c7d026cfbdf8e5">f64</link></para>
</listitem>
            <listitem><para>typedef int32_t <link linkend="_config_8h_1a9d1a1d99b6972446ae039de3d9599b96">b32</link></para>

<para>Custom booleans. </para>
</listitem>
            <listitem><para>typedef uint8_t <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This header file contains main declarations and macros. </para>

<para><formalpara><title>Author</title>

<para>Dmytro Zykov </para>
</formalpara>
<formalpara><title>Date</title>

<para>12 Jan 2022 </para>
</formalpara>
</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_config_8h_1a3c12c6d36ad0aa481a3436923d21f4f8"/><section>
    <title>BIT_MASK</title>
<indexterm><primary>BIT_MASK</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>BIT_MASK</secondary></indexterm>
<para><computeroutput>#define BIT_MASK( n)   (1 &lt;&lt; n)</computeroutput></para><para>

<para>Creates a bit mask with certain bit toggled on. </para>
</para>
</section>
<anchor xml:id="_config_8h_1aa93f0eb578d23995850d61f7d61c55c1"/><section>
    <title>FALSE</title>
<indexterm><primary>FALSE</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>FALSE</secondary></indexterm>
<para><computeroutput>#define FALSE   0</computeroutput></para></section>
<anchor xml:id="_config_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f"/><section>
    <title>MAX</title>
<indexterm><primary>MAX</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>MAX</secondary></indexterm>
<para><computeroutput>#define MAX( a,  b)   (((a)&gt;(b))?(a):(b))</computeroutput></para></section>
<anchor xml:id="_config_8h_1a3acffbd305ee72dcd4593c0d8af64a4f"/><section>
    <title>MIN</title>
<indexterm><primary>MIN</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>MIN</secondary></indexterm>
<para><computeroutput>#define MIN( a,  b)   (((a)&lt;(b))?(a):(b))</computeroutput></para></section>
<anchor xml:id="_config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4"/><section>
    <title>NULL</title>
<indexterm><primary>NULL</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>NULL</secondary></indexterm>
<para><computeroutput>#define NULL   ((void *)0)</computeroutput></para></section>
<anchor xml:id="_config_8h_1aa8cecfc5c5c054d2875c03e77b7be15d"/><section>
    <title>TRUE</title>
<indexterm><primary>TRUE</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>TRUE</secondary></indexterm>
<para><computeroutput>#define TRUE   1</computeroutput></para><para>

<para>Boolean values. </para>
</para>
</section>
<anchor xml:id="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f"/><section>
    <title>VALLY_API</title>
<indexterm><primary>VALLY_API</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>VALLY_API</secondary></indexterm>
<para><computeroutput>#define VALLY_API</computeroutput></para><para>

<para>Identify OS. </para>
</para>

<para>Define import and export macros. </para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_config_8h_1a9d1a1d99b6972446ae039de3d9599b96"/><section>
    <title>b32</title>
<indexterm><primary>b32</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>b32</secondary></indexterm>
<para><computeroutput>typedef int32_t <link linkend="_config_8h_1a9d1a1d99b6972446ae039de3d9599b96">b32</link></computeroutput></para><para>

<para>Custom booleans. </para>
</para>
</section>
<anchor xml:id="_config_8h_1a4d99477750540df819f904cf665cbfb4"/><section>
    <title>b8</title>
<indexterm><primary>b8</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>b8</secondary></indexterm>
<para><computeroutput>typedef uint8_t <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1a5f6906312a689f27d70e9d086649d3fd"/><section>
    <title>f32</title>
<indexterm><primary>f32</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>f32</secondary></indexterm>
<para><computeroutput>typedef float <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link></computeroutput></para><para>

<para>Fixed-size decimal types. </para>
</para>
</section>
<anchor xml:id="_config_8h_1a94dab5770726ccbef8c7d026cfbdf8e5"/><section>
    <title>f64</title>
<indexterm><primary>f64</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>f64</secondary></indexterm>
<para><computeroutput>typedef double <link linkend="_config_8h_1a94dab5770726ccbef8c7d026cfbdf8e5">f64</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1ad309dbcaeea13aa602d686964156ea0b"/><section>
    <title>i16</title>
<indexterm><primary>i16</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>i16</secondary></indexterm>
<para><computeroutput>typedef int16_t <link linkend="_config_8h_1ad309dbcaeea13aa602d686964156ea0b">i16</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec"/><section>
    <title>i32</title>
<indexterm><primary>i32</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>i32</secondary></indexterm>
<para><computeroutput>typedef int32_t <link linkend="_config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1a85cb35fbe5bf2961d7ad5f26814a91a2"/><section>
    <title>i64</title>
<indexterm><primary>i64</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>i64</secondary></indexterm>
<para><computeroutput>typedef int64_t <link linkend="_config_8h_1a85cb35fbe5bf2961d7ad5f26814a91a2">i64</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1ae3702327b5f47e83b431e22b33da7b58"/><section>
    <title>i8</title>
<indexterm><primary>i8</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>i8</secondary></indexterm>
<para><computeroutput>typedef int8_t <link linkend="_config_8h_1ae3702327b5f47e83b431e22b33da7b58">i8</link></computeroutput></para><para>

<para>Fixed-size integer types. </para>
</para>
</section>
<anchor xml:id="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa"/><section>
    <title>u16</title>
<indexterm><primary>u16</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>u16</secondary></indexterm>
<para><computeroutput>typedef uint16_t <link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1afaa62991928fb9fb18ff0db62a040aba"/><section>
    <title>u32</title>
<indexterm><primary>u32</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>u32</secondary></indexterm>
<para><computeroutput>typedef uint32_t <link linkend="_config_8h_1afaa62991928fb9fb18ff0db62a040aba">u32</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1a3f7e2bcbb0b4c338f3c4f6c937cd4234"/><section>
    <title>u64</title>
<indexterm><primary>u64</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>u64</secondary></indexterm>
<para><computeroutput>typedef uint64_t <link linkend="_config_8h_1a3f7e2bcbb0b4c338f3c4f6c937cd4234">u64</link></computeroutput></para></section>
<anchor xml:id="_config_8h_1a92c50087ca0e64fa93fc59402c55f8ca"/><section>
    <title>u8</title>
<indexterm><primary>u8</primary><secondary>config.h</secondary></indexterm>
<indexterm><primary>config.h</primary><secondary>u8</secondary></indexterm>
<para><computeroutput>typedef uint8_t <link linkend="_config_8h_1a92c50087ca0e64fa93fc59402c55f8ca">u8</link></computeroutput></para><para>

<para>Fixed-size unsigned types. </para>
</para>
</section>
</section>
</section>
