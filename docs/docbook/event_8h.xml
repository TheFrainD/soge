<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_event_8h" xml:lang="en-US">
<title>include/vally/core/event.h File Reference</title>
<indexterm><primary>include/vally/core/event.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;vally/config.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structevent__context">event_context</link></para>

<para>Context send alongside the event. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link>(* <link linkend="_event_8h_1a0510ba71fcdd70efda521389ea14e7a5">on_event_fun</link>) (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void *sender, void *listener, <link linkend="_structevent__context">event_context</link> context)</para>

<para>Pointer to event function. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7">engine_event_code</link> { 
<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a50a321096bf6817403d8286b174722d3">EVENT_CODE_APP_QUIT</link>
, <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7aaf5d469683c442daf841f01c831344c1">EVENT_CODE_KEY_PRESSED</link>
, <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7aa723c6cbe37568fcc035a890e380fb4f">EVENT_CODE_KEY_RELEASED</link>
, <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a7724036287fc2da8d76a41624b88a44b">EVENT_CODE_MOUSE_BUTTON_PRESSED</link>
, 
<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7acf515989f2f7095f112c717f4aec41d8">EVENT_CODE_MOUSE_BUTTON_RELEASED</link>
, <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a681a38e19124eb42a25ab1551fa2a878">EVENT_CODE_MOUSE_MOVED</link>
, <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a923e40874ed01a63929ab78f31f1637d">EVENT_CODE_MOUSE_WHEEL</link>
, <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a6122b167e91f9b3e96223b9458a02ad2">EVENT_CODE_WINDOW_RESIZED</link>
, 
<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a3599e37cddac3749062b20372bedb8b0">EVENT_CODE_CAMERA_MOVED</link>
, <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a6f8c37abc1b165817660320b56d197cb">MAX_EVENT_CODE</link> = 255
 }</para>

<para>Event type codes. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> <link linkend="_event_8h_1a5b0f78273328aee6d4f9ce3949a6b727">event_init</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_event_8h_1af5c0fd0bca4f543c61042cf947de7ef9">event_terminate</link> ()</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> <link linkend="_event_8h_1a8ae40689c362bb1a668f2d2ae753959b">event_subscribe</link> (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void *listener, <link linkend="_event_8h_1a0510ba71fcdd70efda521389ea14e7a5">on_event_fun</link> callback)</para>

<para>Subscribes for certain event types. </para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> <link linkend="_event_8h_1a7778b31e42b77a51ec8f669fd19f9b60">event_unsubscribe</link> (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void *listener, <link linkend="_event_8h_1a0510ba71fcdd70efda521389ea14e7a5">on_event_fun</link> callback)</para>

<para>Unsubscribes from certain event types. </para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> <link linkend="_event_8h_1a16616312a9088582d01e4267bd7d8fdd">event_publish</link> (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void *sender, <link linkend="_structevent__context">event_context</link> context)</para>

<para>Publishes event of certain type. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_event_8h_1a0510ba71fcdd70efda521389ea14e7a5"/><section>
    <title>on_event_fun</title>
<indexterm><primary>on_event_fun</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>on_event_fun</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link>(* on_event_fun) (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void *sender, void *listener, <link linkend="_structevent__context">event_context</link> context)</computeroutput></para><para>

<para>Pointer to event function. </para>
</para>
<para>
Definition at line <link linkend="_event_8h_source_1l00049">49</link> of file <link linkend="_event_8h_source">event.h</link>.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7"/><section>
    <title>engine_event_code</title>
<indexterm><primary>engine_event_code</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>engine_event_code</secondary></indexterm>
<para><computeroutput>enum <link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7">engine_event_code</link></computeroutput></para><para>

<para>Event type codes. </para>
</para>

<para>User defined event codes must have code larger then 255 </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>EVENT_CODE_APP_QUIT</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_APP_QUIT</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a50a321096bf6817403d8286b174722d3"/>EVENT_CODE_APP_QUIT</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_KEY_PRESSED</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_KEY_PRESSED</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7aaf5d469683c442daf841f01c831344c1"/>EVENT_CODE_KEY_PRESSED</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_KEY_RELEASED</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_KEY_RELEASED</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7aa723c6cbe37568fcc035a890e380fb4f"/>EVENT_CODE_KEY_RELEASED</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_MOUSE_BUTTON_PRESSED</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_MOUSE_BUTTON_PRESSED</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a7724036287fc2da8d76a41624b88a44b"/>EVENT_CODE_MOUSE_BUTTON_PRESSED</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_MOUSE_BUTTON_RELEASED</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_MOUSE_BUTTON_RELEASED</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7acf515989f2f7095f112c717f4aec41d8"/>EVENT_CODE_MOUSE_BUTTON_RELEASED</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_MOUSE_MOVED</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_MOUSE_MOVED</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a681a38e19124eb42a25ab1551fa2a878"/>EVENT_CODE_MOUSE_MOVED</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_MOUSE_WHEEL</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_MOUSE_WHEEL</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a923e40874ed01a63929ab78f31f1637d"/>EVENT_CODE_MOUSE_WHEEL</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_WINDOW_RESIZED</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_WINDOW_RESIZED</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a6122b167e91f9b3e96223b9458a02ad2"/>EVENT_CODE_WINDOW_RESIZED</entry><entry></entry></row><row><entry><indexterm><primary>EVENT_CODE_CAMERA_MOVED</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>EVENT_CODE_CAMERA_MOVED</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a3599e37cddac3749062b20372bedb8b0"/>EVENT_CODE_CAMERA_MOVED</entry><entry></entry></row><row><entry><indexterm><primary>MAX_EVENT_CODE</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>MAX_EVENT_CODE</secondary></indexterm>
<anchor xml:id="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a6f8c37abc1b165817660320b56d197cb"/>MAX_EVENT_CODE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="_event_8h_source_1l00100">100</link> of file <link linkend="_event_8h_source">event.h</link>.</para>
<programlisting linenumbering="unnumbered">00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00101 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a50a321096bf6817403d8286b174722d3">EVENT_CODE_APP_QUIT</link>,
00102 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7aaf5d469683c442daf841f01c831344c1">EVENT_CODE_KEY_PRESSED</link>,
00103 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7aa723c6cbe37568fcc035a890e380fb4f">EVENT_CODE_KEY_RELEASED</link>,
00104 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a7724036287fc2da8d76a41624b88a44b">EVENT_CODE_MOUSE_BUTTON_PRESSED</link>,
00105 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7acf515989f2f7095f112c717f4aec41d8">EVENT_CODE_MOUSE_BUTTON_RELEASED</link>,
00106 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a681a38e19124eb42a25ab1551fa2a878">EVENT_CODE_MOUSE_MOVED</link>,
00107 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a923e40874ed01a63929ab78f31f1637d">EVENT_CODE_MOUSE_WHEEL</link>,
00108 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a6122b167e91f9b3e96223b9458a02ad2">EVENT_CODE_WINDOW_RESIZED</link>,
00109 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a3599e37cddac3749062b20372bedb8b0">EVENT_CODE_CAMERA_MOVED</link>,
00110 
00111 &#32;&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7a6f8c37abc1b165817660320b56d197cb">MAX_EVENT_CODE</link>&#32;=&#32;255
00112 }&#32;<link linkend="_event_8h_1ab1a5ea1b9d3d15f083a6d01c3ab3c2b7">engine_event_code</link>;
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_event_8h_1a5b0f78273328aee6d4f9ce3949a6b727"/><section>
    <title>event_init()</title>
<indexterm><primary>event_init</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>event_init</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> event_init ( )</computeroutput></para></section>
<anchor xml:id="_event_8h_1a16616312a9088582d01e4267bd7d8fdd"/><section>
    <title>event_publish()</title>
<indexterm><primary>event_publish</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>event_publish</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> event_publish (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void * sender, <link linkend="_structevent__context">event_context</link> context)</computeroutput></para><para>

<para>Publishes event of certain type. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>code</entry><entry>
<para>Event code </para>
</entry>
                            </row>
                            <row>
<entry>sender</entry><entry>
<para>Object that published the event </para>
</entry>
                            </row>
                            <row>
<entry>context</entry><entry>
<para>Context information sent alongside the event</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>TRUE - if success, FALSE - in case of fatal errors </para>
</formalpara>
</para>
</section>
<anchor xml:id="_event_8h_1a8ae40689c362bb1a668f2d2ae753959b"/><section>
    <title>event_subscribe()</title>
<indexterm><primary>event_subscribe</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>event_subscribe</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> event_subscribe (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void * listener, <link linkend="_event_8h_1a0510ba71fcdd70efda521389ea14e7a5">on_event_fun</link> callback)</computeroutput></para><para>

<para>Subscribes for certain event types. </para>
</para>

<para>Executes the callback function when event is published</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>code</entry><entry>
<para>Event code </para>
</entry>
                            </row>
                            <row>
<entry>listener</entry><entry>
<para>Object that subscribes for an event </para>
</entry>
                            </row>
                            <row>
<entry>callback</entry><entry>
<para>Event callback function</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>TRUE - if success, FALSE - in case of fatal errors </para>
</formalpara>
</para>
</section>
<anchor xml:id="_event_8h_1af5c0fd0bca4f543c61042cf947de7ef9"/><section>
    <title>event_terminate()</title>
<indexterm><primary>event_terminate</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>event_terminate</secondary></indexterm>
<para><computeroutput>void event_terminate ( )</computeroutput></para></section>
<anchor xml:id="_event_8h_1a7778b31e42b77a51ec8f669fd19f9b60"/><section>
    <title>event_unsubscribe()</title>
<indexterm><primary>event_unsubscribe</primary><secondary>event.h</secondary></indexterm>
<indexterm><primary>event.h</primary><secondary>event_unsubscribe</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a4d99477750540df819f904cf665cbfb4">b8</link> event_unsubscribe (<link linkend="_config_8h_1ace9d960e74685e2cd84b36132dbbf8aa">u16</link> code, void * listener, <link linkend="_event_8h_1a0510ba71fcdd70efda521389ea14e7a5">on_event_fun</link> callback)</computeroutput></para><para>

<para>Unsubscribes from certain event types. </para>
</para>

<para>Stops executing the callback function when event is published</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>code</entry><entry>
<para>Event code </para>
</entry>
                            </row>
                            <row>
<entry>listener</entry><entry>
<para>Object that unsubscribes from an event </para>
</entry>
                            </row>
                            <row>
<entry>callback</entry><entry>
<para>Event callback function</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>TRUE - if success, FALSE - in case of fatal errors </para>
</formalpara>
</para>
</section>
</section>
</section>
