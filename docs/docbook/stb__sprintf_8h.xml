<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stb__sprintf_8h">
<title>deps/stb/stb_sprintf.h File Reference</title>
<indexterm><primary>deps/stb/stb_sprintf.h</primary></indexterm>
<programlisting>#include &lt;stdarg.h&gt;
#include &lt;stddef.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_stb__sprintf_8h_1a67d262a089dc14ede948d3f9124de268">STBSP__ASAN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link>   extern</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__sprintf_8h_1a0385a47e69ebb16d03176b698bb6e10a">STBSP__PUBLICDEF</link>   <link linkend="_stb__sprintf_8h_1a67d262a089dc14ede948d3f9124de268">STBSP__ASAN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_stb__sprintf_8h_1a9932c1dd5223b0958a41368f16f2a52f">STBSP__ATTRIBUTE_FORMAT</link>(fmt,  va)</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__sprintf_8h_1a5a37874c179b98adde04b026931440b9">STBSP__NOTUSED</link>(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)   (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)sizeof(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__sprintf_8h_1aedf994065406c4849a79e2ae349179f5">STB_SPRINTF_MIN</link>   512</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>(<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>)   stbsp_##<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef char * <link linkend="_stb__sprintf_8h_1ada44bf77a4307f367a78f6b517a80452">STBSP_SPRINTFCB</link>(const char *<link linkend="_glad_8h_1aa3b73d9ca9f2e2396cbeae1ce6ce14be">buf</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a362178e1c906fe1edaf2ba6bc43290b0">vsprintf</link> (char *<link linkend="_glad_8h_1aa3b73d9ca9f2e2396cbeae1ce6ce14be">buf</link>, char const *fmt, va_list va)</para>
</listitem>
            <listitem><para><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1ab9cbb540c75c36dac2c77e5cc744ab54">vsnprintf</link> (char *<link linkend="_glad_8h_1aa3b73d9ca9f2e2396cbeae1ce6ce14be">buf</link>, int <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, char const *fmt, va_list va)</para>
</listitem>
            <listitem><para><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a09bff9952daf9c8111000547090740c3">sprintf</link> (char *<link linkend="_glad_8h_1aa3b73d9ca9f2e2396cbeae1ce6ce14be">buf</link>, char const *fmt,...) <link linkend="_stb__sprintf_8h_1a9932c1dd5223b0958a41368f16f2a52f">STBSP__ATTRIBUTE_FORMAT</link>(2</para>
</listitem>
            <listitem><para><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1ab044895b83ae388929b467d7e56de92b">snprintf</link> (char *<link linkend="_glad_8h_1aa3b73d9ca9f2e2396cbeae1ce6ce14be">buf</link>, int <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, char const *fmt,...) <link linkend="_stb__sprintf_8h_1a9932c1dd5223b0958a41368f16f2a52f">STBSP__ATTRIBUTE_FORMAT</link>(3</para>
</listitem>
            <listitem><para><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a6f031f2720adf0ee0e6b18d04146f8d7">vsprintfcb</link> (<link linkend="_stb__sprintf_8h_1ada44bf77a4307f367a78f6b517a80452">STBSP_SPRINTFCB</link> *callback, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user, char *<link linkend="_glad_8h_1aa3b73d9ca9f2e2396cbeae1ce6ce14be">buf</link>, char const *fmt, va_list va)</para>
</listitem>
            <listitem><para><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a4b332fb0114489c6c2d4e1595ea67d10">set_separators</link> (char comma, char period)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73"/>    <section>
    <title>STB_SPRINTF_DECORATE</title>
<indexterm><primary>STB_SPRINTF_DECORATE</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STB_SPRINTF_DECORATE</secondary></indexterm>
<para><computeroutput>#define STB_SPRINTF_DECORATE( <link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>)   stbsp_##<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link></computeroutput></para><para>
Definition at line 205 of file stb_sprintf.h.</para>
    </section><anchor xml:id="_stb__sprintf_8h_1aedf994065406c4849a79e2ae349179f5"/>    <section>
    <title>STB_SPRINTF_MIN</title>
<indexterm><primary>STB_SPRINTF_MIN</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STB_SPRINTF_MIN</secondary></indexterm>
<para><computeroutput>#define STB_SPRINTF_MIN   512</computeroutput></para><para>
Definition at line 200 of file stb_sprintf.h.</para>
    </section><anchor xml:id="_stb__sprintf_8h_1a67d262a089dc14ede948d3f9124de268"/>    <section>
    <title>STBSP__ASAN</title>
<indexterm><primary>STBSP__ASAN</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STBSP__ASAN</secondary></indexterm>
<para><computeroutput>#define STBSP__ASAN</computeroutput></para><para>
Definition at line 164 of file stb_sprintf.h.</para>
    </section><anchor xml:id="_stb__sprintf_8h_1a9932c1dd5223b0958a41368f16f2a52f"/>    <section>
    <title>STBSP__ATTRIBUTE_FORMAT</title>
<indexterm><primary>STBSP__ATTRIBUTE_FORMAT</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STBSP__ATTRIBUTE_FORMAT</secondary></indexterm>
<para><computeroutput>#define STBSP__ATTRIBUTE_FORMAT( fmt,  va)</computeroutput></para><para>
Definition at line 187 of file stb_sprintf.h.</para>
    </section><anchor xml:id="_stb__sprintf_8h_1a5a37874c179b98adde04b026931440b9"/>    <section>
    <title>STBSP__NOTUSED</title>
<indexterm><primary>STBSP__NOTUSED</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STBSP__NOTUSED</secondary></indexterm>
<para><computeroutput>#define STBSP__NOTUSED( <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)   (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)sizeof(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</computeroutput></para><para>
Definition at line 193 of file stb_sprintf.h.</para>
    </section><anchor xml:id="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e"/>    <section>
    <title>STBSP__PUBLICDEC</title>
<indexterm><primary>STBSP__PUBLICDEC</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STBSP__PUBLICDEC</secondary></indexterm>
<para><computeroutput>#define STBSP__PUBLICDEC   extern</computeroutput></para><para>
Definition at line 175 of file stb_sprintf.h.</para>
    </section><anchor xml:id="_stb__sprintf_8h_1a0385a47e69ebb16d03176b698bb6e10a"/>    <section>
    <title>STBSP__PUBLICDEF</title>
<indexterm><primary>STBSP__PUBLICDEF</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STBSP__PUBLICDEF</secondary></indexterm>
<para><computeroutput>#define STBSP__PUBLICDEF   <link linkend="_stb__sprintf_8h_1a67d262a089dc14ede948d3f9124de268">STBSP__ASAN</link></computeroutput></para><para>
Definition at line 176 of file stb_sprintf.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_stb__sprintf_8h_1ada44bf77a4307f367a78f6b517a80452"/>    <section>
    <title>STBSP_SPRINTFCB</title>
<indexterm><primary>STBSP_SPRINTFCB</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>STBSP_SPRINTFCB</secondary></indexterm>
<para><computeroutput>typedef char* STBSP_SPRINTFCB(const char *<link linkend="_glad_8h_1aa3b73d9ca9f2e2396cbeae1ce6ce14be">buf</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>)</computeroutput></para><para>
Definition at line 202 of file stb_sprintf.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_stb__sprintf_8h_1a4b332fb0114489c6c2d4e1595ea67d10"/>    <section>
    <title>set_separators()</title>
<indexterm><primary>set_separators</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>set_separators</secondary></indexterm>
<para><computeroutput><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() set_separators (char comma, char period)</computeroutput></para>    </section><anchor xml:id="_stb__sprintf_8h_1ab044895b83ae388929b467d7e56de92b"/>    <section>
    <title>snprintf()</title>
<indexterm><primary>snprintf</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>snprintf</secondary></indexterm>
<para><computeroutput><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() snprintf (char * buf, int count, char const * fmt,  ...)</computeroutput></para>    </section><anchor xml:id="_stb__sprintf_8h_1a09bff9952daf9c8111000547090740c3"/>    <section>
    <title>sprintf()</title>
<indexterm><primary>sprintf</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>sprintf</secondary></indexterm>
<para><computeroutput><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() sprintf (char * buf, char const * fmt,  ...)</computeroutput></para>    </section><anchor xml:id="_stb__sprintf_8h_1ab9cbb540c75c36dac2c77e5cc744ab54"/>    <section>
    <title>vsnprintf()</title>
<indexterm><primary>vsnprintf</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>vsnprintf</secondary></indexterm>
<para><computeroutput><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() vsnprintf (char * buf, int count, char const * fmt, va_list va)</computeroutput></para>    </section><anchor xml:id="_stb__sprintf_8h_1a362178e1c906fe1edaf2ba6bc43290b0"/>    <section>
    <title>vsprintf()</title>
<indexterm><primary>vsprintf</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>vsprintf</secondary></indexterm>
<para><computeroutput><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() vsprintf (char * buf, char const * fmt, va_list va)</computeroutput></para>    </section><anchor xml:id="_stb__sprintf_8h_1a6f031f2720adf0ee0e6b18d04146f8d7"/>    <section>
    <title>vsprintfcb()</title>
<indexterm><primary>vsprintfcb</primary><secondary>stb_sprintf.h</secondary></indexterm>
<indexterm><primary>stb_sprintf.h</primary><secondary>vsprintfcb</secondary></indexterm>
<para><computeroutput><link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() <link linkend="_stb__sprintf_8h_1a5fcae98d41a743f93ac74ca23ab5151e">STBSP__PUBLICDEC</link> int <link linkend="_stb__sprintf_8h_1a18552b475bbdaf624249ce1bc678ec73">STB_SPRINTF_DECORATE</link>() vsprintfcb (<link linkend="_stb__sprintf_8h_1ada44bf77a4307f367a78f6b517a80452">STBSP_SPRINTFCB</link> * callback, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * user, char * buf, char const * fmt, va_list va)</computeroutput></para></section>
</section>
</section>
