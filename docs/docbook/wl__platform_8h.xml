<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_wl__platform_8h">
<title>deps/glfw/src/wl_platform.h File Reference</title>
<indexterm><primary>deps/glfw/src/wl_platform.h</primary></indexterm>
<programlisting>#include &lt;wayland-client-core.h&gt;
#include &lt;xkbcommon/xkbcommon.h&gt;
#include &lt;xkbcommon/xkbcommon-compose.h&gt;
#include &quot;xkb_unicode.h&quot;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structwl__cursor__image">wl_cursor_image</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structwl__cursor">wl_cursor</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wdecoration_wayland">_GLFWdecorationWayland</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a57bfe216b1e65a2208bc0f44ed3c4739">wl_display_flush</link>   _glfw.wl.client.display_flush</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aa26480744685a334552f52ddfb11f992">wl_display_cancel_read</link>   _glfw.wl.client.display_cancel_read</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a9f51774662e088d12fc6a4a53541f847">wl_display_dispatch_pending</link>   _glfw.wl.client.display_dispatch_pending</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a5b8db01e5b40c192781a5de237fbefd0">wl_display_read_events</link>   _glfw.wl.client.display_read_events</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a80f20a11b3b544c9c07cf3cc5006ba04">wl_display_disconnect</link>   _glfw.wl.client.display_disconnect</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1afbff16ff914a6de7fb8b0947aa872df3">wl_display_roundtrip</link>   _glfw.wl.client.display_roundtrip</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a85c6c5b82fcf4f34d2a1fc3ea0f1d5da">wl_display_get_fd</link>   _glfw.wl.client.display_get_fd</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a46ebb85bba511c67244cb855b0d8de24">wl_display_prepare_read</link>   _glfw.wl.client.display_prepare_read</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1abc30082be8e3c0ba4c077e1ee40b8b91">wl_proxy_marshal</link>   _glfw.wl.client.proxy_marshal</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ad7b520266c881738bf5db2f185ce5b10">wl_proxy_add_listener</link>   _glfw.wl.client.proxy_add_listener</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a66b0bb32c5f9dbfaea2dcc3838358ef9">wl_proxy_destroy</link>   _glfw.wl.client.proxy_destroy</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a40e20e0fe8d6750b759ac31b11ed151d">wl_proxy_marshal_constructor</link>   _glfw.wl.client.proxy_marshal_constructor</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a2a373f4b1e760fd1e69dbccf1fb2f374">wl_proxy_marshal_constructor_versioned</link>   _glfw.wl.client.proxy_marshal_constructor_versioned</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aca006ec450760271e7b64287d015643f">wl_proxy_get_user_data</link>   _glfw.wl.client.proxy_get_user_data</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1af7d07a4c24c80f187a36116a9ea51ae8">wl_proxy_set_user_data</link>   _glfw.wl.client.proxy_set_user_data</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a59c699da6e614d8e4befbcf96ceff306">wl_proxy_get_version</link>   _glfw.wl.client.proxy_get_version</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a2d0dfd02c90b16be38f55f8e5f0655fb">wl_proxy_marshal_flags</link>   _glfw.wl.client.proxy_marshal_flags</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a4e1dbcff552c9bfa583dce1347694832">wl_display_interface</link>   _glfw_wl_display_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1af9dd9a0b0c76b4b8f1d7538d024c33f5">wl_subcompositor_interface</link>   _glfw_wl_subcompositor_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a2032e4b6ed0a9a19b3ef8f0aeee4b967">wl_compositor_interface</link>   _glfw_wl_compositor_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a172f2542a538c16cd0cd62631b832c69">wl_shm_interface</link>   _glfw_wl_shm_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aa80dd4128a4cda72151feea15a1456bd">wl_data_device_manager_interface</link>   _glfw_wl_data_device_manager_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a9417936fea6d4c8190c8fb852c898974">wl_shell_interface</link>   _glfw_wl_shell_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1abcda565d0747212ab82edd2c93012d79">wl_buffer_interface</link>   _glfw_wl_buffer_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aa7564eec6d71346ff2d06cf427ae3a69">wl_callback_interface</link>   _glfw_wl_callback_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a7b386307e2b3c7a202594ca896d9b26f">wl_data_device_interface</link>   _glfw_wl_data_device_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1af381f98e5e2e6a1bb37be32d37037660">wl_data_offer_interface</link>   _glfw_wl_data_offer_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a5795e176509a4f2355f4cc7586b6715d">wl_data_source_interface</link>   _glfw_wl_data_source_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aebb645348b1e2e8d797d54f7d95863d1">wl_keyboard_interface</link>   _glfw_wl_keyboard_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a872ee2ea6c856e5d514c00c4f7769c59">wl_output_interface</link>   _glfw_wl_output_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a1dba077a73a16db3bc962810c50fcb28">wl_pointer_interface</link>   _glfw_wl_pointer_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a4fed24503dda7d8ddd0ef735ce897191">wl_region_interface</link>   _glfw_wl_region_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a3c0a77601837099de9410a27ad7ac488">wl_registry_interface</link>   _glfw_wl_registry_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a361a3827769df7e6a33e53f77aa5de60">wl_seat_interface</link>   _glfw_wl_seat_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a52d26fadf40d997c77904d488afe93b9">wl_shell_surface_interface</link>   _glfw_wl_shell_surface_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a87d61909e65f177c8e9b0ee0a55a1fac">wl_shm_pool_interface</link>   _glfw_wl_shm_pool_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a2ddca4a58c79ed732045f34e1fd6b9ec">wl_subsurface_interface</link>   _glfw_wl_subsurface_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aeebc2aa87c2a2910f775e29547218f6e">wl_surface_interface</link>   _glfw_wl_surface_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a6ed55164ca96e43ab6f6ac8e75d1e801">wl_touch_interface</link>   _glfw_wl_touch_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a2352d196e1f24b885f4819961b6bc866">zwp_idle_inhibitor_v1_interface</link>   _glfw_zwp_idle_inhibitor_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1af08a1d0d2c65bbd769a23c34c4a671bc">zwp_idle_inhibit_manager_v1_interface</link>   _glfw_zwp_idle_inhibit_manager_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a6d27a0a23d64e4b5fe1461e366d59b15">zwp_confined_pointer_v1_interface</link>   _glfw_zwp_confined_pointer_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a0219ef98d4248f3078a94bc437c256e1">zwp_locked_pointer_v1_interface</link>   _glfw_zwp_locked_pointer_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a70b96788c2904d81e7068ef89b44552c">zwp_pointer_constraints_v1_interface</link>   _glfw_zwp_pointer_constraints_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aba54c0f0f1a973a60308a4ff2fb9b79b">zwp_relative_pointer_v1_interface</link>   _glfw_zwp_relative_pointer_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aa4ab0bbd063e0e0b435e9ee7b6dfc8fb">zwp_relative_pointer_manager_v1_interface</link>   _glfw_zwp_relative_pointer_manager_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a3e90b1796cda33736f5745ed30350832">wp_viewport_interface</link>   _glfw_wp_viewport_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a76bf27a44af9c875b08307bf6315f984">wp_viewporter_interface</link>   _glfw_wp_viewporter_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aaeb7d79886c0556c5fee80e93a7d9e22">xdg_toplevel_interface</link>   _glfw_xdg_toplevel_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a7ddac5728f1452b0f7207a1c864739d4">zxdg_toplevel_decoration_v1_interface</link>   _glfw_zxdg_toplevel_decoration_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a2ce00e098f204e995923b17d483c9c44">zxdg_decoration_manager_v1_interface</link>   _glfw_zxdg_decoration_manager_v1_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ae848b04a3a9bf248a1c85eb3a771307a">xdg_popup_interface</link>   _glfw_xdg_popup_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ab9ad04f089f14176863b6728b05cbe96">xdg_positioner_interface</link>   _glfw_xdg_positioner_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a27f76e835be9e685b1a6f118798d0a27">xdg_surface_interface</link>   _glfw_xdg_surface_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aaeb7d79886c0556c5fee80e93a7d9e22">xdg_toplevel_interface</link>   _glfw_xdg_toplevel_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aeaa64aeaf7e91cc353ecade66956c97c">xdg_wm_base_interface</link>   _glfw_xdg_wm_base_interface</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a01ea65544cb1c590b788181b80b4c0e2">GLFW_WAYLAND_WINDOW_STATE</link>   <link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link>  wl;</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ad95df6576b8571ca13b2ea2daa99baf6">GLFW_WAYLAND_LIBRARY_WINDOW_STATE</link>   <link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link> wl;</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a5215215ecf3479de43a9ce26e6cde798">GLFW_WAYLAND_MONITOR_STATE</link>   <link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link> wl;</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a27af24231144adeda7e670168cc01f29">GLFW_WAYLAND_CURSOR_STATE</link>   <link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link>  wl;</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1af0849f9b39044874257dae01cf1ab056">wl_cursor_theme_load</link>   _glfw.wl.cursor.theme_load</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1af4ea3aeb622e33ebef78a5456e1f177f">wl_cursor_theme_destroy</link>   _glfw.wl.cursor.theme_destroy</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f">wl_cursor_theme_get_cursor</link>   _glfw.wl.cursor.theme_get_cursor</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a3ea54f5b113ff9dccacb3d379b02ae76">wl_cursor_image_get_buffer</link>   _glfw.wl.cursor.image_get_buffer</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ab794adced13a3bdc0757c2994e82f9ea">wl_egl_window_create</link>   <link linkend="_window_8h_1aa9e11f3c895eb9257a996d77d280c520">_glfw.wl.egl.window_create</link></para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1adf173779ebc5cf85253a4d34918fd2cb">wl_egl_window_destroy</link>   _glfw.wl.egl.window_destroy</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a9c997ab2ede20b608025a74e6fb54129">wl_egl_window_resize</link>   _glfw.wl.egl.window_resize</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ad3db83b8a04c02fad16d7f0eb9253651">xkb_context_new</link>   _glfw.wl.xkb.context_new</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a7d4180d6a0192d57ed6bab2162b12444">xkb_context_unref</link>   _glfw.wl.xkb.context_unref</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a46b7585bcf515582df56effb765548ff">xkb_keymap_new_from_string</link>   _glfw.wl.xkb.keymap_new_from_string</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a9707d19b164550101c688f6a8ad4cb56">xkb_keymap_unref</link>   _glfw.wl.xkb.keymap_unref</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ae00a697007ff6fb26df721434e95043a">xkb_keymap_mod_get_index</link>   _glfw.wl.xkb.keymap_mod_get_index</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a454cb66a6161b4d9fbfde69bf1b1adb1">xkb_keymap_key_repeats</link>   _glfw.wl.xkb.keymap_key_repeats</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a426e6afbf7ce124d9a902f1ae4a119e4">xkb_keymap_key_get_syms_by_level</link>   _glfw.wl.xkb.keymap_key_get_syms_by_level</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a3d5fc2dfd183f89bba226cdbc168608c">xkb_state_new</link>   _glfw.wl.xkb.state_new</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a924ddb1dc7e73e83e207b2a1dc911504">xkb_state_unref</link>   _glfw.wl.xkb.state_unref</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aae3ce4ad2452936ecc298d83cec75af8">xkb_state_key_get_syms</link>   _glfw.wl.xkb.state_key_get_syms</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1af6ad24764ac986922fc1040d48fd568a">xkb_state_update_mask</link>   _glfw.wl.xkb.state_update_mask</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aaff941989f1ba31063f6f81f9f34f595">xkb_state_serialize_mods</link>   _glfw.wl.xkb.state_serialize_mods</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ab1d4db8d90560c06b7ac881b6591eaa0">xkb_state_key_get_layout</link>   _glfw.wl.xkb.state_key_get_layout</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a31d4591408f363bbb8ad9cec1b6e39f0">xkb_compose_table_new_from_locale</link>   _glfw.wl.xkb.compose_table_new_from_locale</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a7c32628b208aba911df6796926d6f57d">xkb_compose_table_unref</link>   _glfw.wl.xkb.compose_table_unref</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a4df1fec1617c73aa59d5ffe896313630">xkb_compose_state_new</link>   _glfw.wl.xkb.compose_state_new</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a73858a1a46e83ed97773dbbbdc541bbd">xkb_compose_state_unref</link>   _glfw.wl.xkb.compose_state_unref</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a5a4d3a0e7178ae878559d13d1a282869">xkb_compose_state_feed</link>   _glfw.wl.xkb.compose_state_feed</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a75d9c30f172b5d524557b39d44ce8e23">xkb_compose_state_get_status</link>   _glfw.wl.xkb.compose_state_get_status</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a9e86514c92913299042b85adf71b739d">xkb_compose_state_get_one_sym</link>   _glfw.wl.xkb.compose_state_get_one_sym</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1abbd514b1fca6f13fe14c45f91478e033">_GLFW_DECORATION_TOP</link>   24</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1aa626e680b43b163df2478262d214ee33">_GLFW_DECORATION_VERTICAL</link>   (<link linkend="_wl__platform_8h_1abbd514b1fca6f13fe14c45f91478e033">_GLFW_DECORATION_TOP</link> + <link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_wl__platform_8h_1a37b0c386c98843eeeb28e5723227d49f">_GLFW_DECORATION_HORIZONTAL</link>   (2 * <link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_vulkan_8h_1abb605a7700670dd8420cc3841b939444">VkFlags</link> <link linkend="_wl__platform_8h_1a36e579e4f2092ce7a427191251c5cc33">VkWaylandSurfaceCreateFlagsKHR</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link> <link linkend="_wl__platform_8h_1a1806f7a43bfa7c3b5dccc83f9a110f9f">VkWaylandSurfaceCreateInfoKHR</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * <link linkend="_wl__platform_8h_1a76222e93358f10e2b01bd5115dc01038">PFN_vkCreateWaylandSurfaceKHR</link>) (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link>, const <link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link> *, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_vulkan_8h_1ae5d9faf75f583010e32ee49087a15326">VkBool32</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * <link linkend="_wl__platform_8h_1ab2aa7548ffded3123627790f8bce8c95">PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR</link>) (<link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, struct wl_display *)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1a2febf2819b199bcb0ad33bc9ec83ab13">PFN_wl_display_flush</link>) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a059454d3d45c515a1c9769b06f870f1a">PFN_wl_display_cancel_read</link>) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1ac1a1070aa10fb7385a25d8dcc6e75c75">PFN_wl_display_dispatch_pending</link>) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1a0f078a0719d6f9bbb387265c3db30704">PFN_wl_display_read_events</link>) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</para>
</listitem>
            <listitem><para>typedef struct wl_display *(* <link linkend="_wl__platform_8h_1af300d1e95fd8bdf3acc4d79692a8b444">PFN_wl_display_connect</link>) (const char *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a884612b7f8d6ac2d1a09d43372c340f8">PFN_wl_display_disconnect</link>) (struct wl_display *)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1ac8941d25e88d5e10f33c5270efc46f45">PFN_wl_display_roundtrip</link>) (struct wl_display *)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1a8043dd7b64a5d5594d4db20613adfb7a">PFN_wl_display_get_fd</link>) (struct wl_display *)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1aaa3bfda091c49bf98074ff95c20be78f">PFN_wl_display_prepare_read</link>) (struct wl_display *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a1e2c3d1ff026e91762ba9bb04b299e28">PFN_wl_proxy_marshal</link>) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>,...)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1a425b1cea5c34f65c0fb5fa08b5932a82">PFN_wl_proxy_add_listener</link>) (struct wl_proxy *, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(**) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>), <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1ad7a4e34186cb77594ffbccc472b10928">PFN_wl_proxy_destroy</link>) (struct wl_proxy *)</para>
</listitem>
            <listitem><para>typedef struct wl_proxy *(* <link linkend="_wl__platform_8h_1a2a355482006415dd4a3ebdc3d5db319c">PFN_wl_proxy_marshal_constructor</link>) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, const struct wl_interface *,...)</para>
</listitem>
            <listitem><para>typedef struct wl_proxy *(* <link linkend="_wl__platform_8h_1ac37612cd6f868464f393263dcb5115ce">PFN_wl_proxy_marshal_constructor_versioned</link>) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, const struct wl_interface *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>,...)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *(* <link linkend="_wl__platform_8h_1a66f071e0eac6f315abe216dd6e978985">PFN_wl_proxy_get_user_data</link>) (struct wl_proxy *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a1652428fcf022f5c562ac5bd5efc0659">PFN_wl_proxy_set_user_data</link>) (struct wl_proxy *, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>(* <link linkend="_wl__platform_8h_1aaee9c638becf09cec42feb11c91a5860">PFN_wl_proxy_get_version</link>) (struct wl_proxy *)</para>
</listitem>
            <listitem><para>typedef struct wl_proxy *(* <link linkend="_wl__platform_8h_1ae6ee6cd4db3115093cb0e3c6fa5e9f8a">PFN_wl_proxy_marshal_flags</link>) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, const struct wl_interface *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>,...)</para>
</listitem>
            <listitem><para>typedef struct wl_cursor_theme *(* <link linkend="_wl__platform_8h_1a3d5be4ad6514481271f04e01687ba3cf">PFN_wl_cursor_theme_load</link>) (const char *, int, struct wl_shm *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a028b3d9313486c63f918b370f4290b46">PFN_wl_cursor_theme_destroy</link>) (struct wl_cursor_theme *)</para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structwl__cursor">wl_cursor</link> *(* <link linkend="_wl__platform_8h_1ad888f8476b9b83ca152e92f6b4d04b50">PFN_wl_cursor_theme_get_cursor</link>) (struct wl_cursor_theme *, const char *)</para>
</listitem>
            <listitem><para>typedef struct wl_buffer *(* <link linkend="_wl__platform_8h_1a71881ab6635d2de5a303349e16807430">PFN_wl_cursor_image_get_buffer</link>) (struct <link linkend="_structwl__cursor__image">wl_cursor_image</link> *)</para>
</listitem>
            <listitem><para>typedef struct wl_egl_window *(* <link linkend="_wl__platform_8h_1a6b577197886e83e6550758fde49fcbf9">PFN_wl_egl_window_create</link>) (struct wl_surface *, int, int)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a2727d08bef446572e6f9e26801506ae1">PFN_wl_egl_window_destroy</link>) (struct wl_egl_window *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1adcf78e57b989ea0e561208099dada945">PFN_wl_egl_window_resize</link>) (struct wl_egl_window *, int, int, int, int)</para>
</listitem>
            <listitem><para>typedef struct xkb_context *(* <link linkend="_wl__platform_8h_1a0f6a5db093091ec57ac908e20bc205df">PFN_xkb_context_new</link>) (enum xkb_context_flags)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1aeb826e6dece848b0e71cf98fcf3b6a34">PFN_xkb_context_unref</link>) (struct xkb_context *)</para>
</listitem>
            <listitem><para>typedef struct xkb_keymap *(* <link linkend="_wl__platform_8h_1a7b808d4fcf4963467503704373c5cdd7">PFN_xkb_keymap_new_from_string</link>) (struct xkb_context *, const char *, enum xkb_keymap_format, enum xkb_keymap_compile_flags)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1aa0778d7d934b96bf500f046368de1f45">PFN_xkb_keymap_unref</link>) (struct xkb_keymap *)</para>
</listitem>
            <listitem><para>typedef xkb_mod_index_t(* <link linkend="_wl__platform_8h_1a41d7cec916693645a46216cec1c0c6d7">PFN_xkb_keymap_mod_get_index</link>) (struct xkb_keymap *, const char *)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1a10dd25305b8984d748e0c35db025106e">PFN_xkb_keymap_key_repeats</link>) (struct xkb_keymap *, xkb_keycode_t)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1a9866b14ec9bf5013c49523c9a71c2660">PFN_xkb_keymap_key_get_syms_by_level</link>) (struct xkb_keymap *, xkb_keycode_t, xkb_layout_index_t, xkb_level_index_t, const xkb_keysym_t **)</para>
</listitem>
            <listitem><para>typedef struct xkb_state *(* <link linkend="_wl__platform_8h_1a2a900ea023b56cb0c6ec6feaf6b45854">PFN_xkb_state_new</link>) (struct xkb_keymap *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a04a57f9f8326bd39a1525e4e0edd4951">PFN_xkb_state_unref</link>) (struct xkb_state *)</para>
</listitem>
            <listitem><para>typedef int(* <link linkend="_wl__platform_8h_1ac93bb3679df2634f72bb35e1587b0459">PFN_xkb_state_key_get_syms</link>) (struct xkb_state *, xkb_keycode_t, const xkb_keysym_t **)</para>
</listitem>
            <listitem><para>typedef enum xkb_state_component(* <link linkend="_wl__platform_8h_1a872e4657e3e1127caeb678c0b253b4f0">PFN_xkb_state_update_mask</link>) (struct xkb_state *, xkb_mod_mask_t, xkb_mod_mask_t, xkb_mod_mask_t, xkb_layout_index_t, xkb_layout_index_t, xkb_layout_index_t)</para>
</listitem>
            <listitem><para>typedef xkb_mod_mask_t(* <link linkend="_wl__platform_8h_1a963602febce41dbde7c037aaba7b7c0d">PFN_xkb_state_serialize_mods</link>) (struct xkb_state *, enum xkb_state_component)</para>
</listitem>
            <listitem><para>typedef xkb_layout_index_t(* <link linkend="_wl__platform_8h_1a1ddf8a57641c77805f0aedf68d7c715e">PFN_xkb_state_key_get_layout</link>) (struct xkb_state *, xkb_keycode_t)</para>
</listitem>
            <listitem><para>typedef struct xkb_compose_table *(* <link linkend="_wl__platform_8h_1a8a717fe416e52e9d6e5258caeb5281d4">PFN_xkb_compose_table_new_from_locale</link>) (struct xkb_context *, const char *, enum xkb_compose_compile_flags)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a94826943d69f9fce48bb246457692c2e">PFN_xkb_compose_table_unref</link>) (struct xkb_compose_table *)</para>
</listitem>
            <listitem><para>typedef struct xkb_compose_state *(* <link linkend="_wl__platform_8h_1acde584df56f61030dd063d5bbf6ac838">PFN_xkb_compose_state_new</link>) (struct xkb_compose_table *, enum xkb_compose_state_flags)</para>
</listitem>
            <listitem><para>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* <link linkend="_wl__platform_8h_1a5b405c88d81a608a1a447ac889f6485b">PFN_xkb_compose_state_unref</link>) (struct xkb_compose_state *)</para>
</listitem>
            <listitem><para>typedef enum xkb_compose_feed_result(* <link linkend="_wl__platform_8h_1a58829e3e18572f5e5e8d7d0349b3f092">PFN_xkb_compose_state_feed</link>) (struct xkb_compose_state *, xkb_keysym_t)</para>
</listitem>
            <listitem><para>typedef enum xkb_compose_status(* <link linkend="_wl__platform_8h_1aad8c18022b37e3cd5d8e38a621fa42ed">PFN_xkb_compose_state_get_status</link>) (struct xkb_compose_state *)</para>
</listitem>
            <listitem><para>typedef xkb_keysym_t(* <link linkend="_wl__platform_8h_1a88d4343fefb99b57a83cb2609eebdf87">PFN_xkb_compose_state_get_one_sym</link>) (struct xkb_compose_state *)</para>
</listitem>
            <listitem><para>typedef enum <link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link> <link linkend="_wl__platform_8h_1a9f07c6758fc7aa2504854077676e7413">_GLFWdecorationSideWayland</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wdecoration_wayland">_GLFWdecorationWayland</link> <link linkend="_wl__platform_8h_1a55173b590d4140e345ceeb03f906d101">_GLFWdecorationWayland</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link> <link linkend="_wl__platform_8h_1a5deeeabe0fcb994f43b6c2364e02edc4">_GLFWwindowWayland</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link> <link linkend="_wl__platform_8h_1aea3fbae5be24849acafc096b9f5eb755">_GLFWlibraryWayland</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link> <link linkend="_wl__platform_8h_1ab91578847da8ca2e148753a63f84d9a0">_GLFWmonitorWayland</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link> <link linkend="_wl__platform_8h_1ab9e42e1bf8aaa05d5b515907e683af86">_GLFWcursorWayland</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link> { 
<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acab46a673d9ca7e2f82c3cdd4cc7118e6b">mainWindow</link>, 
<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca7d386fd3327b79f545efc42b71938684">topDecoration</link>, 
<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca9a7153928697fcf33642ce73e6d4c3e4">leftDecoration</link>, 
<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acaa31414385e2e07a6c5b5e1bc3ae93dfc">rightDecoration</link>, 

<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca3393de96e9dcdda8d91fcfbbc616b550">bottomDecoration</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_wl__platform_8h_1aa808bd5a1ba23557d20738142c2066e7">_glfwConnectWayland</link> (int platformID, <link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link> *platform)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1a8d640825daae6f39a0c20edba245470d">_glfwInitWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a21e32d7cde0c918c630329a1cde99f10">_glfwTerminateWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1a8fbd5336c54afc9760a89acca1b5bd20">_glfwCreateWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> *wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> *ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> *fbconfig)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a4f9e23a94f70832b66ea4ff6f7e6c98d">_glfwDestroyWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a2a03cb3eb1fa3720991ad2503dd65e2a">_glfwSetWindowTitleWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const char *title)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1af3bdf666499b335663748945d01b1aab">_glfwSetWindowIconWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *images)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a325fef5dd107caef5a4620ec0e5ee9bd">_glfwGetWindowPosWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a5adb7549f1afecf80241a68fe7d2f2e0">_glfwSetWindowPosWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int xpos, int ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a7139656b9b92a558042462c05e71f17e">_glfwGetWindowSizeWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a782e4e77e16e03c5340748e43e808828">_glfwSetWindowSizeWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1acd2b24bb6d3dc8bf27de6306a5d5397d">_glfwSetWindowSizeLimitsWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int minwidth, int minheight, int maxwidth, int maxheight)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a67850a44f6265bfa151ef3e3637bca55">_glfwSetWindowAspectRatioWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int numer, int denom)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1afa69ff28fa47d232843f620120391e97">_glfwGetFramebufferSizeWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a1c0713597287aec915fa764efdebf1f9">_glfwGetWindowFrameSizeWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>, int *<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>, int *<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>, int *<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1ab3e8d510f751fca3c9b60aa03d321cba">_glfwGetWindowContentScaleWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a2786524a443b7f4a2ff53055366e1169">_glfwIconifyWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a25c9fe00185d9a1b8badf038b7634b88">_glfwRestoreWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a8dcc43854cfabe4d324154d2eeebd44e">_glfwMaximizeWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a7a956e757e29f06d5efcae33b58025cb">_glfwShowWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1ad519388eb25d04c1a4db2df34169efb4">_glfwHideWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a8a1b249be1215f514f923f91656030c3">_glfwRequestWindowAttentionWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a29aeccafd183ea2e1f5bab9a44ad6122">_glfwFocusWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a76e4715c3d943636ba1b71afea0c97c2">_glfwSetWindowMonitorWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int xpos, int ypos, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int refreshRate)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1ab0d72e6bf663506ff3f138bc670b2f6c">_glfwWindowFocusedWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1a44752c656c8cee3498776b851285dca6">_glfwWindowIconifiedWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1abb9d2bf1aac035ff3ae3abcc9e0a7f09">_glfwWindowVisibleWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1a7676d7f4167b65f29aedf393e14174ed">_glfwWindowMaximizedWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1af427fb6a233af50a51858a9908d196fb">_glfwWindowHoveredWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1a2a78a10b4fa6a214a2bebf4f1ec9b868">_glfwFramebufferTransparentWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1aa7d932102710313b7cc131d45413cd06">_glfwSetWindowResizableWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1afcacd9ea3cb285c1266871d13a723e4c">_glfwSetWindowDecoratedWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1aebcd0db81b67e416f775e4b0d8facdc1">_glfwSetWindowFloatingWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_wl__platform_8h_1a741ad4527adc24d5f6732ac27fa32678">_glfwGetWindowOpacityWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a43f0c40c30c7bc0216b51cfae59c3629">_glfwSetWindowOpacityWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float opacity)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1acad95c7e85177725f95463ffe86015d4">_glfwSetWindowMousePassthroughWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1aeb3438865c89b17a2142cfc4509dbd28">_glfwSetRawMouseMotionWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_wl__platform_8h_1aa0c6e411bf8eef4b73bc98e0974f2a78">_glfwRawMouseMotionSupportedWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a7a315f4b4c3263efc0960094698de618">_glfwPollEventsWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a7cc624f3d8429b0d35ad163092b4821a">_glfwWaitEventsWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a43d44933860ce6e5802733777edae04b">_glfwWaitEventsTimeoutWayland</link> (double <link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a34984c3cc558a291b1721288c8b5ebe6">_glfwPostEmptyEventWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a68e7966431b3829e09186d88c057e683">_glfwGetCursorPosWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double *xpos, double *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1aab3ae730f795e2f68b395f1c0f7694c1">_glfwSetCursorPosWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double xpos, double ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1ae993bd14d7db090c84fb9799fc556bbd">_glfwSetCursorModeWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_wl__platform_8h_1a066d33db2119fb1bba6a5127abd3530c">_glfwGetScancodeNameWayland</link> (int scancode)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1a3e2e4e589e75df85898b33ff459f60ee">_glfwGetKeyScancodeWayland</link> (int <link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1abdb1b358173a9cd27ed43e2492c40c20">_glfwCreateCursorWayland</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *<link linkend="_structimage">image</link>, int xhot, int yhot)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1aadea2d69e02bfba04cf90e07501aa467">_glfwCreateStandardCursorWayland</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, int shape)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1ac215aeab29ad474956c27f4f6ddfc65a">_glfwDestroyCursorWayland</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1aabccf38d8d6f6e29e4a63345a850bfa9">_glfwSetCursorWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a74f40e21bcc7f5a646ecc5f80f25a6c3">_glfwSetClipboardStringWayland</link> (const char *<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_wl__platform_8h_1a491fcd8a56c175d24dc286660fe7475b">_glfwGetClipboardStringWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> <link linkend="_wl__platform_8h_1ad3a432eeab11d12463568f267ba0dc59">_glfwGetEGLPlatformWayland</link> (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> **<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> <link linkend="_wl__platform_8h_1a504e09d478703e56da9a9b8204bdddd5">_glfwGetEGLNativeDisplayWayland</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> <link linkend="_wl__platform_8h_1a1aa2aacf3bb7726a0cb96c138cda4f43">_glfwGetEGLNativeWindowWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a82b45703386cfc7543957d2160b482a5">_glfwGetRequiredInstanceExtensionsWayland</link> (char **extensions)</para>
</listitem>
            <listitem><para>int <link linkend="_wl__platform_8h_1a5b300bf0217ad4d0c73c7c44eb53062d">_glfwGetPhysicalDevicePresentationSupportWayland</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</para>
</listitem>
            <listitem><para><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> <link linkend="_wl__platform_8h_1a88b24d7cb3bc64abfc826fd23cf17ad4">_glfwCreateWindowSurfaceWayland</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *surface)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1acaaad2590b0a15c2588e3d9f12c79863">_glfwFreeMonitorWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a35f10d415428b18f4a8d83e5e308f87f">_glfwGetMonitorPosWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1ad2feca038ef5480163f360d16b7f6f4b">_glfwGetMonitorContentScaleWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1afce0463dcba6f72acf3127c094635b47">_glfwGetMonitorWorkareaWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *xpos, int *ypos, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * <link linkend="_wl__platform_8h_1aacb87b7bddc8c0acbf7ba412fcab3e93">_glfwGetVideoModesWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1aabd466779c94e6b0bf54f6fece70027c">_glfwGetVideoModeWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> *<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_wl__platform_8h_1a70e276054b29b00bb118f4261643c428">_glfwGetGammaRampWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1afa0e67469f56d48d100cfd1cb1ff25bc">_glfwSetGammaRampWayland</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_wl__platform_8h_1a4061b6ec759c796455591e25a0de8c4b">_glfwAddOutputWayland</link> (<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> <link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> version)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_wl__platform_8h_1a590adac355ae7255f974357d3cc9bb82">_glfwInputTextWayland</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> scancode)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_wl__platform_8h_1a37b0c386c98843eeeb28e5723227d49f"/>    <section>
    <title>_GLFW_DECORATION_HORIZONTAL</title>
<indexterm><primary>_GLFW_DECORATION_HORIZONTAL</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFW_DECORATION_HORIZONTAL</secondary></indexterm>
<para><computeroutput>#define _GLFW_DECORATION_HORIZONTAL   (2 * <link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>)</computeroutput></para><para>
Definition at line 203 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1abbd514b1fca6f13fe14c45f91478e033"/>    <section>
    <title>_GLFW_DECORATION_TOP</title>
<indexterm><primary>_GLFW_DECORATION_TOP</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFW_DECORATION_TOP</secondary></indexterm>
<para><computeroutput>#define _GLFW_DECORATION_TOP   24</computeroutput></para><para>
Definition at line 201 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aa626e680b43b163df2478262d214ee33"/>    <section>
    <title>_GLFW_DECORATION_VERTICAL</title>
<indexterm><primary>_GLFW_DECORATION_VERTICAL</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFW_DECORATION_VERTICAL</secondary></indexterm>
<para><computeroutput>#define _GLFW_DECORATION_VERTICAL   (<link linkend="_wl__platform_8h_1abbd514b1fca6f13fe14c45f91478e033">_GLFW_DECORATION_TOP</link> + <link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>)</computeroutput></para><para>
Definition at line 202 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977"/>    <section>
    <title>_GLFW_DECORATION_WIDTH</title>
<indexterm><primary>_GLFW_DECORATION_WIDTH</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFW_DECORATION_WIDTH</secondary></indexterm>
<para><computeroutput>#define _GLFW_DECORATION_WIDTH   4</computeroutput></para><para>
Definition at line 200 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a27af24231144adeda7e670168cc01f29"/>    <section>
    <title>GLFW_WAYLAND_CURSOR_STATE</title>
<indexterm><primary>GLFW_WAYLAND_CURSOR_STATE</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>GLFW_WAYLAND_CURSOR_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WAYLAND_CURSOR_STATE   <link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link>  wl;</computeroutput></para><para>
Definition at line 128 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ad95df6576b8571ca13b2ea2daa99baf6"/>    <section>
    <title>GLFW_WAYLAND_LIBRARY_WINDOW_STATE</title>
<indexterm><primary>GLFW_WAYLAND_LIBRARY_WINDOW_STATE</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>GLFW_WAYLAND_LIBRARY_WINDOW_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WAYLAND_LIBRARY_WINDOW_STATE   <link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link> wl;</computeroutput></para><para>
Definition at line 126 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a5215215ecf3479de43a9ce26e6cde798"/>    <section>
    <title>GLFW_WAYLAND_MONITOR_STATE</title>
<indexterm><primary>GLFW_WAYLAND_MONITOR_STATE</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>GLFW_WAYLAND_MONITOR_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WAYLAND_MONITOR_STATE   <link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link> wl;</computeroutput></para><para>
Definition at line 127 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a01ea65544cb1c590b788181b80b4c0e2"/>    <section>
    <title>GLFW_WAYLAND_WINDOW_STATE</title>
<indexterm><primary>GLFW_WAYLAND_WINDOW_STATE</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>GLFW_WAYLAND_WINDOW_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WAYLAND_WINDOW_STATE   <link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link>  wl;</computeroutput></para><para>
Definition at line 125 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1abcda565d0747212ab82edd2c93012d79"/>    <section>
    <title>wl_buffer_interface</title>
<indexterm><primary>wl_buffer_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_buffer_interface</secondary></indexterm>
<para><computeroutput>#define wl_buffer_interface   _glfw_wl_buffer_interface</computeroutput></para><para>
Definition at line 91 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aa7564eec6d71346ff2d06cf427ae3a69"/>    <section>
    <title>wl_callback_interface</title>
<indexterm><primary>wl_callback_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_callback_interface</secondary></indexterm>
<para><computeroutput>#define wl_callback_interface   _glfw_wl_callback_interface</computeroutput></para><para>
Definition at line 92 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2032e4b6ed0a9a19b3ef8f0aeee4b967"/>    <section>
    <title>wl_compositor_interface</title>
<indexterm><primary>wl_compositor_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_compositor_interface</secondary></indexterm>
<para><computeroutput>#define wl_compositor_interface   _glfw_wl_compositor_interface</computeroutput></para><para>
Definition at line 87 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a3ea54f5b113ff9dccacb3d379b02ae76"/>    <section>
    <title>wl_cursor_image_get_buffer</title>
<indexterm><primary>wl_cursor_image_get_buffer</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_cursor_image_get_buffer</secondary></indexterm>
<para><computeroutput>#define wl_cursor_image_get_buffer   _glfw.wl.cursor.image_get_buffer</computeroutput></para><para>
Definition at line 149 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af4ea3aeb622e33ebef78a5456e1f177f"/>    <section>
    <title>wl_cursor_theme_destroy</title>
<indexterm><primary>wl_cursor_theme_destroy</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_cursor_theme_destroy</secondary></indexterm>
<para><computeroutput>#define wl_cursor_theme_destroy   _glfw.wl.cursor.theme_destroy</computeroutput></para><para>
Definition at line 147 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f"/>    <section>
    <title>wl_cursor_theme_get_cursor</title>
<indexterm><primary>wl_cursor_theme_get_cursor</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_cursor_theme_get_cursor</secondary></indexterm>
<para><computeroutput>#define wl_cursor_theme_get_cursor   _glfw.wl.cursor.theme_get_cursor</computeroutput></para><para>
Definition at line 148 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af0849f9b39044874257dae01cf1ab056"/>    <section>
    <title>wl_cursor_theme_load</title>
<indexterm><primary>wl_cursor_theme_load</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_cursor_theme_load</secondary></indexterm>
<para><computeroutput>#define wl_cursor_theme_load   _glfw.wl.cursor.theme_load</computeroutput></para><para>
Definition at line 146 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a7b386307e2b3c7a202594ca896d9b26f"/>    <section>
    <title>wl_data_device_interface</title>
<indexterm><primary>wl_data_device_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_data_device_interface</secondary></indexterm>
<para><computeroutput>#define wl_data_device_interface   _glfw_wl_data_device_interface</computeroutput></para><para>
Definition at line 93 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aa80dd4128a4cda72151feea15a1456bd"/>    <section>
    <title>wl_data_device_manager_interface</title>
<indexterm><primary>wl_data_device_manager_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_data_device_manager_interface</secondary></indexterm>
<para><computeroutput>#define wl_data_device_manager_interface   _glfw_wl_data_device_manager_interface</computeroutput></para><para>
Definition at line 89 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af381f98e5e2e6a1bb37be32d37037660"/>    <section>
    <title>wl_data_offer_interface</title>
<indexterm><primary>wl_data_offer_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_data_offer_interface</secondary></indexterm>
<para><computeroutput>#define wl_data_offer_interface   _glfw_wl_data_offer_interface</computeroutput></para><para>
Definition at line 94 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a5795e176509a4f2355f4cc7586b6715d"/>    <section>
    <title>wl_data_source_interface</title>
<indexterm><primary>wl_data_source_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_data_source_interface</secondary></indexterm>
<para><computeroutput>#define wl_data_source_interface   _glfw_wl_data_source_interface</computeroutput></para><para>
Definition at line 95 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aa26480744685a334552f52ddfb11f992"/>    <section>
    <title>wl_display_cancel_read</title>
<indexterm><primary>wl_display_cancel_read</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_cancel_read</secondary></indexterm>
<para><computeroutput>#define wl_display_cancel_read   _glfw.wl.client.display_cancel_read</computeroutput></para><para>
Definition at line 66 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a80f20a11b3b544c9c07cf3cc5006ba04"/>    <section>
    <title>wl_display_disconnect</title>
<indexterm><primary>wl_display_disconnect</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_disconnect</secondary></indexterm>
<para><computeroutput>#define wl_display_disconnect   _glfw.wl.client.display_disconnect</computeroutput></para><para>
Definition at line 69 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a9f51774662e088d12fc6a4a53541f847"/>    <section>
    <title>wl_display_dispatch_pending</title>
<indexterm><primary>wl_display_dispatch_pending</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_dispatch_pending</secondary></indexterm>
<para><computeroutput>#define wl_display_dispatch_pending   _glfw.wl.client.display_dispatch_pending</computeroutput></para><para>
Definition at line 67 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a57bfe216b1e65a2208bc0f44ed3c4739"/>    <section>
    <title>wl_display_flush</title>
<indexterm><primary>wl_display_flush</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_flush</secondary></indexterm>
<para><computeroutput>#define wl_display_flush   _glfw.wl.client.display_flush</computeroutput></para><para>
Definition at line 65 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a85c6c5b82fcf4f34d2a1fc3ea0f1d5da"/>    <section>
    <title>wl_display_get_fd</title>
<indexterm><primary>wl_display_get_fd</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_get_fd</secondary></indexterm>
<para><computeroutput>#define wl_display_get_fd   _glfw.wl.client.display_get_fd</computeroutput></para><para>
Definition at line 71 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a4e1dbcff552c9bfa583dce1347694832"/>    <section>
    <title>wl_display_interface</title>
<indexterm><primary>wl_display_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_interface</secondary></indexterm>
<para><computeroutput>#define wl_display_interface   _glfw_wl_display_interface</computeroutput></para><para>
Definition at line 85 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a46ebb85bba511c67244cb855b0d8de24"/>    <section>
    <title>wl_display_prepare_read</title>
<indexterm><primary>wl_display_prepare_read</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_prepare_read</secondary></indexterm>
<para><computeroutput>#define wl_display_prepare_read   _glfw.wl.client.display_prepare_read</computeroutput></para><para>
Definition at line 72 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a5b8db01e5b40c192781a5de237fbefd0"/>    <section>
    <title>wl_display_read_events</title>
<indexterm><primary>wl_display_read_events</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_read_events</secondary></indexterm>
<para><computeroutput>#define wl_display_read_events   _glfw.wl.client.display_read_events</computeroutput></para><para>
Definition at line 68 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1afbff16ff914a6de7fb8b0947aa872df3"/>    <section>
    <title>wl_display_roundtrip</title>
<indexterm><primary>wl_display_roundtrip</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_display_roundtrip</secondary></indexterm>
<para><computeroutput>#define wl_display_roundtrip   _glfw.wl.client.display_roundtrip</computeroutput></para><para>
Definition at line 70 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ab794adced13a3bdc0757c2994e82f9ea"/>    <section>
    <title>wl_egl_window_create</title>
<indexterm><primary>wl_egl_window_create</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_egl_window_create</secondary></indexterm>
<para><computeroutput>#define wl_egl_window_create   <link linkend="_window_8h_1aa9e11f3c895eb9257a996d77d280c520">_glfw.wl.egl.window_create</link></computeroutput></para><para>
Definition at line 154 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1adf173779ebc5cf85253a4d34918fd2cb"/>    <section>
    <title>wl_egl_window_destroy</title>
<indexterm><primary>wl_egl_window_destroy</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_egl_window_destroy</secondary></indexterm>
<para><computeroutput>#define wl_egl_window_destroy   _glfw.wl.egl.window_destroy</computeroutput></para><para>
Definition at line 155 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a9c997ab2ede20b608025a74e6fb54129"/>    <section>
    <title>wl_egl_window_resize</title>
<indexterm><primary>wl_egl_window_resize</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_egl_window_resize</secondary></indexterm>
<para><computeroutput>#define wl_egl_window_resize   _glfw.wl.egl.window_resize</computeroutput></para><para>
Definition at line 156 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aebb645348b1e2e8d797d54f7d95863d1"/>    <section>
    <title>wl_keyboard_interface</title>
<indexterm><primary>wl_keyboard_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_keyboard_interface</secondary></indexterm>
<para><computeroutput>#define wl_keyboard_interface   _glfw_wl_keyboard_interface</computeroutput></para><para>
Definition at line 96 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a872ee2ea6c856e5d514c00c4f7769c59"/>    <section>
    <title>wl_output_interface</title>
<indexterm><primary>wl_output_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_output_interface</secondary></indexterm>
<para><computeroutput>#define wl_output_interface   _glfw_wl_output_interface</computeroutput></para><para>
Definition at line 97 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a1dba077a73a16db3bc962810c50fcb28"/>    <section>
    <title>wl_pointer_interface</title>
<indexterm><primary>wl_pointer_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_pointer_interface</secondary></indexterm>
<para><computeroutput>#define wl_pointer_interface   _glfw_wl_pointer_interface</computeroutput></para><para>
Definition at line 98 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ad7b520266c881738bf5db2f185ce5b10"/>    <section>
    <title>wl_proxy_add_listener</title>
<indexterm><primary>wl_proxy_add_listener</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_add_listener</secondary></indexterm>
<para><computeroutput>#define wl_proxy_add_listener   _glfw.wl.client.proxy_add_listener</computeroutput></para><para>
Definition at line 74 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a66b0bb32c5f9dbfaea2dcc3838358ef9"/>    <section>
    <title>wl_proxy_destroy</title>
<indexterm><primary>wl_proxy_destroy</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_destroy</secondary></indexterm>
<para><computeroutput>#define wl_proxy_destroy   _glfw.wl.client.proxy_destroy</computeroutput></para><para>
Definition at line 75 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aca006ec450760271e7b64287d015643f"/>    <section>
    <title>wl_proxy_get_user_data</title>
<indexterm><primary>wl_proxy_get_user_data</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_get_user_data</secondary></indexterm>
<para><computeroutput>#define wl_proxy_get_user_data   _glfw.wl.client.proxy_get_user_data</computeroutput></para><para>
Definition at line 78 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a59c699da6e614d8e4befbcf96ceff306"/>    <section>
    <title>wl_proxy_get_version</title>
<indexterm><primary>wl_proxy_get_version</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_get_version</secondary></indexterm>
<para><computeroutput>#define wl_proxy_get_version   _glfw.wl.client.proxy_get_version</computeroutput></para><para>
Definition at line 80 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1abc30082be8e3c0ba4c077e1ee40b8b91"/>    <section>
    <title>wl_proxy_marshal</title>
<indexterm><primary>wl_proxy_marshal</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_marshal</secondary></indexterm>
<para><computeroutput>#define wl_proxy_marshal   _glfw.wl.client.proxy_marshal</computeroutput></para><para>
Definition at line 73 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a40e20e0fe8d6750b759ac31b11ed151d"/>    <section>
    <title>wl_proxy_marshal_constructor</title>
<indexterm><primary>wl_proxy_marshal_constructor</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_marshal_constructor</secondary></indexterm>
<para><computeroutput>#define wl_proxy_marshal_constructor   _glfw.wl.client.proxy_marshal_constructor</computeroutput></para><para>
Definition at line 76 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2a373f4b1e760fd1e69dbccf1fb2f374"/>    <section>
    <title>wl_proxy_marshal_constructor_versioned</title>
<indexterm><primary>wl_proxy_marshal_constructor_versioned</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_marshal_constructor_versioned</secondary></indexterm>
<para><computeroutput>#define wl_proxy_marshal_constructor_versioned   _glfw.wl.client.proxy_marshal_constructor_versioned</computeroutput></para><para>
Definition at line 77 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2d0dfd02c90b16be38f55f8e5f0655fb"/>    <section>
    <title>wl_proxy_marshal_flags</title>
<indexterm><primary>wl_proxy_marshal_flags</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_marshal_flags</secondary></indexterm>
<para><computeroutput>#define wl_proxy_marshal_flags   _glfw.wl.client.proxy_marshal_flags</computeroutput></para><para>
Definition at line 81 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af7d07a4c24c80f187a36116a9ea51ae8"/>    <section>
    <title>wl_proxy_set_user_data</title>
<indexterm><primary>wl_proxy_set_user_data</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_proxy_set_user_data</secondary></indexterm>
<para><computeroutput>#define wl_proxy_set_user_data   _glfw.wl.client.proxy_set_user_data</computeroutput></para><para>
Definition at line 79 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a4fed24503dda7d8ddd0ef735ce897191"/>    <section>
    <title>wl_region_interface</title>
<indexterm><primary>wl_region_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_region_interface</secondary></indexterm>
<para><computeroutput>#define wl_region_interface   _glfw_wl_region_interface</computeroutput></para><para>
Definition at line 99 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a3c0a77601837099de9410a27ad7ac488"/>    <section>
    <title>wl_registry_interface</title>
<indexterm><primary>wl_registry_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_registry_interface</secondary></indexterm>
<para><computeroutput>#define wl_registry_interface   _glfw_wl_registry_interface</computeroutput></para><para>
Definition at line 100 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a361a3827769df7e6a33e53f77aa5de60"/>    <section>
    <title>wl_seat_interface</title>
<indexterm><primary>wl_seat_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_seat_interface</secondary></indexterm>
<para><computeroutput>#define wl_seat_interface   _glfw_wl_seat_interface</computeroutput></para><para>
Definition at line 101 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a9417936fea6d4c8190c8fb852c898974"/>    <section>
    <title>wl_shell_interface</title>
<indexterm><primary>wl_shell_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_shell_interface</secondary></indexterm>
<para><computeroutput>#define wl_shell_interface   _glfw_wl_shell_interface</computeroutput></para><para>
Definition at line 90 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a52d26fadf40d997c77904d488afe93b9"/>    <section>
    <title>wl_shell_surface_interface</title>
<indexterm><primary>wl_shell_surface_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_shell_surface_interface</secondary></indexterm>
<para><computeroutput>#define wl_shell_surface_interface   _glfw_wl_shell_surface_interface</computeroutput></para><para>
Definition at line 102 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a172f2542a538c16cd0cd62631b832c69"/>    <section>
    <title>wl_shm_interface</title>
<indexterm><primary>wl_shm_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_shm_interface</secondary></indexterm>
<para><computeroutput>#define wl_shm_interface   _glfw_wl_shm_interface</computeroutput></para><para>
Definition at line 88 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a87d61909e65f177c8e9b0ee0a55a1fac"/>    <section>
    <title>wl_shm_pool_interface</title>
<indexterm><primary>wl_shm_pool_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_shm_pool_interface</secondary></indexterm>
<para><computeroutput>#define wl_shm_pool_interface   _glfw_wl_shm_pool_interface</computeroutput></para><para>
Definition at line 103 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af9dd9a0b0c76b4b8f1d7538d024c33f5"/>    <section>
    <title>wl_subcompositor_interface</title>
<indexterm><primary>wl_subcompositor_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_subcompositor_interface</secondary></indexterm>
<para><computeroutput>#define wl_subcompositor_interface   _glfw_wl_subcompositor_interface</computeroutput></para><para>
Definition at line 86 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2ddca4a58c79ed732045f34e1fd6b9ec"/>    <section>
    <title>wl_subsurface_interface</title>
<indexterm><primary>wl_subsurface_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_subsurface_interface</secondary></indexterm>
<para><computeroutput>#define wl_subsurface_interface   _glfw_wl_subsurface_interface</computeroutput></para><para>
Definition at line 104 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aeebc2aa87c2a2910f775e29547218f6e"/>    <section>
    <title>wl_surface_interface</title>
<indexterm><primary>wl_surface_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_surface_interface</secondary></indexterm>
<para><computeroutput>#define wl_surface_interface   _glfw_wl_surface_interface</computeroutput></para><para>
Definition at line 105 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a6ed55164ca96e43ab6f6ac8e75d1e801"/>    <section>
    <title>wl_touch_interface</title>
<indexterm><primary>wl_touch_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wl_touch_interface</secondary></indexterm>
<para><computeroutput>#define wl_touch_interface   _glfw_wl_touch_interface</computeroutput></para><para>
Definition at line 106 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a3e90b1796cda33736f5745ed30350832"/>    <section>
    <title>wp_viewport_interface</title>
<indexterm><primary>wp_viewport_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wp_viewport_interface</secondary></indexterm>
<para><computeroutput>#define wp_viewport_interface   _glfw_wp_viewport_interface</computeroutput></para><para>
Definition at line 114 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a76bf27a44af9c875b08307bf6315f984"/>    <section>
    <title>wp_viewporter_interface</title>
<indexterm><primary>wp_viewporter_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>wp_viewporter_interface</secondary></indexterm>
<para><computeroutput>#define wp_viewporter_interface   _glfw_wp_viewporter_interface</computeroutput></para><para>
Definition at line 115 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ae848b04a3a9bf248a1c85eb3a771307a"/>    <section>
    <title>xdg_popup_interface</title>
<indexterm><primary>xdg_popup_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xdg_popup_interface</secondary></indexterm>
<para><computeroutput>#define xdg_popup_interface   _glfw_xdg_popup_interface</computeroutput></para><para>
Definition at line 119 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ab9ad04f089f14176863b6728b05cbe96"/>    <section>
    <title>xdg_positioner_interface</title>
<indexterm><primary>xdg_positioner_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xdg_positioner_interface</secondary></indexterm>
<para><computeroutput>#define xdg_positioner_interface   _glfw_xdg_positioner_interface</computeroutput></para><para>
Definition at line 120 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a27f76e835be9e685b1a6f118798d0a27"/>    <section>
    <title>xdg_surface_interface</title>
<indexterm><primary>xdg_surface_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xdg_surface_interface</secondary></indexterm>
<para><computeroutput>#define xdg_surface_interface   _glfw_xdg_surface_interface</computeroutput></para><para>
Definition at line 121 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aaeb7d79886c0556c5fee80e93a7d9e22"/>    <section>
    <title>xdg_toplevel_interface<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>xdg_toplevel_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xdg_toplevel_interface</secondary></indexterm>
<para><computeroutput>#define xdg_toplevel_interface   _glfw_xdg_toplevel_interface</computeroutput></para><para>
Definition at line 122 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aaeb7d79886c0556c5fee80e93a7d9e22"/>    <section>
    <title>xdg_toplevel_interface<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>xdg_toplevel_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xdg_toplevel_interface</secondary></indexterm>
<para><computeroutput>#define xdg_toplevel_interface   _glfw_xdg_toplevel_interface</computeroutput></para><para>
Definition at line 122 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aeaa64aeaf7e91cc353ecade66956c97c"/>    <section>
    <title>xdg_wm_base_interface</title>
<indexterm><primary>xdg_wm_base_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xdg_wm_base_interface</secondary></indexterm>
<para><computeroutput>#define xdg_wm_base_interface   _glfw_xdg_wm_base_interface</computeroutput></para><para>
Definition at line 123 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a5a4d3a0e7178ae878559d13d1a282869"/>    <section>
    <title>xkb_compose_state_feed</title>
<indexterm><primary>xkb_compose_state_feed</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_compose_state_feed</secondary></indexterm>
<para><computeroutput>#define xkb_compose_state_feed   _glfw.wl.xkb.compose_state_feed</computeroutput></para><para>
Definition at line 196 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a9e86514c92913299042b85adf71b739d"/>    <section>
    <title>xkb_compose_state_get_one_sym</title>
<indexterm><primary>xkb_compose_state_get_one_sym</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_compose_state_get_one_sym</secondary></indexterm>
<para><computeroutput>#define xkb_compose_state_get_one_sym   _glfw.wl.xkb.compose_state_get_one_sym</computeroutput></para><para>
Definition at line 198 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a75d9c30f172b5d524557b39d44ce8e23"/>    <section>
    <title>xkb_compose_state_get_status</title>
<indexterm><primary>xkb_compose_state_get_status</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_compose_state_get_status</secondary></indexterm>
<para><computeroutput>#define xkb_compose_state_get_status   _glfw.wl.xkb.compose_state_get_status</computeroutput></para><para>
Definition at line 197 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a4df1fec1617c73aa59d5ffe896313630"/>    <section>
    <title>xkb_compose_state_new</title>
<indexterm><primary>xkb_compose_state_new</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_compose_state_new</secondary></indexterm>
<para><computeroutput>#define xkb_compose_state_new   _glfw.wl.xkb.compose_state_new</computeroutput></para><para>
Definition at line 194 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a73858a1a46e83ed97773dbbbdc541bbd"/>    <section>
    <title>xkb_compose_state_unref</title>
<indexterm><primary>xkb_compose_state_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_compose_state_unref</secondary></indexterm>
<para><computeroutput>#define xkb_compose_state_unref   _glfw.wl.xkb.compose_state_unref</computeroutput></para><para>
Definition at line 195 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a31d4591408f363bbb8ad9cec1b6e39f0"/>    <section>
    <title>xkb_compose_table_new_from_locale</title>
<indexterm><primary>xkb_compose_table_new_from_locale</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_compose_table_new_from_locale</secondary></indexterm>
<para><computeroutput>#define xkb_compose_table_new_from_locale   _glfw.wl.xkb.compose_table_new_from_locale</computeroutput></para><para>
Definition at line 192 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a7c32628b208aba911df6796926d6f57d"/>    <section>
    <title>xkb_compose_table_unref</title>
<indexterm><primary>xkb_compose_table_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_compose_table_unref</secondary></indexterm>
<para><computeroutput>#define xkb_compose_table_unref   _glfw.wl.xkb.compose_table_unref</computeroutput></para><para>
Definition at line 193 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ad3db83b8a04c02fad16d7f0eb9253651"/>    <section>
    <title>xkb_context_new</title>
<indexterm><primary>xkb_context_new</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_context_new</secondary></indexterm>
<para><computeroutput>#define xkb_context_new   _glfw.wl.xkb.context_new</computeroutput></para><para>
Definition at line 171 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a7d4180d6a0192d57ed6bab2162b12444"/>    <section>
    <title>xkb_context_unref</title>
<indexterm><primary>xkb_context_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_context_unref</secondary></indexterm>
<para><computeroutput>#define xkb_context_unref   _glfw.wl.xkb.context_unref</computeroutput></para><para>
Definition at line 172 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a426e6afbf7ce124d9a902f1ae4a119e4"/>    <section>
    <title>xkb_keymap_key_get_syms_by_level</title>
<indexterm><primary>xkb_keymap_key_get_syms_by_level</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_keymap_key_get_syms_by_level</secondary></indexterm>
<para><computeroutput>#define xkb_keymap_key_get_syms_by_level   _glfw.wl.xkb.keymap_key_get_syms_by_level</computeroutput></para><para>
Definition at line 177 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a454cb66a6161b4d9fbfde69bf1b1adb1"/>    <section>
    <title>xkb_keymap_key_repeats</title>
<indexterm><primary>xkb_keymap_key_repeats</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_keymap_key_repeats</secondary></indexterm>
<para><computeroutput>#define xkb_keymap_key_repeats   _glfw.wl.xkb.keymap_key_repeats</computeroutput></para><para>
Definition at line 176 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ae00a697007ff6fb26df721434e95043a"/>    <section>
    <title>xkb_keymap_mod_get_index</title>
<indexterm><primary>xkb_keymap_mod_get_index</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_keymap_mod_get_index</secondary></indexterm>
<para><computeroutput>#define xkb_keymap_mod_get_index   _glfw.wl.xkb.keymap_mod_get_index</computeroutput></para><para>
Definition at line 175 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a46b7585bcf515582df56effb765548ff"/>    <section>
    <title>xkb_keymap_new_from_string</title>
<indexterm><primary>xkb_keymap_new_from_string</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_keymap_new_from_string</secondary></indexterm>
<para><computeroutput>#define xkb_keymap_new_from_string   _glfw.wl.xkb.keymap_new_from_string</computeroutput></para><para>
Definition at line 173 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a9707d19b164550101c688f6a8ad4cb56"/>    <section>
    <title>xkb_keymap_unref</title>
<indexterm><primary>xkb_keymap_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_keymap_unref</secondary></indexterm>
<para><computeroutput>#define xkb_keymap_unref   _glfw.wl.xkb.keymap_unref</computeroutput></para><para>
Definition at line 174 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ab1d4db8d90560c06b7ac881b6591eaa0"/>    <section>
    <title>xkb_state_key_get_layout</title>
<indexterm><primary>xkb_state_key_get_layout</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_state_key_get_layout</secondary></indexterm>
<para><computeroutput>#define xkb_state_key_get_layout   _glfw.wl.xkb.state_key_get_layout</computeroutput></para><para>
Definition at line 183 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aae3ce4ad2452936ecc298d83cec75af8"/>    <section>
    <title>xkb_state_key_get_syms</title>
<indexterm><primary>xkb_state_key_get_syms</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_state_key_get_syms</secondary></indexterm>
<para><computeroutput>#define xkb_state_key_get_syms   _glfw.wl.xkb.state_key_get_syms</computeroutput></para><para>
Definition at line 180 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a3d5fc2dfd183f89bba226cdbc168608c"/>    <section>
    <title>xkb_state_new</title>
<indexterm><primary>xkb_state_new</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_state_new</secondary></indexterm>
<para><computeroutput>#define xkb_state_new   _glfw.wl.xkb.state_new</computeroutput></para><para>
Definition at line 178 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aaff941989f1ba31063f6f81f9f34f595"/>    <section>
    <title>xkb_state_serialize_mods</title>
<indexterm><primary>xkb_state_serialize_mods</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_state_serialize_mods</secondary></indexterm>
<para><computeroutput>#define xkb_state_serialize_mods   _glfw.wl.xkb.state_serialize_mods</computeroutput></para><para>
Definition at line 182 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a924ddb1dc7e73e83e207b2a1dc911504"/>    <section>
    <title>xkb_state_unref</title>
<indexterm><primary>xkb_state_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_state_unref</secondary></indexterm>
<para><computeroutput>#define xkb_state_unref   _glfw.wl.xkb.state_unref</computeroutput></para><para>
Definition at line 179 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af6ad24764ac986922fc1040d48fd568a"/>    <section>
    <title>xkb_state_update_mask</title>
<indexterm><primary>xkb_state_update_mask</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>xkb_state_update_mask</secondary></indexterm>
<para><computeroutput>#define xkb_state_update_mask   _glfw.wl.xkb.state_update_mask</computeroutput></para><para>
Definition at line 181 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a6d27a0a23d64e4b5fe1461e366d59b15"/>    <section>
    <title>zwp_confined_pointer_v1_interface</title>
<indexterm><primary>zwp_confined_pointer_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zwp_confined_pointer_v1_interface</secondary></indexterm>
<para><computeroutput>#define zwp_confined_pointer_v1_interface   _glfw_zwp_confined_pointer_v1_interface</computeroutput></para><para>
Definition at line 109 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af08a1d0d2c65bbd769a23c34c4a671bc"/>    <section>
    <title>zwp_idle_inhibit_manager_v1_interface</title>
<indexterm><primary>zwp_idle_inhibit_manager_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zwp_idle_inhibit_manager_v1_interface</secondary></indexterm>
<para><computeroutput>#define zwp_idle_inhibit_manager_v1_interface   _glfw_zwp_idle_inhibit_manager_v1_interface</computeroutput></para><para>
Definition at line 108 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2352d196e1f24b885f4819961b6bc866"/>    <section>
    <title>zwp_idle_inhibitor_v1_interface</title>
<indexterm><primary>zwp_idle_inhibitor_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zwp_idle_inhibitor_v1_interface</secondary></indexterm>
<para><computeroutput>#define zwp_idle_inhibitor_v1_interface   _glfw_zwp_idle_inhibitor_v1_interface</computeroutput></para><para>
Definition at line 107 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a0219ef98d4248f3078a94bc437c256e1"/>    <section>
    <title>zwp_locked_pointer_v1_interface</title>
<indexterm><primary>zwp_locked_pointer_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zwp_locked_pointer_v1_interface</secondary></indexterm>
<para><computeroutput>#define zwp_locked_pointer_v1_interface   _glfw_zwp_locked_pointer_v1_interface</computeroutput></para><para>
Definition at line 110 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a70b96788c2904d81e7068ef89b44552c"/>    <section>
    <title>zwp_pointer_constraints_v1_interface</title>
<indexterm><primary>zwp_pointer_constraints_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zwp_pointer_constraints_v1_interface</secondary></indexterm>
<para><computeroutput>#define zwp_pointer_constraints_v1_interface   _glfw_zwp_pointer_constraints_v1_interface</computeroutput></para><para>
Definition at line 111 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aa4ab0bbd063e0e0b435e9ee7b6dfc8fb"/>    <section>
    <title>zwp_relative_pointer_manager_v1_interface</title>
<indexterm><primary>zwp_relative_pointer_manager_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zwp_relative_pointer_manager_v1_interface</secondary></indexterm>
<para><computeroutput>#define zwp_relative_pointer_manager_v1_interface   _glfw_zwp_relative_pointer_manager_v1_interface</computeroutput></para><para>
Definition at line 113 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aba54c0f0f1a973a60308a4ff2fb9b79b"/>    <section>
    <title>zwp_relative_pointer_v1_interface</title>
<indexterm><primary>zwp_relative_pointer_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zwp_relative_pointer_v1_interface</secondary></indexterm>
<para><computeroutput>#define zwp_relative_pointer_v1_interface   _glfw_zwp_relative_pointer_v1_interface</computeroutput></para><para>
Definition at line 112 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2ce00e098f204e995923b17d483c9c44"/>    <section>
    <title>zxdg_decoration_manager_v1_interface</title>
<indexterm><primary>zxdg_decoration_manager_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zxdg_decoration_manager_v1_interface</secondary></indexterm>
<para><computeroutput>#define zxdg_decoration_manager_v1_interface   _glfw_zxdg_decoration_manager_v1_interface</computeroutput></para><para>
Definition at line 118 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a7ddac5728f1452b0f7207a1c864739d4"/>    <section>
    <title>zxdg_toplevel_decoration_v1_interface</title>
<indexterm><primary>zxdg_toplevel_decoration_v1_interface</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>zxdg_toplevel_decoration_v1_interface</secondary></indexterm>
<para><computeroutput>#define zxdg_toplevel_decoration_v1_interface   _glfw_zxdg_toplevel_decoration_v1_interface</computeroutput></para><para>
Definition at line 117 of file wl_platform.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_wl__platform_8h_1ab9e42e1bf8aaa05d5b515907e683af86"/>    <section>
    <title>_GLFWcursorWayland</title>
<indexterm><primary>_GLFWcursorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFWcursorWayland</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link> <link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link></computeroutput></para>    </section><anchor xml:id="_wl__platform_8h_1a9f07c6758fc7aa2504854077676e7413"/>    <section>
    <title>_GLFWdecorationSideWayland</title>
<indexterm><primary>_GLFWdecorationSideWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFWdecorationSideWayland</secondary></indexterm>
<para><computeroutput>typedef enum <link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link> <link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link></computeroutput></para>    </section><anchor xml:id="_wl__platform_8h_1a55173b590d4140e345ceeb03f906d101"/>    <section>
    <title>_GLFWdecorationWayland</title>
<indexterm><primary>_GLFWdecorationWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFWdecorationWayland</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wdecoration_wayland">_GLFWdecorationWayland</link> <link linkend="_struct___g_l_f_wdecoration_wayland">_GLFWdecorationWayland</link></computeroutput></para>    </section><anchor xml:id="_wl__platform_8h_1aea3fbae5be24849acafc096b9f5eb755"/>    <section>
    <title>_GLFWlibraryWayland</title>
<indexterm><primary>_GLFWlibraryWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFWlibraryWayland</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link> <link linkend="_struct___g_l_f_wlibrary_wayland">_GLFWlibraryWayland</link></computeroutput></para>    </section><anchor xml:id="_wl__platform_8h_1ab91578847da8ca2e148753a63f84d9a0"/>    <section>
    <title>_GLFWmonitorWayland</title>
<indexterm><primary>_GLFWmonitorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFWmonitorWayland</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link> <link linkend="_struct___g_l_f_wmonitor_wayland">_GLFWmonitorWayland</link></computeroutput></para>    </section><anchor xml:id="_wl__platform_8h_1a5deeeabe0fcb994f43b6c2364e02edc4"/>    <section>
    <title>_GLFWwindowWayland</title>
<indexterm><primary>_GLFWwindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFWwindowWayland</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link> <link linkend="_struct___g_l_f_wwindow_wayland">_GLFWwindowWayland</link></computeroutput></para>    </section><anchor xml:id="_wl__platform_8h_1a76222e93358f10e2b01bd5115dc01038"/>    <section>
    <title>PFN_vkCreateWaylandSurfaceKHR</title>
<indexterm><primary>PFN_vkCreateWaylandSurfaceKHR</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_vkCreateWaylandSurfaceKHR</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * PFN_vkCreateWaylandSurfaceKHR) (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link>, const <link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link> *, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *)</computeroutput></para><para>
Definition at line 42 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ab2aa7548ffded3123627790f8bce8c95"/>    <section>
    <title>PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR</title>
<indexterm><primary>PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_vulkan_8h_1ae5d9faf75f583010e32ee49087a15326">VkBool32</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR) (<link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, struct wl_display *)</computeroutput></para><para>
Definition at line 43 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a71881ab6635d2de5a303349e16807430"/>    <section>
    <title>PFN_wl_cursor_image_get_buffer</title>
<indexterm><primary>PFN_wl_cursor_image_get_buffer</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_cursor_image_get_buffer</secondary></indexterm>
<para><computeroutput>typedef struct wl_buffer*(* PFN_wl_cursor_image_get_buffer) (struct <link linkend="_structwl__cursor__image">wl_cursor_image</link> *)</computeroutput></para><para>
Definition at line 145 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a028b3d9313486c63f918b370f4290b46"/>    <section>
    <title>PFN_wl_cursor_theme_destroy</title>
<indexterm><primary>PFN_wl_cursor_theme_destroy</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_cursor_theme_destroy</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_cursor_theme_destroy) (struct wl_cursor_theme *)</computeroutput></para><para>
Definition at line 143 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ad888f8476b9b83ca152e92f6b4d04b50"/>    <section>
    <title>PFN_wl_cursor_theme_get_cursor</title>
<indexterm><primary>PFN_wl_cursor_theme_get_cursor</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_cursor_theme_get_cursor</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structwl__cursor">wl_cursor</link>*(* PFN_wl_cursor_theme_get_cursor) (struct wl_cursor_theme *, const char *)</computeroutput></para><para>
Definition at line 144 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a3d5be4ad6514481271f04e01687ba3cf"/>    <section>
    <title>PFN_wl_cursor_theme_load</title>
<indexterm><primary>PFN_wl_cursor_theme_load</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_cursor_theme_load</secondary></indexterm>
<para><computeroutput>typedef struct wl_cursor_theme*(* PFN_wl_cursor_theme_load) (const char *, int, struct wl_shm *)</computeroutput></para><para>
Definition at line 142 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a059454d3d45c515a1c9769b06f870f1a"/>    <section>
    <title>PFN_wl_display_cancel_read</title>
<indexterm><primary>PFN_wl_display_cancel_read</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_cancel_read</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_display_cancel_read) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</computeroutput></para><para>
Definition at line 48 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1af300d1e95fd8bdf3acc4d79692a8b444"/>    <section>
    <title>PFN_wl_display_connect</title>
<indexterm><primary>PFN_wl_display_connect</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_connect</secondary></indexterm>
<para><computeroutput>typedef struct wl_display*(* PFN_wl_display_connect) (const char *)</computeroutput></para><para>
Definition at line 51 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a884612b7f8d6ac2d1a09d43372c340f8"/>    <section>
    <title>PFN_wl_display_disconnect</title>
<indexterm><primary>PFN_wl_display_disconnect</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_disconnect</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_display_disconnect) (struct wl_display *)</computeroutput></para><para>
Definition at line 52 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ac1a1070aa10fb7385a25d8dcc6e75c75"/>    <section>
    <title>PFN_wl_display_dispatch_pending</title>
<indexterm><primary>PFN_wl_display_dispatch_pending</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_dispatch_pending</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_wl_display_dispatch_pending) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</computeroutput></para><para>
Definition at line 49 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2febf2819b199bcb0ad33bc9ec83ab13"/>    <section>
    <title>PFN_wl_display_flush</title>
<indexterm><primary>PFN_wl_display_flush</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_flush</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_wl_display_flush) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</computeroutput></para><para>
Definition at line 47 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a8043dd7b64a5d5594d4db20613adfb7a"/>    <section>
    <title>PFN_wl_display_get_fd</title>
<indexterm><primary>PFN_wl_display_get_fd</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_get_fd</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_wl_display_get_fd) (struct wl_display *)</computeroutput></para><para>
Definition at line 54 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aaa3bfda091c49bf98074ff95c20be78f"/>    <section>
    <title>PFN_wl_display_prepare_read</title>
<indexterm><primary>PFN_wl_display_prepare_read</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_prepare_read</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_wl_display_prepare_read) (struct wl_display *)</computeroutput></para><para>
Definition at line 55 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a0f078a0719d6f9bbb387265c3db30704"/>    <section>
    <title>PFN_wl_display_read_events</title>
<indexterm><primary>PFN_wl_display_read_events</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_read_events</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_wl_display_read_events) (struct wl_display *<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)</computeroutput></para><para>
Definition at line 50 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ac8941d25e88d5e10f33c5270efc46f45"/>    <section>
    <title>PFN_wl_display_roundtrip</title>
<indexterm><primary>PFN_wl_display_roundtrip</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_display_roundtrip</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_wl_display_roundtrip) (struct wl_display *)</computeroutput></para><para>
Definition at line 53 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a6b577197886e83e6550758fde49fcbf9"/>    <section>
    <title>PFN_wl_egl_window_create</title>
<indexterm><primary>PFN_wl_egl_window_create</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_egl_window_create</secondary></indexterm>
<para><computeroutput>typedef struct wl_egl_window*(* PFN_wl_egl_window_create) (struct wl_surface *, int, int)</computeroutput></para><para>
Definition at line 151 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2727d08bef446572e6f9e26801506ae1"/>    <section>
    <title>PFN_wl_egl_window_destroy</title>
<indexterm><primary>PFN_wl_egl_window_destroy</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_egl_window_destroy</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_egl_window_destroy) (struct wl_egl_window *)</computeroutput></para><para>
Definition at line 152 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1adcf78e57b989ea0e561208099dada945"/>    <section>
    <title>PFN_wl_egl_window_resize</title>
<indexterm><primary>PFN_wl_egl_window_resize</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_egl_window_resize</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_egl_window_resize) (struct wl_egl_window *, int, int, int, int)</computeroutput></para><para>
Definition at line 153 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a425b1cea5c34f65c0fb5fa08b5932a82"/>    <section>
    <title>PFN_wl_proxy_add_listener</title>
<indexterm><primary>PFN_wl_proxy_add_listener</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_add_listener</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_wl_proxy_add_listener) (struct wl_proxy *, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(**)(<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>), <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *)</computeroutput></para><para>
Definition at line 57 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ad7a4e34186cb77594ffbccc472b10928"/>    <section>
    <title>PFN_wl_proxy_destroy</title>
<indexterm><primary>PFN_wl_proxy_destroy</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_destroy</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_proxy_destroy) (struct wl_proxy *)</computeroutput></para><para>
Definition at line 58 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a66f071e0eac6f315abe216dd6e978985"/>    <section>
    <title>PFN_wl_proxy_get_user_data</title>
<indexterm><primary>PFN_wl_proxy_get_user_data</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_get_user_data</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>*(* PFN_wl_proxy_get_user_data) (struct wl_proxy *)</computeroutput></para><para>
Definition at line 61 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aaee9c638becf09cec42feb11c91a5860"/>    <section>
    <title>PFN_wl_proxy_get_version</title>
<indexterm><primary>PFN_wl_proxy_get_version</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_get_version</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>(* PFN_wl_proxy_get_version) (struct wl_proxy *)</computeroutput></para><para>
Definition at line 63 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a1e2c3d1ff026e91762ba9bb04b299e28"/>    <section>
    <title>PFN_wl_proxy_marshal</title>
<indexterm><primary>PFN_wl_proxy_marshal</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_marshal</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_proxy_marshal) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>,...)</computeroutput></para><para>
Definition at line 56 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2a355482006415dd4a3ebdc3d5db319c"/>    <section>
    <title>PFN_wl_proxy_marshal_constructor</title>
<indexterm><primary>PFN_wl_proxy_marshal_constructor</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_marshal_constructor</secondary></indexterm>
<para><computeroutput>typedef struct wl_proxy*(* PFN_wl_proxy_marshal_constructor) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, const struct wl_interface *,...)</computeroutput></para><para>
Definition at line 59 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ac37612cd6f868464f393263dcb5115ce"/>    <section>
    <title>PFN_wl_proxy_marshal_constructor_versioned</title>
<indexterm><primary>PFN_wl_proxy_marshal_constructor_versioned</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_marshal_constructor_versioned</secondary></indexterm>
<para><computeroutput>typedef struct wl_proxy*(* PFN_wl_proxy_marshal_constructor_versioned) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, const struct wl_interface *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>,...)</computeroutput></para><para>
Definition at line 60 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ae6ee6cd4db3115093cb0e3c6fa5e9f8a"/>    <section>
    <title>PFN_wl_proxy_marshal_flags</title>
<indexterm><primary>PFN_wl_proxy_marshal_flags</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_marshal_flags</secondary></indexterm>
<para><computeroutput>typedef struct wl_proxy*(* PFN_wl_proxy_marshal_flags) (struct wl_proxy *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, const struct wl_interface *, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>,...)</computeroutput></para><para>
Definition at line 64 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a1652428fcf022f5c562ac5bd5efc0659"/>    <section>
    <title>PFN_wl_proxy_set_user_data</title>
<indexterm><primary>PFN_wl_proxy_set_user_data</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_wl_proxy_set_user_data</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_wl_proxy_set_user_data) (struct wl_proxy *, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *)</computeroutput></para><para>
Definition at line 62 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a58829e3e18572f5e5e8d7d0349b3f092"/>    <section>
    <title>PFN_xkb_compose_state_feed</title>
<indexterm><primary>PFN_xkb_compose_state_feed</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_compose_state_feed</secondary></indexterm>
<para><computeroutput>typedef enum xkb_compose_feed_result(* PFN_xkb_compose_state_feed) (struct xkb_compose_state *, xkb_keysym_t)</computeroutput></para><para>
Definition at line 189 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a88d4343fefb99b57a83cb2609eebdf87"/>    <section>
    <title>PFN_xkb_compose_state_get_one_sym</title>
<indexterm><primary>PFN_xkb_compose_state_get_one_sym</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_compose_state_get_one_sym</secondary></indexterm>
<para><computeroutput>typedef xkb_keysym_t(* PFN_xkb_compose_state_get_one_sym) (struct xkb_compose_state *)</computeroutput></para><para>
Definition at line 191 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aad8c18022b37e3cd5d8e38a621fa42ed"/>    <section>
    <title>PFN_xkb_compose_state_get_status</title>
<indexterm><primary>PFN_xkb_compose_state_get_status</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_compose_state_get_status</secondary></indexterm>
<para><computeroutput>typedef enum xkb_compose_status(* PFN_xkb_compose_state_get_status) (struct xkb_compose_state *)</computeroutput></para><para>
Definition at line 190 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1acde584df56f61030dd063d5bbf6ac838"/>    <section>
    <title>PFN_xkb_compose_state_new</title>
<indexterm><primary>PFN_xkb_compose_state_new</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_compose_state_new</secondary></indexterm>
<para><computeroutput>typedef struct xkb_compose_state*(* PFN_xkb_compose_state_new) (struct xkb_compose_table *, enum xkb_compose_state_flags)</computeroutput></para><para>
Definition at line 187 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a5b405c88d81a608a1a447ac889f6485b"/>    <section>
    <title>PFN_xkb_compose_state_unref</title>
<indexterm><primary>PFN_xkb_compose_state_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_compose_state_unref</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_xkb_compose_state_unref) (struct xkb_compose_state *)</computeroutput></para><para>
Definition at line 188 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a8a717fe416e52e9d6e5258caeb5281d4"/>    <section>
    <title>PFN_xkb_compose_table_new_from_locale</title>
<indexterm><primary>PFN_xkb_compose_table_new_from_locale</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_compose_table_new_from_locale</secondary></indexterm>
<para><computeroutput>typedef struct xkb_compose_table*(* PFN_xkb_compose_table_new_from_locale) (struct xkb_context *, const char *, enum xkb_compose_compile_flags)</computeroutput></para><para>
Definition at line 185 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a94826943d69f9fce48bb246457692c2e"/>    <section>
    <title>PFN_xkb_compose_table_unref</title>
<indexterm><primary>PFN_xkb_compose_table_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_compose_table_unref</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_xkb_compose_table_unref) (struct xkb_compose_table *)</computeroutput></para><para>
Definition at line 186 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a0f6a5db093091ec57ac908e20bc205df"/>    <section>
    <title>PFN_xkb_context_new</title>
<indexterm><primary>PFN_xkb_context_new</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_context_new</secondary></indexterm>
<para><computeroutput>typedef struct xkb_context*(* PFN_xkb_context_new) (enum xkb_context_flags)</computeroutput></para><para>
Definition at line 158 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aeb826e6dece848b0e71cf98fcf3b6a34"/>    <section>
    <title>PFN_xkb_context_unref</title>
<indexterm><primary>PFN_xkb_context_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_context_unref</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_xkb_context_unref) (struct xkb_context *)</computeroutput></para><para>
Definition at line 159 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a9866b14ec9bf5013c49523c9a71c2660"/>    <section>
    <title>PFN_xkb_keymap_key_get_syms_by_level</title>
<indexterm><primary>PFN_xkb_keymap_key_get_syms_by_level</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_keymap_key_get_syms_by_level</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_xkb_keymap_key_get_syms_by_level) (struct xkb_keymap *, xkb_keycode_t, xkb_layout_index_t, xkb_level_index_t, const xkb_keysym_t **)</computeroutput></para><para>
Definition at line 164 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a10dd25305b8984d748e0c35db025106e"/>    <section>
    <title>PFN_xkb_keymap_key_repeats</title>
<indexterm><primary>PFN_xkb_keymap_key_repeats</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_keymap_key_repeats</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_xkb_keymap_key_repeats) (struct xkb_keymap *, xkb_keycode_t)</computeroutput></para><para>
Definition at line 163 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a41d7cec916693645a46216cec1c0c6d7"/>    <section>
    <title>PFN_xkb_keymap_mod_get_index</title>
<indexterm><primary>PFN_xkb_keymap_mod_get_index</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_keymap_mod_get_index</secondary></indexterm>
<para><computeroutput>typedef xkb_mod_index_t(* PFN_xkb_keymap_mod_get_index) (struct xkb_keymap *, const char *)</computeroutput></para><para>
Definition at line 162 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a7b808d4fcf4963467503704373c5cdd7"/>    <section>
    <title>PFN_xkb_keymap_new_from_string</title>
<indexterm><primary>PFN_xkb_keymap_new_from_string</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_keymap_new_from_string</secondary></indexterm>
<para><computeroutput>typedef struct xkb_keymap*(* PFN_xkb_keymap_new_from_string) (struct xkb_context *, const char *, enum xkb_keymap_format, enum xkb_keymap_compile_flags)</computeroutput></para><para>
Definition at line 160 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1aa0778d7d934b96bf500f046368de1f45"/>    <section>
    <title>PFN_xkb_keymap_unref</title>
<indexterm><primary>PFN_xkb_keymap_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_keymap_unref</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_xkb_keymap_unref) (struct xkb_keymap *)</computeroutput></para><para>
Definition at line 161 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a1ddf8a57641c77805f0aedf68d7c715e"/>    <section>
    <title>PFN_xkb_state_key_get_layout</title>
<indexterm><primary>PFN_xkb_state_key_get_layout</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_state_key_get_layout</secondary></indexterm>
<para><computeroutput>typedef xkb_layout_index_t(* PFN_xkb_state_key_get_layout) (struct xkb_state *, xkb_keycode_t)</computeroutput></para><para>
Definition at line 170 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1ac93bb3679df2634f72bb35e1587b0459"/>    <section>
    <title>PFN_xkb_state_key_get_syms</title>
<indexterm><primary>PFN_xkb_state_key_get_syms</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_state_key_get_syms</secondary></indexterm>
<para><computeroutput>typedef int(* PFN_xkb_state_key_get_syms) (struct xkb_state *, xkb_keycode_t, const xkb_keysym_t **)</computeroutput></para><para>
Definition at line 167 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a2a900ea023b56cb0c6ec6feaf6b45854"/>    <section>
    <title>PFN_xkb_state_new</title>
<indexterm><primary>PFN_xkb_state_new</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_state_new</secondary></indexterm>
<para><computeroutput>typedef struct xkb_state*(* PFN_xkb_state_new) (struct xkb_keymap *)</computeroutput></para><para>
Definition at line 165 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a963602febce41dbde7c037aaba7b7c0d"/>    <section>
    <title>PFN_xkb_state_serialize_mods</title>
<indexterm><primary>PFN_xkb_state_serialize_mods</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_state_serialize_mods</secondary></indexterm>
<para><computeroutput>typedef xkb_mod_mask_t(* PFN_xkb_state_serialize_mods) (struct xkb_state *, enum xkb_state_component)</computeroutput></para><para>
Definition at line 169 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a04a57f9f8326bd39a1525e4e0edd4951"/>    <section>
    <title>PFN_xkb_state_unref</title>
<indexterm><primary>PFN_xkb_state_unref</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_state_unref</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>(* PFN_xkb_state_unref) (struct xkb_state *)</computeroutput></para><para>
Definition at line 166 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a872e4657e3e1127caeb678c0b253b4f0"/>    <section>
    <title>PFN_xkb_state_update_mask</title>
<indexterm><primary>PFN_xkb_state_update_mask</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>PFN_xkb_state_update_mask</secondary></indexterm>
<para><computeroutput>typedef enum xkb_state_component(* PFN_xkb_state_update_mask) (struct xkb_state *, xkb_mod_mask_t, xkb_mod_mask_t, xkb_mod_mask_t, xkb_layout_index_t, xkb_layout_index_t, xkb_layout_index_t)</computeroutput></para><para>
Definition at line 168 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a36e579e4f2092ce7a427191251c5cc33"/>    <section>
    <title>VkWaylandSurfaceCreateFlagsKHR</title>
<indexterm><primary>VkWaylandSurfaceCreateFlagsKHR</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>VkWaylandSurfaceCreateFlagsKHR</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_vulkan_8h_1abb605a7700670dd8420cc3841b939444">VkFlags</link> <link linkend="_wl__platform_8h_1a36e579e4f2092ce7a427191251c5cc33">VkWaylandSurfaceCreateFlagsKHR</link></computeroutput></para><para>
Definition at line 31 of file wl_platform.h.</para>
    </section><anchor xml:id="_wl__platform_8h_1a1806f7a43bfa7c3b5dccc83f9a110f9f"/>    <section>
    <title>VkWaylandSurfaceCreateInfoKHR</title>
<indexterm><primary>VkWaylandSurfaceCreateInfoKHR</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>VkWaylandSurfaceCreateInfoKHR</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link> <link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link></computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac"/>    <section>
    <title>_GLFWdecorationSideWayland</title>
<indexterm><primary>_GLFWdecorationSideWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_GLFWdecorationSideWayland</secondary></indexterm>
<para><computeroutput>enum <link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>mainWindow</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>mainWindow</secondary></indexterm>
<anchor xml:id="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acab46a673d9ca7e2f82c3cdd4cc7118e6b"/>mainWindow</entry><entry></entry></row><row><entry><indexterm><primary>topDecoration</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>topDecoration</secondary></indexterm>
<anchor xml:id="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca7d386fd3327b79f545efc42b71938684"/>topDecoration</entry><entry></entry></row><row><entry><indexterm><primary>leftDecoration</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>leftDecoration</secondary></indexterm>
<anchor xml:id="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca9a7153928697fcf33642ce73e6d4c3e4"/>leftDecoration</entry><entry></entry></row><row><entry><indexterm><primary>rightDecoration</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>rightDecoration</secondary></indexterm>
<anchor xml:id="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acaa31414385e2e07a6c5b5e1bc3ae93dfc"/>rightDecoration</entry><entry></entry></row><row><entry><indexterm><primary>bottomDecoration</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>bottomDecoration</secondary></indexterm>
<anchor xml:id="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca3393de96e9dcdda8d91fcfbbc616b550"/>bottomDecoration</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 205 of file wl_platform.h.</para>
<programlisting>206 {
207 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acab46a673d9ca7e2f82c3cdd4cc7118e6b">mainWindow</link>,
208 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca7d386fd3327b79f545efc42b71938684">topDecoration</link>,
209 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca9a7153928697fcf33642ce73e6d4c3e4">leftDecoration</link>,
210 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acaa31414385e2e07a6c5b5e1bc3ae93dfc">rightDecoration</link>,
211 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1aca3393de96e9dcdda8d91fcfbbc616b550">bottomDecoration</link>,
212 }&#32;<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1ac">_GLFWdecorationSideWayland</link>;
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_wl__platform_8h_1a4061b6ec759c796455591e25a0de8c4b"/>    <section>
    <title>_glfwAddOutputWayland()</title>
<indexterm><primary>_glfwAddOutputWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwAddOutputWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwAddOutputWayland (<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> name, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> version)</computeroutput></para><para>
Definition at line 123 of file wl_monitor.c.</para>
<programlisting>124 {
125 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>&#32;*monitor;
126 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_output&#32;*<link linkend="_structoutput">output</link>;
127 
128 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespaceconf_1ade15c5b54093b64d7c428ec19ca5b1cb">version</link>&#32;&lt;&#32;2)
129 &#32;&#32;&#32;&#32;{
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Unsupported&#32;output&#32;interface&#32;version&quot;</emphasis>);
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
133 &#32;&#32;&#32;&#32;}
134 
135 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;actual&#32;name&#32;of&#32;this&#32;output&#32;will&#32;be&#32;set&#32;in&#32;the&#32;geometry&#32;handler.</emphasis>
136 &#32;&#32;&#32;&#32;monitor&#32;=&#32;<link linkend="_internal_8h_1aba9010067229bd447389b85b22f15b72">_glfwAllocMonitor</link>(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;0,&#32;0);
137 
138 &#32;&#32;&#32;&#32;<link linkend="_structoutput">output</link>&#32;=&#32;wl_registry_bind(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.registry,
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>,
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_wl__platform_8h_1a872ee2ea6c856e5d514c00c4f7769c59">wl_output_interface</link>,
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2);
142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_structoutput">output</link>)
143 &#32;&#32;&#32;&#32;{
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a5555e8488ac56b446d0a28d3330666f6">_glfwFreeMonitor</link>(monitor);
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
146 &#32;&#32;&#32;&#32;}
147 
148 &#32;&#32;&#32;&#32;monitor-&gt;wl.scale&#32;=&#32;1;
149 &#32;&#32;&#32;&#32;monitor-&gt;wl.output&#32;=&#32;<link linkend="_structoutput">output</link>;
150 &#32;&#32;&#32;&#32;monitor-&gt;wl.<link linkend="_struct___g_l_f_wmonitor_1ad497d3ab00f840ad99f62b3803755b12">name</link>&#32;=&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>;
151 
152 &#32;&#32;&#32;&#32;wl_output_add_listener(<link linkend="_structoutput">output</link>,&#32;&amp;outputListener,&#32;monitor);
153 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aa808bd5a1ba23557d20738142c2066e7"/>    <section>
    <title>_glfwConnectWayland()</title>
<indexterm><primary>_glfwConnectWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwConnectWayland</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwConnectWayland (int platformID, <link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link> * platform)</computeroutput></para><para>
Definition at line 1032 of file wl_init.c.</para>
<programlisting>1033 {
1034 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link>&#32;wayland&#32;=
1035 &#32;&#32;&#32;&#32;{
1036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__init_1gac4b08906a3cbf26c518a4a543eedd740">GLFW_PLATFORM_WAYLAND</link>,
1037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__init_8c_1a8d640825daae6f39a0c20edba245470d">_glfwInitWayland</link>,
1038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__init_8c_1a21e32d7cde0c918c630329a1cde99f10">_glfwTerminateWayland</link>,
1039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a68e7966431b3829e09186d88c057e683">_glfwGetCursorPosWayland</link>,
1040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1aab3ae730f795e2f68b395f1c0f7694c1">_glfwSetCursorPosWayland</link>,
1041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ae993bd14d7db090c84fb9799fc556bbd">_glfwSetCursorModeWayland</link>,
1042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1aeb3438865c89b17a2142cfc4509dbd28">_glfwSetRawMouseMotionWayland</link>,
1043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1aa0c6e411bf8eef4b73bc98e0974f2a78">_glfwRawMouseMotionSupportedWayland</link>,
1044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1abdb1b358173a9cd27ed43e2492c40c20">_glfwCreateCursorWayland</link>,
1045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1aadea2d69e02bfba04cf90e07501aa467">_glfwCreateStandardCursorWayland</link>,
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ac215aeab29ad474956c27f4f6ddfc65a">_glfwDestroyCursorWayland</link>,
1047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1aabccf38d8d6f6e29e4a63345a850bfa9">_glfwSetCursorWayland</link>,
1048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a066d33db2119fb1bba6a5127abd3530c">_glfwGetScancodeNameWayland</link>,
1049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a3e2e4e589e75df85898b33ff459f60ee">_glfwGetKeyScancodeWayland</link>,
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a74f40e21bcc7f5a646ecc5f80f25a6c3">_glfwSetClipboardStringWayland</link>,
1051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a491fcd8a56c175d24dc286660fe7475b">_glfwGetClipboardStringWayland</link>,
1052 <emphasis role="preprocessor">#if&#32;defined(__linux__)</emphasis>
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linux__joystick_8c_1a17dc11e9772c08f5afdbe17d6830a8f5">_glfwInitJoysticksLinux</link>,
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linux__joystick_8c_1a64271879f7bf9f6a9e9631310a7e75f1">_glfwTerminateJoysticksLinux</link>,
1055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linux__joystick_8c_1a399ffcc99f12447944f2e7c2df237940">_glfwPollJoystickLinux</link>,
1056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linux__joystick_8c_1a3a9d5c327233cb7a3ead13f06928180d">_glfwGetMappingNameLinux</link>,
1057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linux__joystick_8c_1a4cf7ebdca81871f2a190618877764aa3">_glfwUpdateGamepadGUIDLinux</link>,
1058 <emphasis role="preprocessor">#else</emphasis>
1059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_null__joystick_8c_1a708c96026644a7d2ab0b026911462616">_glfwInitJoysticksNull</link>,
1060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_null__joystick_8c_1af9151a206b9a9d8a0af0f51a12ab72fc">_glfwTerminateJoysticksNull</link>,
1061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_null__joystick_8c_1afebb7d158999e7225a3be48fe36005c7">_glfwPollJoystickNull</link>,
1062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_null__joystick_8c_1a1a02177d4c3e4dc7558203c00df1912b">_glfwGetMappingNameNull</link>,
1063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_null__joystick_8c_1a7d51d60bb59d35cb3e0af3782716f585">_glfwUpdateGamepadGUIDNull</link>,
1064 <emphasis role="preprocessor">#endif</emphasis>
1065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1acaaad2590b0a15c2588e3d9f12c79863">_glfwFreeMonitorWayland</link>,
1066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1a35f10d415428b18f4a8d83e5e308f87f">_glfwGetMonitorPosWayland</link>,
1067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1ad2feca038ef5480163f360d16b7f6f4b">_glfwGetMonitorContentScaleWayland</link>,
1068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1afce0463dcba6f72acf3127c094635b47">_glfwGetMonitorWorkareaWayland</link>,
1069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1ab8c6631cf6c4432d0c4d8f10f4fb90fb">_glfwGetVideoModesWayland</link>,
1070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1aabd466779c94e6b0bf54f6fece70027c">_glfwGetVideoModeWayland</link>,
1071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1a70e276054b29b00bb118f4261643c428">_glfwGetGammaRampWayland</link>,
1072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__monitor_8c_1afa0e67469f56d48d100cfd1cb1ff25bc">_glfwSetGammaRampWayland</link>,
1073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a8fbd5336c54afc9760a89acca1b5bd20">_glfwCreateWindowWayland</link>,
1074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a4f9e23a94f70832b66ea4ff6f7e6c98d">_glfwDestroyWindowWayland</link>,
1075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a2a03cb3eb1fa3720991ad2503dd65e2a">_glfwSetWindowTitleWayland</link>,
1076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1af3bdf666499b335663748945d01b1aab">_glfwSetWindowIconWayland</link>,
1077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a325fef5dd107caef5a4620ec0e5ee9bd">_glfwGetWindowPosWayland</link>,
1078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a5adb7549f1afecf80241a68fe7d2f2e0">_glfwSetWindowPosWayland</link>,
1079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a7139656b9b92a558042462c05e71f17e">_glfwGetWindowSizeWayland</link>,
1080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a782e4e77e16e03c5340748e43e808828">_glfwSetWindowSizeWayland</link>,
1081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1acd2b24bb6d3dc8bf27de6306a5d5397d">_glfwSetWindowSizeLimitsWayland</link>,
1082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a67850a44f6265bfa151ef3e3637bca55">_glfwSetWindowAspectRatioWayland</link>,
1083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1afa69ff28fa47d232843f620120391e97">_glfwGetFramebufferSizeWayland</link>,
1084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a1c0713597287aec915fa764efdebf1f9">_glfwGetWindowFrameSizeWayland</link>,
1085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ab3e8d510f751fca3c9b60aa03d321cba">_glfwGetWindowContentScaleWayland</link>,
1086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a2786524a443b7f4a2ff53055366e1169">_glfwIconifyWindowWayland</link>,
1087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a25c9fe00185d9a1b8badf038b7634b88">_glfwRestoreWindowWayland</link>,
1088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a8dcc43854cfabe4d324154d2eeebd44e">_glfwMaximizeWindowWayland</link>,
1089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a7a956e757e29f06d5efcae33b58025cb">_glfwShowWindowWayland</link>,
1090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ad519388eb25d04c1a4db2df34169efb4">_glfwHideWindowWayland</link>,
1091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a8a1b249be1215f514f923f91656030c3">_glfwRequestWindowAttentionWayland</link>,
1092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a29aeccafd183ea2e1f5bab9a44ad6122">_glfwFocusWindowWayland</link>,
1093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a76e4715c3d943636ba1b71afea0c97c2">_glfwSetWindowMonitorWayland</link>,
1094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ab0d72e6bf663506ff3f138bc670b2f6c">_glfwWindowFocusedWayland</link>,
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a44752c656c8cee3498776b851285dca6">_glfwWindowIconifiedWayland</link>,
1096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1abb9d2bf1aac035ff3ae3abcc9e0a7f09">_glfwWindowVisibleWayland</link>,
1097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a7676d7f4167b65f29aedf393e14174ed">_glfwWindowMaximizedWayland</link>,
1098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1af427fb6a233af50a51858a9908d196fb">_glfwWindowHoveredWayland</link>,
1099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a2a78a10b4fa6a214a2bebf4f1ec9b868">_glfwFramebufferTransparentWayland</link>,
1100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a741ad4527adc24d5f6732ac27fa32678">_glfwGetWindowOpacityWayland</link>,
1101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1aa7d932102710313b7cc131d45413cd06">_glfwSetWindowResizableWayland</link>,
1102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1afcacd9ea3cb285c1266871d13a723e4c">_glfwSetWindowDecoratedWayland</link>,
1103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1aebcd0db81b67e416f775e4b0d8facdc1">_glfwSetWindowFloatingWayland</link>,
1104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a43f0c40c30c7bc0216b51cfae59c3629">_glfwSetWindowOpacityWayland</link>,
1105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1acad95c7e85177725f95463ffe86015d4">_glfwSetWindowMousePassthroughWayland</link>,
1106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a7a315f4b4c3263efc0960094698de618">_glfwPollEventsWayland</link>,
1107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a7cc624f3d8429b0d35ad163092b4821a">_glfwWaitEventsWayland</link>,
1108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a43d44933860ce6e5802733777edae04b">_glfwWaitEventsTimeoutWayland</link>,
1109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a34984c3cc558a291b1721288c8b5ebe6">_glfwPostEmptyEventWayland</link>,
1110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ad3a432eeab11d12463568f267ba0dc59">_glfwGetEGLPlatformWayland</link>,
1111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a504e09d478703e56da9a9b8204bdddd5">_glfwGetEGLNativeDisplayWayland</link>,
1112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a1aa2aacf3bb7726a0cb96c138cda4f43">_glfwGetEGLNativeWindowWayland</link>,
1113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a82b45703386cfc7543957d2160b482a5">_glfwGetRequiredInstanceExtensionsWayland</link>,
1114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a5b300bf0217ad4d0c73c7c44eb53062d">_glfwGetPhysicalDevicePresentationSupportWayland</link>,
1115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a88b24d7cb3bc64abfc826fd23cf17ad4">_glfwCreateWindowSurfaceWayland</link>,
1116 &#32;&#32;&#32;&#32;};
1117 
1118 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;module&#32;=&#32;<link linkend="_internal_8h_1a0ca69d860ad190bdb5beab6de9160842">_glfwPlatformLoadModule</link>(<emphasis role="stringliteral">&quot;libwayland-client.so.0&quot;</emphasis>);
1119 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!module)
1120 &#32;&#32;&#32;&#32;{
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platformID&#32;==&#32;<link linkend="_group__init_1gac4b08906a3cbf26c518a4a543eedd740">GLFW_PLATFORM_WAYLAND</link>)
1122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;open&#32;libwayland-client&quot;</emphasis>);
1125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1126 
1127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1128 &#32;&#32;&#32;&#32;}
1129 
1130 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1af300d1e95fd8bdf3acc4d79692a8b444">PFN_wl_display_connect</link>&#32;wl_display_connect&#32;=&#32;(<link linkend="_wl__platform_8h_1af300d1e95fd8bdf3acc4d79692a8b444">PFN_wl_display_connect</link>)
1131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(module,&#32;<emphasis role="stringliteral">&quot;wl_display_connect&quot;</emphasis>);
1132 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!wl_display_connect)
1133 &#32;&#32;&#32;&#32;{
1134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platformID&#32;==&#32;<link linkend="_group__init_1gac4b08906a3cbf26c518a4a543eedd740">GLFW_PLATFORM_WAYLAND</link>)
1135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;load&#32;libwayland-client&#32;entry&#32;point&quot;</emphasis>);
1138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1139 
1140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ad4b9e48b150850f6ee00874f85036715">_glfwPlatformFreeModule</link>(module);
1141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1142 &#32;&#32;&#32;&#32;}
1143 
1144 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_display*&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>&#32;=&#32;wl_display_connect(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>)
1146 &#32;&#32;&#32;&#32;{
1147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(platformID&#32;==&#32;<link linkend="_group__init_1gac4b08906a3cbf26c518a4a543eedd740">GLFW_PLATFORM_WAYLAND</link>)
1148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;connect&#32;to&#32;display&quot;</emphasis>);
1149 
1150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ad4b9e48b150850f6ee00874f85036715">_glfwPlatformFreeModule</link>(module);
1151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1152 &#32;&#32;&#32;&#32;}
1153 
1154 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>&#32;=&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>;
1155 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>&#32;=&#32;module;
1156 
1157 &#32;&#32;&#32;&#32;*platform&#32;=&#32;wayland;
1158 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1159 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1abdb1b358173a9cd27ed43e2492c40c20"/>    <section>
    <title>_glfwCreateCursorWayland()</title>
<indexterm><primary>_glfwCreateCursorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwCreateCursorWayland</secondary></indexterm>
<para><computeroutput>int _glfwCreateCursorWayland (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * image, int xhot, int yhot)</computeroutput></para><para>
Definition at line 1256 of file wl_window.c.</para>
<programlisting>1259 {
1260 &#32;&#32;&#32;&#32;cursor-&gt;wl.buffer&#32;=&#32;createShmBuffer(<link linkend="_structimage">image</link>);
1261 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;wl.buffer)
1262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1263 
1264 &#32;&#32;&#32;&#32;cursor-&gt;wl.width&#32;=&#32;<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1a42ecfe2675278f6b7e70033e3ff89e4a">width</link>;
1265 &#32;&#32;&#32;&#32;cursor-&gt;wl.height&#32;=&#32;<link linkend="_structimage">image</link>-&gt;<link linkend="_structimage_1aa478e4be0fe527274f9233cc11ec71e9">height</link>;
1266 &#32;&#32;&#32;&#32;cursor-&gt;wl.xhot&#32;=&#32;xhot;
1267 &#32;&#32;&#32;&#32;cursor-&gt;wl.yhot&#32;=&#32;yhot;
1268 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1269 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aadea2d69e02bfba04cf90e07501aa467"/>    <section>
    <title>_glfwCreateStandardCursorWayland()</title>
<indexterm><primary>_glfwCreateStandardCursorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwCreateStandardCursorWayland</secondary></indexterm>
<para><computeroutput>int _glfwCreateStandardCursorWayland (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, int shape)</computeroutput></para><para>
Definition at line 1271 of file wl_window.c.</para>
<programlisting>1272 {
1273 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1274 
1275 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Try&#32;the&#32;XDG&#32;names&#32;first</emphasis>
1276 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(shape)
1277 &#32;&#32;&#32;&#32;{
1278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a">GLFW_ARROW_CURSOR</link>:
1279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;default&quot;</emphasis>;
1280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga36185f4375eaada1b04e431244774c86">GLFW_IBEAM_CURSOR</link>:
1282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;text&quot;</emphasis>;
1283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22">GLFW_CROSSHAIR_CURSOR</link>:
1285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;crosshair&quot;</emphasis>;
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0">GLFW_POINTING_HAND_CURSOR</link>:
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;pointer&quot;</emphasis>;
1289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad">GLFW_RESIZE_EW_CURSOR</link>:
1291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;ew-resize&quot;</emphasis>;
1292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388">GLFW_RESIZE_NS_CURSOR</link>:
1294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;ns-resize&quot;</emphasis>;
1295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da">GLFW_RESIZE_NWSE_CURSOR</link>:
1297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;nwse-resize&quot;</emphasis>;
1298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gab06bba3b407f92807ba9b48de667a323">GLFW_RESIZE_NESW_CURSOR</link>:
1300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;nesw-resize&quot;</emphasis>;
1301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d">GLFW_RESIZE_ALL_CURSOR</link>:
1303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;all-scroll&quot;</emphasis>;
1304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga297c503095b034bc8891393b637844b1">GLFW_NOT_ALLOWED_CURSOR</link>:
1306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;not-allowed&quot;</emphasis>;
1307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1308 &#32;&#32;&#32;&#32;}
1309 
1310 &#32;&#32;&#32;&#32;cursor-&gt;wl.cursor&#32;=&#32;<link linkend="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f">wl_cursor_theme_get_cursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTheme,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>);
1311 
1312 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI)
1313 &#32;&#32;&#32;&#32;{
1314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;wl.cursorHiDPI&#32;=
1315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f">wl_cursor_theme_get_cursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>);
1316 &#32;&#32;&#32;&#32;}
1317 
1318 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;wl.cursor)
1319 &#32;&#32;&#32;&#32;{
1320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fall&#32;back&#32;to&#32;the&#32;core&#32;X11&#32;names</emphasis>
1321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(shape)
1322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a">GLFW_ARROW_CURSOR</link>:
1324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;left_ptr&quot;</emphasis>;
1325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga36185f4375eaada1b04e431244774c86">GLFW_IBEAM_CURSOR</link>:
1327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;xterm&quot;</emphasis>;
1328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22">GLFW_CROSSHAIR_CURSOR</link>:
1330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;crosshair&quot;</emphasis>;
1331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0">GLFW_POINTING_HAND_CURSOR</link>:
1333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;hand2&quot;</emphasis>;
1334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad">GLFW_RESIZE_EW_CURSOR</link>:
1336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;sb_h_double_arrow&quot;</emphasis>;
1337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388">GLFW_RESIZE_NS_CURSOR</link>:
1339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;sb_v_double_arrow&quot;</emphasis>;
1340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d">GLFW_RESIZE_ALL_CURSOR</link>:
1342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;fleur&quot;</emphasis>;
1343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
1345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga09d6943923a70ddef3a085f5baee786c">GLFW_CURSOR_UNAVAILABLE</link>,
1346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Standard&#32;cursor&#32;shape&#32;unavailable&quot;</emphasis>);
1347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1349 
1350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;wl.cursor&#32;=&#32;<link linkend="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f">wl_cursor_theme_get_cursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTheme,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>);
1351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;wl.cursor)
1352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;create&#32;standard&#32;cursor&#32;\&quot;%s\&quot;&quot;</emphasis>,
1355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>);
1356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1358 
1359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI)
1360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;wl.cursorHiDPI)
1362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;wl.cursorHiDPI&#32;=
1364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f">wl_cursor_theme_get_cursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>);
1365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1367 &#32;&#32;&#32;&#32;}
1368 
1369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1370 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a88b24d7cb3bc64abfc826fd23cf17ad4"/>    <section>
    <title>_glfwCreateWindowSurfaceWayland()</title>
<indexterm><primary>_glfwCreateWindowSurfaceWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwCreateWindowSurfaceWayland</secondary></indexterm>
<para><computeroutput><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> _glfwCreateWindowSurfaceWayland (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> * allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> * surface)</computeroutput></para><para>
Definition at line 1801 of file wl_window.c.</para>
<programlisting>1805 {
1806 &#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>&#32;err;
1807 &#32;&#32;&#32;&#32;<link linkend="_struct_vk_wayland_surface_create_info_k_h_r">VkWaylandSurfaceCreateInfoKHR</link>&#32;sci;
1808 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a76222e93358f10e2b01bd5115dc01038">PFN_vkCreateWaylandSurfaceKHR</link>&#32;vkCreateWaylandSurfaceKHR;
1809 
1810 &#32;&#32;&#32;&#32;vkCreateWaylandSurfaceKHR&#32;=&#32;(<link linkend="_wl__platform_8h_1a76222e93358f10e2b01bd5115dc01038">PFN_vkCreateWaylandSurfaceKHR</link>)
1811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkCreateWaylandSurfaceKHR&quot;</emphasis>);
1812 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkCreateWaylandSurfaceKHR)
1813 &#32;&#32;&#32;&#32;{
1814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
1815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_wayland_surface&#32;extension&quot;</emphasis>);
1816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
1817 &#32;&#32;&#32;&#32;}
1818 
1819 &#32;&#32;&#32;&#32;memset(&amp;sci,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(sci));
1820 &#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1adcee5594c6de411fcf6c612c40ddf995">sType</link>&#32;=&#32;<link linkend="_internal_8h_1aff9f2b99398eb80a2b5a146bc5534ce8a70b959bba54ca9729663349ce3442903">VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR</link>;
1821 &#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1a4f49bbd03fe6e25deca11749756af037">display</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>;
1822 &#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_wayland_surface_create_info_k_h_r_1ac980b3618f9e9b7c741d0b85f351ff02">surface</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface;
1823 
1824 &#32;&#32;&#32;&#32;err&#32;=&#32;vkCreateWaylandSurfaceKHR(instance,&#32;&amp;sci,&#32;allocator,&#32;surface);
1825 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err)
1826 &#32;&#32;&#32;&#32;{
1827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;create&#32;Vulkan&#32;surface:&#32;%s&quot;</emphasis>,
1829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a512b47c0edcaaf41a4f70bfc8d4d78a7">_glfwGetVulkanResultString</link>(err));
1830 &#32;&#32;&#32;&#32;}
1831 
1832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
1833 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a8fbd5336c54afc9760a89acca1b5bd20"/>    <section>
    <title>_glfwCreateWindowWayland()</title>
<indexterm><primary>_glfwCreateWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwCreateWindowWayland</secondary></indexterm>
<para><computeroutput>int _glfwCreateWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> * wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> * ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> * fbconfig)</computeroutput></para><para>
Definition at line 792 of file wl_window.c.</para>
<programlisting>796 {
797 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!createSurface(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;wndconfig,&#32;fbconfig))
798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
799 
800 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;!=&#32;<link linkend="_glfw3_8h_1a8f6dcdc968d214ff14779564f1389264">GLFW_NO_API</link>)
801 &#32;&#32;&#32;&#32;{
802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a03cf65c9ab01fc8b872ba58842c531c9">GLFW_EGL_CONTEXT_API</link>&#32;||
803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a0494c9bfd3f584ab41e6dbeeaa0e6a19">GLFW_NATIVE_CONTEXT_API</link>)
804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1ad83def5c7af30c3bfcc9371712ba96ac">_glfwInitEGL</link>())
806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1adfb1d7aa925810c45a2ef4efc268c2fe">_glfwCreateContextEGL</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1afd34a473af9fa81f317910ea371b19e3">GLFW_OSMESA_CONTEXT_API</link>)
811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a9dd1594b1f8991f90844fbeb4a664163">_glfwInitOSMesa</link>())
813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a59950232b3b545e1fa750f6bd7d46201">_glfwCreateContextOSMesa</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
817 &#32;&#32;&#32;&#32;}
818 
819 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
820 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1ac215aeab29ad474956c27f4f6ddfc65a"/>    <section>
    <title>_glfwDestroyCursorWayland()</title>
<indexterm><primary>_glfwDestroyCursorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwDestroyCursorWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyCursorWayland (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 1372 of file wl_window.c.</para>
<programlisting>1373 {
1374 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&apos;s&#32;a&#32;standard&#32;cursor&#32;we&#32;don&apos;t&#32;need&#32;to&#32;do&#32;anything&#32;here</emphasis>
1375 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor-&gt;wl.cursor)
1376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1377 
1378 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor-&gt;wl.buffer)
1379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_buffer_destroy(cursor-&gt;wl.buffer);
1380 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a4f9e23a94f70832b66ea4ff6f7e6c98d"/>    <section>
    <title>_glfwDestroyWindowWayland()</title>
<indexterm><primary>_glfwDestroyWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwDestroyWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 822 of file wl_window.c.</para>
<programlisting>823 {
824 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;==&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointerFocus)
825 &#32;&#32;&#32;&#32;{
826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointerFocus&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1a507361a8b8610b4daee7e83aa056f339">_glfwInputCursorEnter</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>);
828 &#32;&#32;&#32;&#32;}
829 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;==&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keyboardFocus)
830 &#32;&#32;&#32;&#32;{
831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keyboardFocus&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1afb9ff9f75dd4d2dade4600dc38e8715e">_glfwInputWindowFocus</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>);
833 &#32;&#32;&#32;&#32;}
834 
835 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.idleInhibitor)
836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zwp_idle_inhibitor_v1_destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.idleInhibitor);
837 
838 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy)
839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
840 
841 &#32;&#32;&#32;&#32;destroyDecorations(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
842 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.decoration)
843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zxdg_toplevel_decoration_v1_destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.decoration);
844 
845 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.decorations.buffer)
846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_buffer_destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.decorations.buffer);
847 
848 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.native)
849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1adf173779ebc5cf85253a4d34918fd2cb">wl_egl_window_destroy</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.native);
850 
851 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel);
853 
854 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.surface)
855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_surface_destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.surface);
856 
857 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface)
858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface);
859 
860 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.title);
861 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.monitors);
862 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a29aeccafd183ea2e1f5bab9a44ad6122"/>    <section>
    <title>_glfwFocusWindowWayland()</title>
<indexterm><primary>_glfwFocusWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwFocusWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwFocusWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1032 of file wl_window.c.</para>
<programlisting>1033 {
1034 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
1035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;The&#32;platform&#32;does&#32;not&#32;support&#32;setting&#32;the&#32;input&#32;focus&quot;</emphasis>);
1036 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a2a78a10b4fa6a214a2bebf4f1ec9b868"/>    <section>
    <title>_glfwFramebufferTransparentWayland()</title>
<indexterm><primary>_glfwFramebufferTransparentWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwFramebufferTransparentWayland</secondary></indexterm>
<para><computeroutput>int _glfwFramebufferTransparentWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1086 of file wl_window.c.</para>
<programlisting>1087 {
1088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.transparent;
1089 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1acaaad2590b0a15c2588e3d9f12c79863"/>    <section>
    <title>_glfwFreeMonitorWayland()</title>
<indexterm><primary>_glfwFreeMonitorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwFreeMonitorWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwFreeMonitorWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor)</computeroutput></para><para>
Definition at line 160 of file wl_monitor.c.</para>
<programlisting>161 {
162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;wl.output)
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_output_destroy(monitor-&gt;wl.output);
164 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a491fcd8a56c175d24dc286660fe7475b"/>    <section>
    <title>_glfwGetClipboardStringWayland()</title>
<indexterm><primary>_glfwGetClipboardStringWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetClipboardStringWayland</secondary></indexterm>
<para><computeroutput>const char* _glfwGetClipboardStringWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1687 of file wl_window.c.</para>
<programlisting>1688 {
1689 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fds[2];
1690 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ret;
1691 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>&#32;=&#32;0;
1692 
1693 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataOffer)
1694 &#32;&#32;&#32;&#32;{
1695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga196e125ef261d94184e2b55c05762f14">GLFW_FORMAT_UNAVAILABLE</link>,
1696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;No&#32;clipboard&#32;data&#32;has&#32;been&#32;sent&#32;yet&quot;</emphasis>);
1697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1698 &#32;&#32;&#32;&#32;}
1699 
1700 &#32;&#32;&#32;&#32;ret&#32;=&#32;pipe2(fds,&#32;O_CLOEXEC);
1701 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ret&#32;&lt;&#32;0)
1702 &#32;&#32;&#32;&#32;{
1703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;also&#32;report&#32;errno&#32;maybe?</emphasis>
1704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Impossible&#32;to&#32;create&#32;clipboard&#32;pipe&#32;fds&quot;</emphasis>);
1706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1707 &#32;&#32;&#32;&#32;}
1708 
1709 &#32;&#32;&#32;&#32;wl_data_offer_receive(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataOffer,&#32;<emphasis role="stringliteral">&quot;text/plain;charset=utf-8&quot;</emphasis>,&#32;fds[1]);
1710 &#32;&#32;&#32;&#32;close(fds[1]);
1711 
1712 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;XXX:&#32;this&#32;is&#32;a&#32;huge&#32;hack,&#32;this&#32;function&#32;shouldn’t&#32;be&#32;synchronous!</emphasis>
1713 &#32;&#32;&#32;&#32;handleEvents(-1);
1714 
1715 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(1)
1716 &#32;&#32;&#32;&#32;{
1717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Grow&#32;the&#32;clipboard&#32;if&#32;we&#32;need&#32;to&#32;paste&#32;something&#32;bigger,&#32;there&#32;is&#32;no</emphasis>
1718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;shrink&#32;operation&#32;yet.</emphasis>
1719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>&#32;+&#32;4096&#32;&gt;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSize)
1720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!growClipboardString())
1722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(fds[0]);
1724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1727 
1728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Then&#32;read&#32;from&#32;the&#32;fd&#32;to&#32;the&#32;clipboard,&#32;handling&#32;all&#32;known&#32;errors.</emphasis>
1729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;read(fds[0],&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardString&#32;+&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>,&#32;4096);
1730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ret&#32;==&#32;0)
1731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ret&#32;==&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EINTR)
1733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
1734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ret&#32;==&#32;-1)
1735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;also&#32;report&#32;errno&#32;maybe.</emphasis>
1737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Impossible&#32;to&#32;read&#32;from&#32;clipboard&#32;fd&quot;</emphasis>);
1739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(fds[0]);
1740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>&#32;+=&#32;ret;
1743 &#32;&#32;&#32;&#32;}
1744 &#32;&#32;&#32;&#32;close(fds[0]);
1745 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>&#32;+&#32;1&#32;&gt;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSize)
1746 &#32;&#32;&#32;&#32;{
1747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!growClipboardString())
1748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1749 &#32;&#32;&#32;&#32;}
1750 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardString[<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
1751 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardString;
1752 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a68e7966431b3829e09186d88c057e683"/>    <section>
    <title>_glfwGetCursorPosWayland()</title>
<indexterm><primary>_glfwGetCursorPosWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetCursorPosWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetCursorPosWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double * xpos, double * ypos)</computeroutput></para><para>
Definition at line 1170 of file wl_window.c.</para>
<programlisting>1171 {
1172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
1173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.cursorPosX;
1174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
1175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.cursorPosY;
1176 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a504e09d478703e56da9a9b8204bdddd5"/>    <section>
    <title>_glfwGetEGLNativeDisplayWayland()</title>
<indexterm><primary>_glfwGetEGLNativeDisplayWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetEGLNativeDisplayWayland</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> _glfwGetEGLNativeDisplayWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1762 of file wl_window.c.</para>
<programlisting>1763 {
1764 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>;
1765 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a1aa2aacf3bb7726a0cb96c138cda4f43"/>    <section>
    <title>_glfwGetEGLNativeWindowWayland()</title>
<indexterm><primary>_glfwGetEGLNativeWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetEGLNativeWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> _glfwGetEGLNativeWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1767 of file wl_window.c.</para>
<programlisting>1768 {
1769 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.native;
1770 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1ad3a432eeab11d12463568f267ba0dc59"/>    <section>
    <title>_glfwGetEGLPlatformWayland()</title>
<indexterm><primary>_glfwGetEGLPlatformWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetEGLPlatformWayland</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> _glfwGetEGLPlatformWayland (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> ** attribs)</computeroutput></para><para>
Definition at line 1754 of file wl_window.c.</para>
<programlisting>1755 {
1756 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a709af831ee7cf025c3bc5bfa6d2527f2">EXT_platform_base</link>&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1abbaa54e1a19006b93b64d5cae90f59ad">EXT_platform_wayland</link>)
1757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_internal_8h_1a95b995b45deab5d2cef7abd873be0233">EGL_PLATFORM_WAYLAND_EXT</link>;
1758 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
1760 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1afa69ff28fa47d232843f620120391e97"/>    <section>
    <title>_glfwGetFramebufferSizeWayland()</title>
<indexterm><primary>_glfwGetFramebufferSizeWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetFramebufferSizeWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetFramebufferSizeWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 936 of file wl_window.c.</para>
<programlisting>937 {
938 &#32;&#32;&#32;&#32;<link linkend="_wl__window_8c_1a7139656b9b92a558042462c05e71f17e">_glfwGetWindowSizeWayland</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
939 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;*=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.scale;
941 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;*=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.scale;
943 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a70e276054b29b00bb118f4261643c428"/>    <section>
    <title>_glfwGetGammaRampWayland()</title>
<indexterm><primary>_glfwGetGammaRampWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetGammaRampWayland</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwGetGammaRampWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp)</computeroutput></para><para>
Definition at line 208 of file wl_monitor.c.</para>
<programlisting>209 {
210 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Gamma&#32;ramp&#32;access&#32;is&#32;not&#32;available&quot;</emphasis>);
212 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
213 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a3e2e4e589e75df85898b33ff459f60ee"/>    <section>
    <title>_glfwGetKeyScancodeWayland()</title>
<indexterm><primary>_glfwGetKeyScancodeWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetKeyScancodeWayland</secondary></indexterm>
<para><computeroutput>int _glfwGetKeyScancodeWayland (int key)</computeroutput></para><para>
Definition at line 1251 of file wl_window.c.</para>
<programlisting>1252 {
1253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.scancodes[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
1254 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1ad2feca038ef5480163f360d16b7f6f4b"/>    <section>
    <title>_glfwGetMonitorContentScaleWayland()</title>
<indexterm><primary>_glfwGetMonitorContentScaleWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetMonitorContentScaleWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorContentScaleWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 174 of file wl_monitor.c.</para>
<programlisting>176 {
177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;(float)&#32;monitor-&gt;wl.scale;
179 &#32;&#32;&#32;&#32;if&#32;(yscale)
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;(float)&#32;monitor-&gt;wl.scale;
181 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a35f10d415428b18f4a8d83e5e308f87f"/>    <section>
    <title>_glfwGetMonitorPosWayland()</title>
<indexterm><primary>_glfwGetMonitorPosWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetMonitorPosWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorPosWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * xpos, int * ypos)</computeroutput></para><para>
Definition at line 166 of file wl_monitor.c.</para>
<programlisting>167 {
168 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;monitor-&gt;wl.x;
170 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;monitor-&gt;wl.y;
172 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1afce0463dcba6f72acf3127c094635b47"/>    <section>
    <title>_glfwGetMonitorWorkareaWayland()</title>
<indexterm><primary>_glfwGetMonitorWorkareaWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetMonitorWorkareaWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorWorkareaWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * xpos, int * ypos, int * width, int * height)</computeroutput></para><para>
Definition at line 183 of file wl_monitor.c.</para>
<programlisting>186 {
187 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;monitor-&gt;wl.x;
189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;monitor-&gt;wl.y;
191 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a012dd72ff0ab06cf46bb78951adac67f">modes</link>[monitor-&gt;wl.<link linkend="_struct___g_l_f_wmonitor_1ab2a33bceb848570cca7b213fcddb9e84">currentMode</link>].<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>;
193 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a012dd72ff0ab06cf46bb78951adac67f">modes</link>[monitor-&gt;wl.<link linkend="_struct___g_l_f_wmonitor_1ab2a33bceb848570cca7b213fcddb9e84">currentMode</link>].<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>;
195 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a5b300bf0217ad4d0c73c7c44eb53062d"/>    <section>
    <title>_glfwGetPhysicalDevicePresentationSupportWayland()</title>
<indexterm><primary>_glfwGetPhysicalDevicePresentationSupportWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetPhysicalDevicePresentationSupportWayland</secondary></indexterm>
<para><computeroutput>int _glfwGetPhysicalDevicePresentationSupportWayland (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</computeroutput></para><para>
Definition at line 1781 of file wl_window.c.</para>
<programlisting>1784 {
1785 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ab2aa7548ffded3123627790f8bce8c95">PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR</link>
1786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkGetPhysicalDeviceWaylandPresentationSupportKHR&#32;=
1787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_wl__platform_8h_1ab2aa7548ffded3123627790f8bce8c95">PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR</link>)
1788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkGetPhysicalDeviceWaylandPresentationSupportKHR&quot;</emphasis>);
1789 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkGetPhysicalDeviceWaylandPresentationSupportKHR)
1790 &#32;&#32;&#32;&#32;{
1791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
1792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_wayland_surface&#32;extension&quot;</emphasis>);
1793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1ad1021f65d668acdf1644d94e0828bff0">VK_NULL_HANDLE</link>;
1794 &#32;&#32;&#32;&#32;}
1795 
1796 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vkGetPhysicalDeviceWaylandPresentationSupportKHR(device,
1797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queuefamily,
1798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
1799 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a82b45703386cfc7543957d2160b482a5"/>    <section>
    <title>_glfwGetRequiredInstanceExtensionsWayland()</title>
<indexterm><primary>_glfwGetRequiredInstanceExtensionsWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetRequiredInstanceExtensionsWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetRequiredInstanceExtensionsWayland (char ** extensions)</computeroutput></para><para>
Definition at line 1772 of file wl_window.c.</para>
<programlisting>1773 {
1774 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a5169664f24499b5b82dec093165ca166">KHR_surface</link>&#32;||&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a669e44878dc6d35acc1dd9ba7d51548c">KHR_wayland_surface</link>)
1775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1776 
1777 &#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[0]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_surface&quot;</emphasis>;
1778 &#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[1]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_wayland_surface&quot;</emphasis>;
1779 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a066d33db2119fb1bba6a5127abd3530c"/>    <section>
    <title>_glfwGetScancodeNameWayland()</title>
<indexterm><primary>_glfwGetScancodeNameWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetScancodeNameWayland</secondary></indexterm>
<para><computeroutput>const char* _glfwGetScancodeNameWayland (int scancode)</computeroutput></para><para>
Definition at line 1196 of file wl_window.c.</para>
<programlisting>1197 {
1198 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;&lt;&#32;0&#32;||&#32;scancode&#32;&gt;&#32;255&#32;||
1199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keycodes[scancode]&#32;==&#32;<link linkend="_group__keys_1ga99aacc875b6b27a072552631e13775c7">GLFW_KEY_UNKNOWN</link>)
1200 &#32;&#32;&#32;&#32;{
1201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>,
1202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Invalid&#32;scancode&#32;%i&quot;</emphasis>,
1203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scancode);
1204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1205 &#32;&#32;&#32;&#32;}
1206 
1207 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keycodes[scancode];
1208 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;xkb_keycode_t&#32;keycode&#32;=&#32;scancode&#32;+&#32;8;
1209 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;xkb_layout_index_t&#32;layout&#32;=
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1ab1d4db8d90560c06b7ac881b6591eaa0">xkb_state_key_get_layout</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state,&#32;keycode);
1211 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(layout&#32;==&#32;XKB_LAYOUT_INVALID)
1212 &#32;&#32;&#32;&#32;{
1213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;retrieve&#32;layout&#32;for&#32;key&#32;name&quot;</emphasis>);
1215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1216 &#32;&#32;&#32;&#32;}
1217 
1218 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;xkb_keysym_t*&#32;keysyms&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1219 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a426e6afbf7ce124d9a902f1ae4a119e4">xkb_keymap_key_get_syms_by_level</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap,
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keycode,
1221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;layout,
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
1223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;keysyms);
1224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keysyms&#32;==&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1225 &#32;&#32;&#32;&#32;{
1226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;retrieve&#32;keysym&#32;for&#32;key&#32;name&quot;</emphasis>);
1228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1229 &#32;&#32;&#32;&#32;}
1230 
1231 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;codepoint&#32;=&#32;<link linkend="_xkb__unicode_8c_1acc4747eb62386c01c9dd0cd6997c8983">_glfwKeySym2Unicode</link>(keysyms[0]);
1232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(codepoint&#32;==&#32;<link linkend="_xkb__unicode_8h_1a45fc2e5a3ba025f1ac362831cfe04416">GLFW_INVALID_CODEPOINT</link>)
1233 &#32;&#32;&#32;&#32;{
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;retrieve&#32;codepoint&#32;for&#32;key&#32;name&quot;</emphasis>);
1236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1237 &#32;&#32;&#32;&#32;}
1238 
1239 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=&#32;<link linkend="_init_8c_1a920bdd09bf605b918b93fbec1993c55b">_glfwEncodeUTF8</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>],&#32;&#32;codepoint);
1240 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;==&#32;0)
1241 &#32;&#32;&#32;&#32;{
1242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;encode&#32;codepoint&#32;for&#32;key&#32;name&quot;</emphasis>);
1244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1245 &#32;&#32;&#32;&#32;}
1246 
1247 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>][<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
1248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
1249 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aacb87b7bddc8c0acbf7ba412fcab3e93"/>    <section>
    <title>_glfwGetVideoModesWayland()</title>
<indexterm><primary>_glfwGetVideoModesWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetVideoModesWayland</secondary></indexterm>
<para><computeroutput><link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>* _glfwGetVideoModesWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * count)</computeroutput></para><para>
Definition at line 197 of file wl_monitor.c.</para>
<programlisting>198 {
199 &#32;&#32;&#32;&#32;*found&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a49766384d467b40c9bb362459761418f">modeCount</link>;
200 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a012dd72ff0ab06cf46bb78951adac67f">modes</link>;
201 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aabd466779c94e6b0bf54f6fece70027c"/>    <section>
    <title>_glfwGetVideoModeWayland()</title>
<indexterm><primary>_glfwGetVideoModeWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetVideoModeWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetVideoModeWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * mode)</computeroutput></para><para>
Definition at line 203 of file wl_monitor.c.</para>
<programlisting>204 {
205 &#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1a012dd72ff0ab06cf46bb78951adac67f">modes</link>[monitor-&gt;wl.<link linkend="_struct___g_l_f_wmonitor_1ab2a33bceb848570cca7b213fcddb9e84">currentMode</link>];
206 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1ab3e8d510f751fca3c9b60aa03d321cba"/>    <section>
    <title>_glfwGetWindowContentScaleWayland()</title>
<indexterm><primary>_glfwGetWindowContentScaleWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetWindowContentScaleWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowContentScaleWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 962 of file wl_window.c.</para>
<programlisting>964 {
965 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;(float)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.scale;
967 &#32;&#32;&#32;&#32;if&#32;(yscale)
968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;(float)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.scale;
969 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a1c0713597287aec915fa764efdebf1f9"/>    <section>
    <title>_glfwGetWindowFrameSizeWayland()</title>
<indexterm><primary>_glfwGetWindowFrameSizeWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetWindowFrameSizeWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowFrameSizeWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * left, int * top, int * right, int * bottom)</computeroutput></para><para>
Definition at line 945 of file wl_window.c.</para>
<programlisting>948 {
949 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;decorated&#32;&amp;&amp;&#32;!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor&#32;&amp;&amp;&#32;!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.decorations.serverSide)
950 &#32;&#32;&#32;&#32;{
951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>)
952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>&#32;=&#32;<link linkend="_wl__platform_8h_1abbd514b1fca6f13fe14c45f91478e033">_GLFW_DECORATION_TOP</link>;
953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>)
954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>&#32;=&#32;<link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>;
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>)
956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>&#32;=&#32;<link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>;
957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)
958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>&#32;=&#32;<link linkend="_wl__platform_8h_1ab0aa0ee53d9e7cb2f315acc731a9a977">_GLFW_DECORATION_WIDTH</link>;
959 &#32;&#32;&#32;&#32;}
960 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a741ad4527adc24d5f6732ac27fa32678"/>    <section>
    <title>_glfwGetWindowOpacityWayland()</title>
<indexterm><primary>_glfwGetWindowOpacityWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetWindowOpacityWayland</secondary></indexterm>
<para><computeroutput>float _glfwGetWindowOpacityWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1129 of file wl_window.c.</para>
<programlisting>1130 {
1131 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1.f;
1132 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a325fef5dd107caef5a4620ec0e5ee9bd"/>    <section>
    <title>_glfwGetWindowPosWayland()</title>
<indexterm><primary>_glfwGetWindowPosWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetWindowPosWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowPosWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * xpos, int * ypos)</computeroutput></para><para>
Definition at line 880 of file wl_window.c.</para>
<programlisting>881 {
882 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;Wayland&#32;client&#32;is&#32;not&#32;aware&#32;of&#32;its&#32;position,&#32;so&#32;just&#32;warn&#32;and&#32;leave&#32;it</emphasis>
883 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;as&#32;(0,&#32;0)</emphasis>
884 
885 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;The&#32;platform&#32;does&#32;not&#32;provide&#32;the&#32;window&#32;position&quot;</emphasis>);
887 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a7139656b9b92a558042462c05e71f17e"/>    <section>
    <title>_glfwGetWindowSizeWayland()</title>
<indexterm><primary>_glfwGetWindowSizeWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwGetWindowSizeWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowSizeWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 897 of file wl_window.c.</para>
<programlisting>898 {
899 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.width;
901 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.height;
903 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1ad519388eb25d04c1a4db2df34169efb4"/>    <section>
    <title>_glfwHideWindowWayland()</title>
<indexterm><primary>_glfwHideWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwHideWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwHideWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1015 of file wl_window.c.</para>
<programlisting>1016 {
1017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.visible)
1018 &#32;&#32;&#32;&#32;{
1019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.visible&#32;=&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_attach(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;0);
1021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_commit(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface);
1022 &#32;&#32;&#32;&#32;}
1023 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a2786524a443b7f4a2ff53055366e1169"/>    <section>
    <title>_glfwIconifyWindowWayland()</title>
<indexterm><primary>_glfwIconifyWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwIconifyWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwIconifyWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 971 of file wl_window.c.</para>
<programlisting>972 {
973 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_set_minimized(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel);
975 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a8d640825daae6f39a0c20edba245470d"/>    <section>
    <title>_glfwInitWayland()</title>
<indexterm><primary>_glfwInitWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwInitWayland</secondary></indexterm>
<para><computeroutput>int _glfwInitWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1161 of file wl_init.c.</para>
<programlisting>1162 {
1163 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*cursorTheme;
1164 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*cursorSizeStr;
1165 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*cursorSizeEnd;
1166 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;cursorSizeLong;
1167 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cursorSize;
1168 
1169 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_flush&#32;=&#32;(<link linkend="_wl__platform_8h_1a2febf2819b199bcb0ad33bc9ec83ab13">PFN_wl_display_flush</link>)
1170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_flush&quot;</emphasis>);
1171 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_cancel_read&#32;=&#32;(<link linkend="_wl__platform_8h_1a059454d3d45c515a1c9769b06f870f1a">PFN_wl_display_cancel_read</link>)
1172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_cancel_read&quot;</emphasis>);
1173 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_dispatch_pending&#32;=&#32;(<link linkend="_wl__platform_8h_1ac1a1070aa10fb7385a25d8dcc6e75c75">PFN_wl_display_dispatch_pending</link>)
1174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_dispatch_pending&quot;</emphasis>);
1175 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_read_events&#32;=&#32;(<link linkend="_wl__platform_8h_1a0f078a0719d6f9bbb387265c3db30704">PFN_wl_display_read_events</link>)
1176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_read_events&quot;</emphasis>);
1177 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_disconnect&#32;=&#32;(<link linkend="_wl__platform_8h_1a884612b7f8d6ac2d1a09d43372c340f8">PFN_wl_display_disconnect</link>)
1178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_disconnect&quot;</emphasis>);
1179 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_roundtrip&#32;=&#32;(<link linkend="_wl__platform_8h_1ac8941d25e88d5e10f33c5270efc46f45">PFN_wl_display_roundtrip</link>)
1180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_roundtrip&quot;</emphasis>);
1181 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_get_fd&#32;=&#32;(<link linkend="_wl__platform_8h_1a8043dd7b64a5d5594d4db20613adfb7a">PFN_wl_display_get_fd</link>)
1182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_get_fd&quot;</emphasis>);
1183 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_prepare_read&#32;=&#32;(<link linkend="_wl__platform_8h_1aaa3bfda091c49bf98074ff95c20be78f">PFN_wl_display_prepare_read</link>)
1184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_display_prepare_read&quot;</emphasis>);
1185 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_marshal&#32;=&#32;(<link linkend="_wl__platform_8h_1a1e2c3d1ff026e91762ba9bb04b299e28">PFN_wl_proxy_marshal</link>)
1186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_marshal&quot;</emphasis>);
1187 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_add_listener&#32;=&#32;(<link linkend="_wl__platform_8h_1a425b1cea5c34f65c0fb5fa08b5932a82">PFN_wl_proxy_add_listener</link>)
1188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_add_listener&quot;</emphasis>);
1189 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_destroy&#32;=&#32;(<link linkend="_wl__platform_8h_1ad7a4e34186cb77594ffbccc472b10928">PFN_wl_proxy_destroy</link>)
1190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_destroy&quot;</emphasis>);
1191 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_marshal_constructor&#32;=&#32;(<link linkend="_wl__platform_8h_1a2a355482006415dd4a3ebdc3d5db319c">PFN_wl_proxy_marshal_constructor</link>)
1192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_marshal_constructor&quot;</emphasis>);
1193 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_marshal_constructor_versioned&#32;=&#32;(<link linkend="_wl__platform_8h_1ac37612cd6f868464f393263dcb5115ce">PFN_wl_proxy_marshal_constructor_versioned</link>)
1194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_marshal_constructor_versioned&quot;</emphasis>);
1195 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_get_user_data&#32;=&#32;(<link linkend="_wl__platform_8h_1a66f071e0eac6f315abe216dd6e978985">PFN_wl_proxy_get_user_data</link>)
1196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_get_user_data&quot;</emphasis>);
1197 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_set_user_data&#32;=&#32;(<link linkend="_wl__platform_8h_1a1652428fcf022f5c562ac5bd5efc0659">PFN_wl_proxy_set_user_data</link>)
1198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_set_user_data&quot;</emphasis>);
1199 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_get_version&#32;=&#32;(<link linkend="_wl__platform_8h_1aaee9c638becf09cec42feb11c91a5860">PFN_wl_proxy_get_version</link>)
1200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_get_version&quot;</emphasis>);
1201 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_marshal_flags&#32;=&#32;(<link linkend="_wl__platform_8h_1ae6ee6cd4db3115093cb0e3c6fa5e9f8a">PFN_wl_proxy_marshal_flags</link>)
1202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_proxy_marshal_flags&quot;</emphasis>);
1203 
1204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_flush&#32;||
1205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_cancel_read&#32;||
1206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_dispatch_pending&#32;||
1207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_read_events&#32;||
1208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_disconnect&#32;||
1209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_roundtrip&#32;||
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_get_fd&#32;||
1211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.display_prepare_read&#32;||
1212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_marshal&#32;||
1213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_add_listener&#32;||
1214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_destroy&#32;||
1215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_marshal_constructor&#32;||
1216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_marshal_constructor_versioned&#32;||
1217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_get_user_data&#32;||
1218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.client.proxy_set_user_data)
1219 &#32;&#32;&#32;&#32;{
1220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;load&#32;libwayland-client&#32;entry&#32;point&quot;</emphasis>);
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1223 &#32;&#32;&#32;&#32;}
1224 
1225 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>&#32;=&#32;<link linkend="_internal_8h_1a0ca69d860ad190bdb5beab6de9160842">_glfwPlatformLoadModule</link>(<emphasis role="stringliteral">&quot;libwayland-cursor.so.0&quot;</emphasis>);
1226 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
1227 &#32;&#32;&#32;&#32;{
1228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;open&#32;libwayland-cursor&quot;</emphasis>);
1230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1231 &#32;&#32;&#32;&#32;}
1232 
1233 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.theme_load&#32;=&#32;(<link linkend="_wl__platform_8h_1a3d5be4ad6514481271f04e01687ba3cf">PFN_wl_cursor_theme_load</link>)
1234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_cursor_theme_load&quot;</emphasis>);
1235 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.theme_destroy&#32;=&#32;(<link linkend="_wl__platform_8h_1a028b3d9313486c63f918b370f4290b46">PFN_wl_cursor_theme_destroy</link>)
1236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_cursor_theme_destroy&quot;</emphasis>);
1237 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.theme_get_cursor&#32;=&#32;(<link linkend="_wl__platform_8h_1ad888f8476b9b83ca152e92f6b4d04b50">PFN_wl_cursor_theme_get_cursor</link>)
1238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_cursor_theme_get_cursor&quot;</emphasis>);
1239 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.image_get_buffer&#32;=&#32;(<link linkend="_wl__platform_8h_1a71881ab6635d2de5a303349e16807430">PFN_wl_cursor_image_get_buffer</link>)
1240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_cursor_image_get_buffer&quot;</emphasis>);
1241 
1242 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>&#32;=&#32;<link linkend="_internal_8h_1a0ca69d860ad190bdb5beab6de9160842">_glfwPlatformLoadModule</link>(<emphasis role="stringliteral">&quot;libwayland-egl.so.1&quot;</emphasis>);
1243 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
1244 &#32;&#32;&#32;&#32;{
1245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;open&#32;libwayland-egl&quot;</emphasis>);
1247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1248 &#32;&#32;&#32;&#32;}
1249 
1250 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.window_create&#32;=&#32;(<link linkend="_wl__platform_8h_1a6b577197886e83e6550758fde49fcbf9">PFN_wl_egl_window_create</link>)
1251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_egl_window_create&quot;</emphasis>);
1252 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.window_destroy&#32;=&#32;(<link linkend="_wl__platform_8h_1a2727d08bef446572e6f9e26801506ae1">PFN_wl_egl_window_destroy</link>)
1253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_egl_window_destroy&quot;</emphasis>);
1254 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.window_resize&#32;=&#32;(<link linkend="_wl__platform_8h_1adcf78e57b989ea0e561208099dada945">PFN_wl_egl_window_resize</link>)
1255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;wl_egl_window_resize&quot;</emphasis>);
1256 
1257 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>&#32;=&#32;<link linkend="_internal_8h_1a0ca69d860ad190bdb5beab6de9160842">_glfwPlatformLoadModule</link>(<emphasis role="stringliteral">&quot;libxkbcommon.so.0&quot;</emphasis>);
1258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
1259 &#32;&#32;&#32;&#32;{
1260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;open&#32;libxkbcommon&quot;</emphasis>);
1262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1263 &#32;&#32;&#32;&#32;}
1264 
1265 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.context_new&#32;=&#32;(<link linkend="_wl__platform_8h_1a0f6a5db093091ec57ac908e20bc205df">PFN_xkb_context_new</link>)
1266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_context_new&quot;</emphasis>);
1267 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.context_unref&#32;=&#32;(<link linkend="_wl__platform_8h_1aeb826e6dece848b0e71cf98fcf3b6a34">PFN_xkb_context_unref</link>)
1268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_context_unref&quot;</emphasis>);
1269 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap_new_from_string&#32;=&#32;(<link linkend="_wl__platform_8h_1a7b808d4fcf4963467503704373c5cdd7">PFN_xkb_keymap_new_from_string</link>)
1270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_keymap_new_from_string&quot;</emphasis>);
1271 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap_unref&#32;=&#32;(<link linkend="_wl__platform_8h_1aa0778d7d934b96bf500f046368de1f45">PFN_xkb_keymap_unref</link>)
1272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_keymap_unref&quot;</emphasis>);
1273 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap_mod_get_index&#32;=&#32;(<link linkend="_wl__platform_8h_1a41d7cec916693645a46216cec1c0c6d7">PFN_xkb_keymap_mod_get_index</link>)
1274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_keymap_mod_get_index&quot;</emphasis>);
1275 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap_key_repeats&#32;=&#32;(<link linkend="_wl__platform_8h_1a10dd25305b8984d748e0c35db025106e">PFN_xkb_keymap_key_repeats</link>)
1276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_keymap_key_repeats&quot;</emphasis>);
1277 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap_key_get_syms_by_level&#32;=&#32;(<link linkend="_wl__platform_8h_1a9866b14ec9bf5013c49523c9a71c2660">PFN_xkb_keymap_key_get_syms_by_level</link>)
1278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_keymap_key_get_syms_by_level&quot;</emphasis>);
1279 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state_new&#32;=&#32;(<link linkend="_wl__platform_8h_1a2a900ea023b56cb0c6ec6feaf6b45854">PFN_xkb_state_new</link>)
1280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_state_new&quot;</emphasis>);
1281 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state_unref&#32;=&#32;(<link linkend="_wl__platform_8h_1a04a57f9f8326bd39a1525e4e0edd4951">PFN_xkb_state_unref</link>)
1282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_state_unref&quot;</emphasis>);
1283 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state_key_get_syms&#32;=&#32;(<link linkend="_wl__platform_8h_1ac93bb3679df2634f72bb35e1587b0459">PFN_xkb_state_key_get_syms</link>)
1284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_state_key_get_syms&quot;</emphasis>);
1285 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state_update_mask&#32;=&#32;(<link linkend="_wl__platform_8h_1a872e4657e3e1127caeb678c0b253b4f0">PFN_xkb_state_update_mask</link>)
1286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_state_update_mask&quot;</emphasis>);
1287 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state_serialize_mods&#32;=&#32;(<link linkend="_wl__platform_8h_1a963602febce41dbde7c037aaba7b7c0d">PFN_xkb_state_serialize_mods</link>)
1288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_state_serialize_mods&quot;</emphasis>);
1289 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state_key_get_layout&#32;=&#32;(<link linkend="_wl__platform_8h_1a1ddf8a57641c77805f0aedf68d7c715e">PFN_xkb_state_key_get_layout</link>)
1290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_state_key_get_layout&quot;</emphasis>);
1291 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.compose_table_new_from_locale&#32;=&#32;(<link linkend="_wl__platform_8h_1a8a717fe416e52e9d6e5258caeb5281d4">PFN_xkb_compose_table_new_from_locale</link>)
1292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_compose_table_new_from_locale&quot;</emphasis>);
1293 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.compose_table_unref&#32;=&#32;(<link linkend="_wl__platform_8h_1a94826943d69f9fce48bb246457692c2e">PFN_xkb_compose_table_unref</link>)
1294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_compose_table_unref&quot;</emphasis>);
1295 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.compose_state_new&#32;=&#32;(<link linkend="_wl__platform_8h_1acde584df56f61030dd063d5bbf6ac838">PFN_xkb_compose_state_new</link>)
1296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_compose_state_new&quot;</emphasis>);
1297 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.compose_state_unref&#32;=&#32;(<link linkend="_wl__platform_8h_1a5b405c88d81a608a1a447ac889f6485b">PFN_xkb_compose_state_unref</link>)
1298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_compose_state_unref&quot;</emphasis>);
1299 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.compose_state_feed&#32;=&#32;(<link linkend="_wl__platform_8h_1a58829e3e18572f5e5e8d7d0349b3f092">PFN_xkb_compose_state_feed</link>)
1300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_compose_state_feed&quot;</emphasis>);
1301 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.compose_state_get_status&#32;=&#32;(<link linkend="_wl__platform_8h_1aad8c18022b37e3cd5d8e38a621fa42ed">PFN_xkb_compose_state_get_status</link>)
1302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_compose_state_get_status&quot;</emphasis>);
1303 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.compose_state_get_one_sym&#32;=&#32;(<link linkend="_wl__platform_8h_1a88d4343fefb99b57a83cb2609eebdf87">PFN_xkb_compose_state_get_one_sym</link>)
1304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>,&#32;<emphasis role="stringliteral">&quot;xkb_compose_state_get_one_sym&quot;</emphasis>);
1305 
1306 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.registry&#32;=&#32;wl_display_get_registry(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
1307 &#32;&#32;&#32;&#32;wl_registry_add_listener(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.registry,&#32;&amp;registryListener,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1308 
1309 &#32;&#32;&#32;&#32;createKeyTables();
1310 
1311 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a681e7c0153724884070e9c94069693fb">context</link>&#32;=&#32;<link linkend="_wl__platform_8h_1ad3db83b8a04c02fad16d7f0eb9253651">xkb_context_new</link>(0);
1312 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a681e7c0153724884070e9c94069693fb">context</link>)
1313 &#32;&#32;&#32;&#32;{
1314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;initialize&#32;xkb&#32;context&quot;</emphasis>);
1316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1317 &#32;&#32;&#32;&#32;}
1318 
1319 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sync&#32;so&#32;we&#32;got&#32;all&#32;registry&#32;objects</emphasis>
1320 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1afbff16ff914a6de7fb8b0947aa872df3">wl_display_roundtrip</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
1321 
1322 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sync&#32;so&#32;we&#32;got&#32;all&#32;initial&#32;output&#32;events</emphasis>
1323 &#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1afbff16ff914a6de7fb8b0947aa872df3">wl_display_roundtrip</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
1324 
1325 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.timerfd&#32;=&#32;-1;
1326 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.seatVersion&#32;&gt;=&#32;4)
1327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.timerfd&#32;=&#32;timerfd_create(CLOCK_MONOTONIC,&#32;TFD_CLOEXEC&#32;|&#32;TFD_NONBLOCK);
1328 
1329 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.wmBase)
1330 &#32;&#32;&#32;&#32;{
1331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Failed&#32;to&#32;find&#32;xdg-shell&#32;in&#32;your&#32;compositor&quot;</emphasis>);
1333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1334 &#32;&#32;&#32;&#32;}
1335 
1336 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointer&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.shm)
1337 &#32;&#32;&#32;&#32;{
1338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorTheme&#32;=&#32;getenv(<emphasis role="stringliteral">&quot;XCURSOR_THEME&quot;</emphasis>);
1339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSizeStr&#32;=&#32;getenv(<emphasis role="stringliteral">&quot;XCURSOR_SIZE&quot;</emphasis>);
1340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSize&#32;=&#32;32;
1341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursorSizeStr)
1342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errno&#32;=&#32;0;
1344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSizeLong&#32;=&#32;strtol(cursorSizeStr,&#32;&amp;cursorSizeEnd,&#32;10);
1345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!*cursorSizeEnd&#32;&amp;&amp;&#32;!errno&#32;&amp;&amp;&#32;cursorSizeLong&#32;&gt;&#32;0&#32;&amp;&amp;&#32;cursorSizeLong&#32;&lt;=&#32;INT_MAX)
1346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursorSize&#32;=&#32;(int)cursorSizeLong;
1347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTheme&#32;=
1349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1af0849f9b39044874257dae01cf1ab056">wl_cursor_theme_load</link>(cursorTheme,&#32;cursorSize,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.shm);
1350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTheme)
1351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Unable&#32;to&#32;load&#32;default&#32;cursor&#32;theme&quot;</emphasis>);
1354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;this&#32;happens&#32;to&#32;be&#32;NULL,&#32;we&#32;just&#32;fallback&#32;to&#32;the&#32;scale=1&#32;version.</emphasis>
1357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI&#32;=
1358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1af0849f9b39044874257dae01cf1ab056">wl_cursor_theme_load</link>(cursorTheme,&#32;2&#32;*&#32;cursorSize,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.shm);
1359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorSurface&#32;=
1360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_compositor_create_surface(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.compositor);
1361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTimerfd&#32;=&#32;timerfd_create(CLOCK_MONOTONIC,&#32;TFD_CLOEXEC&#32;|&#32;TFD_NONBLOCK);
1362 &#32;&#32;&#32;&#32;}
1363 
1364 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.seat&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDeviceManager)
1365 &#32;&#32;&#32;&#32;{
1366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDevice&#32;=
1367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_device_manager_get_data_device(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDeviceManager,
1368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.seat);
1369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_device_add_listener(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDevice,&#32;&amp;dataDeviceListener,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardString&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(4096,&#32;1);
1371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardString)
1372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Unable&#32;to&#32;allocate&#32;clipboard&#32;memory&quot;</emphasis>);
1375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSize&#32;=&#32;4096;
1378 &#32;&#32;&#32;&#32;}
1379 
1380 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1381 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a590adac355ae7255f974357d3cc9bb82"/>    <section>
    <title>_glfwInputTextWayland()</title>
<indexterm><primary>_glfwInputTextWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwInputTextWayland</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwInputTextWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> scancode)</computeroutput></para><para>
Definition at line 538 of file wl_init.c.</para>
<programlisting>539 {
540 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;xkb_keysym_t*&#32;keysyms;
541 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;xkb_keycode_t&#32;keycode&#32;=&#32;scancode&#32;+&#32;8;
542 
543 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_wl__platform_8h_1aae3ce4ad2452936ecc298d83cec75af8">xkb_state_key_get_syms</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state,&#32;keycode,&#32;&amp;keysyms)&#32;==&#32;1)
544 &#32;&#32;&#32;&#32;{
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;xkb_keysym_t&#32;keysym&#32;=&#32;composeSymbol(keysyms[0]);
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;codepoint&#32;=&#32;<link linkend="_xkb__unicode_8c_1acc4747eb62386c01c9dd0cd6997c8983">_glfwKeySym2Unicode</link>(keysym);
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(codepoint&#32;!=&#32;<link linkend="_xkb__unicode_8h_1a45fc2e5a3ba025f1ac362831cfe04416">GLFW_INVALID_CODEPOINT</link>)
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mods&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.modifiers;
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;plain&#32;=&#32;!(mods&#32;&amp;&#32;(<link linkend="_group__mods_1ga6ed94871c3208eefd85713fa929d45aa">GLFW_MOD_CONTROL</link>&#32;|&#32;<link linkend="_group__mods_1gad2acd5633463c29e07008687ea73c0f4">GLFW_MOD_ALT</link>));
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1aa778fa9144afadb49baa95f0178d3d3e">_glfwInputChar</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;codepoint,&#32;mods,&#32;plain);
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
553 &#32;&#32;&#32;&#32;}
554 
555 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_wl__platform_8h_1a454cb66a6161b4d9fbfde69bf1b1adb1">xkb_keymap_key_repeats</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap,&#32;keycode);
556 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a8dcc43854cfabe4d324154d2eeebd44e"/>    <section>
    <title>_glfwMaximizeWindowWayland()</title>
<indexterm><primary>_glfwMaximizeWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwMaximizeWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwMaximizeWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 992 of file wl_window.c.</para>
<programlisting>993 {
994 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
995 &#32;&#32;&#32;&#32;{
996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_set_maximized(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel);
997 &#32;&#32;&#32;&#32;}
998 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.maximized&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
999 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a7a315f4b4c3263efc0960094698de618"/>    <section>
    <title>_glfwPollEventsWayland()</title>
<indexterm><primary>_glfwPollEventsWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwPollEventsWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPollEventsWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1150 of file wl_window.c.</para>
<programlisting>1151 {
1152 &#32;&#32;&#32;&#32;handleEvents(0);
1153 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a34984c3cc558a291b1721288c8b5ebe6"/>    <section>
    <title>_glfwPostEmptyEventWayland()</title>
<indexterm><primary>_glfwPostEmptyEventWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwPostEmptyEventWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPostEmptyEventWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1165 of file wl_window.c.</para>
<programlisting>1166 {
1167 &#32;&#32;&#32;&#32;wl_display_sync(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
1168 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aa0c6e411bf8eef4b73bc98e0974f2a78"/>    <section>
    <title>_glfwRawMouseMotionSupportedWayland()</title>
<indexterm><primary>_glfwRawMouseMotionSupportedWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwRawMouseMotionSupportedWayland</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwRawMouseMotionSupportedWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1145 of file wl_window.c.</para>
<programlisting>1146 {
1147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1148 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a8a1b249be1215f514f923f91656030c3"/>    <section>
    <title>_glfwRequestWindowAttentionWayland()</title>
<indexterm><primary>_glfwRequestWindowAttentionWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwRequestWindowAttentionWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRequestWindowAttentionWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1025 of file wl_window.c.</para>
<programlisting>1026 {
1027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO</emphasis>
1028 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga5dda77e023e83151e8bd55a6758f946a">GLFW_FEATURE_UNIMPLEMENTED</link>,
1029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Window&#32;attention&#32;request&#32;not&#32;implemented&#32;yet&quot;</emphasis>);
1030 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a25c9fe00185d9a1b8badf038b7634b88"/>    <section>
    <title>_glfwRestoreWindowWayland()</title>
<indexterm><primary>_glfwRestoreWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwRestoreWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRestoreWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 977 of file wl_window.c.</para>
<programlisting>978 {
979 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
980 &#32;&#32;&#32;&#32;{
981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_unset_fullscreen(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel);
983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.maximized)
984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_unset_maximized(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel);
985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;There&#32;is&#32;no&#32;way&#32;to&#32;unset&#32;minimized,&#32;or&#32;even&#32;to&#32;know&#32;if&#32;we&#32;are</emphasis>
986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;minimized,&#32;so&#32;there&#32;is&#32;nothing&#32;to&#32;do&#32;in&#32;this&#32;case.</emphasis>
987 &#32;&#32;&#32;&#32;}
988 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a5cfc56e9a5e1e8dd88862c9c7b8a6f7f">_glfwInputWindowMonitor</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
989 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.maximized&#32;=&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
990 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a74f40e21bcc7f5a646ecc5f80f25a6c3"/>    <section>
    <title>_glfwSetClipboardStringWayland()</title>
<indexterm><primary>_glfwSetClipboardStringWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetClipboardStringWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetClipboardStringWayland (const char * string)</computeroutput></para><para>
Definition at line 1631 of file wl_window.c.</para>
<programlisting>1632 {
1633 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource)
1634 &#32;&#32;&#32;&#32;{
1635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_source_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource);
1636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1637 &#32;&#32;&#32;&#32;}
1638 
1639 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString)
1640 &#32;&#32;&#32;&#32;{
1641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString);
1642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1643 &#32;&#32;&#32;&#32;}
1644 
1645 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString&#32;=&#32;<link linkend="_init_8c_1a7f0a5b0d879baead229ef5e7381648e8">_glfw_strdup</link>(<emphasis role="keywordtype">string</emphasis>);
1646 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString)
1647 &#32;&#32;&#32;&#32;{
1648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Impossible&#32;to&#32;allocate&#32;clipboard&#32;string&quot;</emphasis>);
1650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1651 &#32;&#32;&#32;&#32;}
1652 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendSize&#32;=&#32;strlen(<emphasis role="keywordtype">string</emphasis>);
1653 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource&#32;=
1654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_device_manager_create_data_source(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDeviceManager);
1655 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource)
1656 &#32;&#32;&#32;&#32;{
1657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Impossible&#32;to&#32;create&#32;clipboard&#32;source&quot;</emphasis>);
1659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString);
1660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1661 &#32;&#32;&#32;&#32;}
1662 &#32;&#32;&#32;&#32;wl_data_source_add_listener(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource,
1663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;dataSourceListener,
1664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1665 &#32;&#32;&#32;&#32;wl_data_source_offer(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource,&#32;<emphasis role="stringliteral">&quot;text/plain;charset=utf-8&quot;</emphasis>);
1666 &#32;&#32;&#32;&#32;wl_data_device_set_selection(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDevice,
1667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource,
1668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.serial);
1669 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1ae993bd14d7db090c84fb9799fc556bbd"/>    <section>
    <title>_glfwSetCursorModeWayland()</title>
<indexterm><primary>_glfwSetCursorModeWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetCursorModeWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorModeWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int mode)</computeroutput></para><para>
Definition at line 1191 of file wl_window.c.</para>
<programlisting>1192 {
1193 &#32;&#32;&#32;&#32;<link linkend="_wl__window_8c_1aabccf38d8d6f6e29e4a63345a850bfa9">_glfwSetCursorWayland</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.currentCursor);
1194 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aab3ae730f795e2f68b395f1c0f7694c1"/>    <section>
    <title>_glfwSetCursorPosWayland()</title>
<indexterm><primary>_glfwSetCursorPosWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetCursorPosWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorPosWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double xpos, double ypos)</computeroutput></para><para>
Definition at line 1180 of file wl_window.c.</para>
<programlisting>1181 {
1182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isPointerLocked(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
1183 &#32;&#32;&#32;&#32;{
1184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zwp_locked_pointer_v1_set_cursor_position_hint(
1185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.pointerLock.lockedPointer,
1186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_fixed_from_double(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>),&#32;wl_fixed_from_double(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>));
1187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_commit(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface);
1188 &#32;&#32;&#32;&#32;}
1189 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aabccf38d8d6f6e29e4a63345a850bfa9"/>    <section>
    <title>_glfwSetCursorWayland()</title>
<indexterm><primary>_glfwSetCursorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetCursorWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 1490 of file wl_window.c.</para>
<programlisting>1491 {
1492 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor">wl_cursor</link>*&#32;defaultCursor;
1493 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structwl__cursor">wl_cursor</link>*&#32;defaultCursorHiDPI&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1494 
1495 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointer)
1496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1497 
1498 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.currentCursor&#32;=&#32;cursor;
1499 
1500 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;we&apos;re&#32;not&#32;in&#32;the&#32;correct&#32;window&#32;just&#32;save&#32;the&#32;cursor</emphasis>
1501 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;next&#32;time&#32;the&#32;pointer&#32;enters&#32;the&#32;window&#32;the&#32;cursor&#32;will&#32;change</emphasis>
1502 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;!=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointerFocus&#32;||&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.decorations.focus&#32;!=&#32;<link linkend="_wl__platform_8h_1ad60a0a27370d399e4f9fd58d1eeef1acab46a673d9ca7e2f82c3cdd4cc7118e6b">mainWindow</link>)
1503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1504 
1505 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unlock&#32;possible&#32;pointer&#32;lock&#32;if&#32;no&#32;longer&#32;disabled.</emphasis>
1506 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;cursorMode&#32;!=&#32;<link linkend="_glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88">GLFW_CURSOR_DISABLED</link>&#32;&amp;&amp;&#32;isPointerLocked(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
1507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unlockPointer(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1508 
1509 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;cursorMode&#32;==&#32;<link linkend="_glfw3_8h_1ae04dd25c8577e19fa8c97368561f6c68">GLFW_CURSOR_NORMAL</link>)
1510 &#32;&#32;&#32;&#32;{
1511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor)
1512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;cursor-&gt;wl);
1513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultCursor&#32;=&#32;<link linkend="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f">wl_cursor_theme_get_cursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTheme,
1516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;left_ptr&quot;</emphasis>);
1517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!defaultCursor)
1518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Standard&#32;cursor&#32;not&#32;found&quot;</emphasis>);
1521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI)
1524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultCursorHiDPI&#32;=
1525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a987f4277f2574417ab58ebdb8f5de58f">wl_cursor_theme_get_cursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI,
1526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;left_ptr&quot;</emphasis>);
1527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wcursor_wayland">_GLFWcursorWayland</link>&#32;cursorWayland&#32;=&#32;{
1528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultCursor,
1529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defaultCursorHiDPI,
1530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,
1532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,
1533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0
1534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
1535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;cursorWayland);
1536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1537 &#32;&#32;&#32;&#32;}
1538 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;cursorMode&#32;==&#32;<link linkend="_glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88">GLFW_CURSOR_DISABLED</link>)
1539 &#32;&#32;&#32;&#32;{
1540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isPointerLocked(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
1541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lockPointer(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1542 &#32;&#32;&#32;&#32;}
1543 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;cursorMode&#32;==&#32;<link linkend="_glfw3_8h_1ac4d5cb9d78de8573349c58763d53bf11">GLFW_CURSOR_HIDDEN</link>)
1544 &#32;&#32;&#32;&#32;{
1545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_pointer_set_cursor(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointer,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointerEnterSerial,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;0);
1546 &#32;&#32;&#32;&#32;}
1547 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1afa0e67469f56d48d100cfd1cb1ff25bc"/>    <section>
    <title>_glfwSetGammaRampWayland()</title>
<indexterm><primary>_glfwSetGammaRampWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetGammaRampWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetGammaRampWayland (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp)</computeroutput></para><para>
Definition at line 215 of file wl_monitor.c.</para>
<programlisting>216 {
217 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Gamma&#32;ramp&#32;access&#32;is&#32;not&#32;available&quot;</emphasis>);
219 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aeb3438865c89b17a2142cfc4509dbd28"/>    <section>
    <title>_glfwSetRawMouseMotionWayland()</title>
<indexterm><primary>_glfwSetRawMouseMotionWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetRawMouseMotionWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetRawMouseMotionWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1140 of file wl_window.c.</para>
<programlisting>1141 {
1142 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;handled&#32;in&#32;relativePointerHandleRelativeMotion</emphasis>
1143 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a67850a44f6265bfa151ef3e3637bca55"/>    <section>
    <title>_glfwSetWindowAspectRatioWayland()</title>
<indexterm><primary>_glfwSetWindowAspectRatioWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowAspectRatioWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowAspectRatioWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int numer, int denom)</computeroutput></para><para>
Definition at line 928 of file wl_window.c.</para>
<programlisting>929 {
930 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;find&#32;out&#32;how&#32;to&#32;trigger&#32;a&#32;resize.</emphasis>
931 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;actual&#32;limits&#32;are&#32;checked&#32;in&#32;the&#32;xdg_toplevel::configure&#32;handler.</emphasis>
932 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga5dda77e023e83151e8bd55a6758f946a">GLFW_FEATURE_UNIMPLEMENTED</link>,
933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Window&#32;aspect&#32;ratio&#32;not&#32;yet&#32;implemented&quot;</emphasis>);
934 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1afcacd9ea3cb285c1266871d13a723e4c"/>    <section>
    <title>_glfwSetWindowDecoratedWayland()</title>
<indexterm><primary>_glfwSetWindowDecoratedWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowDecoratedWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowDecoratedWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1098 of file wl_window.c.</para>
<programlisting>1099 {
1100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1101 &#32;&#32;&#32;&#32;{
1102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
1103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;createDecorations(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;destroyDecorations(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1106 &#32;&#32;&#32;&#32;}
1107 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aebcd0db81b67e416f775e4b0d8facdc1"/>    <section>
    <title>_glfwSetWindowFloatingWayland()</title>
<indexterm><primary>_glfwSetWindowFloatingWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowFloatingWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowFloatingWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1109 of file wl_window.c.</para>
<programlisting>1110 {
1111 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO</emphasis>
1112 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga5dda77e023e83151e8bd55a6758f946a">GLFW_FEATURE_UNIMPLEMENTED</link>,
1113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Window&#32;attribute&#32;setting&#32;not&#32;implemented&#32;yet&quot;</emphasis>);
1114 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1af3bdf666499b335663748945d01b1aab"/>    <section>
    <title>_glfwSetWindowIconWayland()</title>
<indexterm><primary>_glfwSetWindowIconWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowIconWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowIconWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int count, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * images)</computeroutput></para><para>
Definition at line 873 of file wl_window.c.</para>
<programlisting>875 {
876 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;The&#32;platform&#32;does&#32;not&#32;support&#32;setting&#32;the&#32;window&#32;icon&quot;</emphasis>);
878 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a76e4715c3d943636ba1b71afea0c97c2"/>    <section>
    <title>_glfwSetWindowMonitorWayland()</title>
<indexterm><primary>_glfwSetWindowMonitorWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowMonitorWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMonitorWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int xpos, int ypos, int width, int height, int refreshRate)</computeroutput></para><para>
Definition at line 1038 of file wl_window.c.</para>
<programlisting>1043 {
1044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor)
1045 &#32;&#32;&#32;&#32;{
1046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setFullscreen(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;monitor,&#32;refreshRate);
1047 &#32;&#32;&#32;&#32;}
1048 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1049 &#32;&#32;&#32;&#32;{
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
1051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_unset_fullscreen(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel);
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setIdleInhibitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>);
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.decorationManager)
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;createDecorations(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1055 &#32;&#32;&#32;&#32;}
1056 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a5cfc56e9a5e1e8dd88862c9c7b8a6f7f">_glfwInputWindowMonitor</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;monitor);
1057 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1acad95c7e85177725f95463ffe86015d4"/>    <section>
    <title>_glfwSetWindowMousePassthroughWayland()</title>
<indexterm><primary>_glfwSetWindowMousePassthroughWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowMousePassthroughWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMousePassthroughWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1116 of file wl_window.c.</para>
<programlisting>1117 {
1118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
1119 &#32;&#32;&#32;&#32;{
1120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_region*&#32;<link linkend="_structregion">region</link>&#32;=&#32;wl_compositor_create_region(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.compositor);
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_set_input_region(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface,&#32;<link linkend="_structregion">region</link>);
1122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_region_destroy(<link linkend="_structregion">region</link>);
1123 &#32;&#32;&#32;&#32;}
1124 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_set_input_region(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface,&#32;0);
1126 &#32;&#32;&#32;&#32;wl_surface_commit(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface);
1127 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a43f0c40c30c7bc0216b51cfae59c3629"/>    <section>
    <title>_glfwSetWindowOpacityWayland()</title>
<indexterm><primary>_glfwSetWindowOpacityWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowOpacityWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowOpacityWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float opacity)</computeroutput></para><para>
Definition at line 1134 of file wl_window.c.</para>
<programlisting>1135 {
1136 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
1137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;The&#32;platform&#32;does&#32;not&#32;support&#32;setting&#32;the&#32;window&#32;opacity&quot;</emphasis>);
1138 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a5adb7549f1afecf80241a68fe7d2f2e0"/>    <section>
    <title>_glfwSetWindowPosWayland()</title>
<indexterm><primary>_glfwSetWindowPosWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowPosWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowPosWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int xpos, int ypos)</computeroutput></para><para>
Definition at line 889 of file wl_window.c.</para>
<programlisting>890 {
891 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;Wayland&#32;client&#32;can&#32;not&#32;set&#32;its&#32;position,&#32;so&#32;just&#32;warn</emphasis>
892 
893 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga526fba20a01504a8086c763b6ca53ce5">GLFW_FEATURE_UNAVAILABLE</link>,
894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;The&#32;platform&#32;does&#32;not&#32;support&#32;setting&#32;the&#32;window&#32;position&quot;</emphasis>);
895 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1aa7d932102710313b7cc131d45413cd06"/>    <section>
    <title>_glfwSetWindowResizableWayland()</title>
<indexterm><primary>_glfwSetWindowResizableWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowResizableWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowResizableWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1091 of file wl_window.c.</para>
<programlisting>1092 {
1093 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO</emphasis>
1094 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga5dda77e023e83151e8bd55a6758f946a">GLFW_FEATURE_UNIMPLEMENTED</link>,
1095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Wayland:&#32;Window&#32;attribute&#32;setting&#32;not&#32;implemented&#32;yet&quot;</emphasis>);
1096 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1acd2b24bb6d3dc8bf27de6306a5d5397d"/>    <section>
    <title>_glfwSetWindowSizeLimitsWayland()</title>
<indexterm><primary>_glfwSetWindowSizeLimitsWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowSizeLimitsWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeLimitsWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int minwidth, int minheight, int maxwidth, int maxheight)</computeroutput></para><para>
Definition at line 912 of file wl_window.c.</para>
<programlisting>915 {
916 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
917 &#32;&#32;&#32;&#32;{
918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(minwidth&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;minheight&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;minwidth&#32;=&#32;minheight&#32;=&#32;0;
920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxwidth&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;maxheight&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxwidth&#32;=&#32;maxheight&#32;=&#32;0;
922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_set_min_size(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel,&#32;minwidth,&#32;minheight);
923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_set_max_size(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel,&#32;maxwidth,&#32;maxheight);
924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_commit(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.surface);
925 &#32;&#32;&#32;&#32;}
926 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a782e4e77e16e03c5340748e43e808828"/>    <section>
    <title>_glfwSetWindowSizeWayland()</title>
<indexterm><primary>_glfwSetWindowSizeWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowSizeWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int width, int height)</computeroutput></para><para>
Definition at line 905 of file wl_window.c.</para>
<programlisting>906 {
907 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.width&#32;=&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>;
908 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.height&#32;=&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
909 &#32;&#32;&#32;&#32;resizeWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
910 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a2a03cb3eb1fa3720991ad2503dd65e2a"/>    <section>
    <title>_glfwSetWindowTitleWayland()</title>
<indexterm><primary>_glfwSetWindowTitleWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwSetWindowTitleWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowTitleWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const char * title)</computeroutput></para><para>
Definition at line 864 of file wl_window.c.</para>
<programlisting>865 {
866 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.title)
867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.title);
868 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.title&#32;=&#32;<link linkend="_init_8c_1a7f0a5b0d879baead229ef5e7381648e8">_glfw_strdup</link>(title);
869 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_toplevel_set_title(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel,&#32;title);
871 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a7a956e757e29f06d5efcae33b58025cb"/>    <section>
    <title>_glfwShowWindowWayland()</title>
<indexterm><primary>_glfwShowWindowWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwShowWindowWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwShowWindowWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1001 of file wl_window.c.</para>
<programlisting>1002 {
1003 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.visible)
1004 &#32;&#32;&#32;&#32;{
1005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;The&#32;XDG&#32;surface&#32;and&#32;role&#32;are&#32;created&#32;here&#32;so&#32;command-line&#32;applications</emphasis>
1006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;with&#32;off-screen&#32;windows&#32;do&#32;not&#32;appear&#32;in&#32;for&#32;example&#32;the&#32;Unity&#32;dock</emphasis>
1007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.xdg.toplevel)
1008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;createXdgSurface(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1009 
1010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.visible&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ad9d5a996eef8fe1afcacc325f4510d1b">_glfwInputWindowDamage</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1012 &#32;&#32;&#32;&#32;}
1013 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a21e32d7cde0c918c630329a1cde99f10"/>    <section>
    <title>_glfwTerminateWayland()</title>
<indexterm><primary>_glfwTerminateWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwTerminateWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwTerminateWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1383 of file wl_init.c.</para>
<programlisting>1384 {
1385 &#32;&#32;&#32;&#32;<link linkend="_egl__context_8c_1ab095be9ec2b3a40942da090ee7ab2960">_glfwTerminateEGL</link>();
1386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
1387 &#32;&#32;&#32;&#32;{
1388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ad4b9e48b150850f6ee00874f85036715">_glfwPlatformFreeModule</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>);
1389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1390 &#32;&#32;&#32;&#32;}
1391 
1392 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.composeState)
1393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a73858a1a46e83ed97773dbbbdc541bbd">xkb_compose_state_unref</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.composeState);
1394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap)
1395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a9707d19b164550101c688f6a8ad4cb56">xkb_keymap_unref</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.keymap);
1396 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state)
1397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a924ddb1dc7e73e83e207b2a1dc911504">xkb_state_unref</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.state);
1398 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a681e7c0153724884070e9c94069693fb">context</link>)
1399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a7d4180d6a0192d57ed6bab2162b12444">xkb_context_unref</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a681e7c0153724884070e9c94069693fb">context</link>);
1400 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
1401 &#32;&#32;&#32;&#32;{
1402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ad4b9e48b150850f6ee00874f85036715">_glfwPlatformFreeModule</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>);
1403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.xkb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1404 &#32;&#32;&#32;&#32;}
1405 
1406 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTheme)
1407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1af4ea3aeb622e33ebef78a5456e1f177f">wl_cursor_theme_destroy</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTheme);
1408 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI)
1409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1af4ea3aeb622e33ebef78a5456e1f177f">wl_cursor_theme_destroy</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorThemeHiDPI);
1410 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
1411 &#32;&#32;&#32;&#32;{
1412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ad4b9e48b150850f6ee00874f85036715">_glfwPlatformFreeModule</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>);
1413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1414 &#32;&#32;&#32;&#32;}
1415 
1416 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorSurface)
1417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_surface_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorSurface);
1418 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.subcompositor)
1419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_subcompositor_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.subcompositor);
1420 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.compositor)
1421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_compositor_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.compositor);
1422 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.shm)
1423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_shm_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.shm);
1424 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.viewporter)
1425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wp_viewporter_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.viewporter);
1426 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.decorationManager)
1427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zxdg_decoration_manager_v1_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.decorationManager);
1428 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.wmBase)
1429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdg_wm_base_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.wmBase);
1430 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource)
1431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_source_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataSource);
1432 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDevice)
1433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_device_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDevice);
1434 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataOffer)
1435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_offer_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataOffer);
1436 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDeviceManager)
1437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_data_device_manager_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.dataDeviceManager);
1438 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointer)
1439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_pointer_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointer);
1440 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keyboard)
1441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_keyboard_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keyboard);
1442 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.seat)
1443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_seat_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.seat);
1444 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.relativePointerManager)
1445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zwp_relative_pointer_manager_v1_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.relativePointerManager);
1446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointerConstraints)
1447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zwp_pointer_constraints_v1_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.pointerConstraints);
1448 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.idleInhibitManager)
1449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zwp_idle_inhibit_manager_v1_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.idleInhibitManager);
1450 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.registry)
1451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wl_registry_destroy(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.registry);
1452 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>)
1453 &#32;&#32;&#32;&#32;{
1454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a57bfe216b1e65a2208bc0f44ed3c4739">wl_display_flush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
1455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wl__platform_8h_1a80f20a11b3b544c9c07cf3cc5006ba04">wl_display_disconnect</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
1456 &#32;&#32;&#32;&#32;}
1457 
1458 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.timerfd&#32;&gt;=&#32;0)
1459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.timerfd);
1460 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTimerfd&#32;&gt;=&#32;0)
1461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.cursorTimerfd);
1462 
1463 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardString)
1464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardString);
1465 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString)
1466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.clipboardSendString);
1467 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a43d44933860ce6e5802733777edae04b"/>    <section>
    <title>_glfwWaitEventsTimeoutWayland()</title>
<indexterm><primary>_glfwWaitEventsTimeoutWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwWaitEventsTimeoutWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsTimeoutWayland (double timeout)</computeroutput></para><para>
Definition at line 1160 of file wl_window.c.</para>
<programlisting>1161 {
1162 &#32;&#32;&#32;&#32;handleEvents((<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>&#32;*&#32;1e3));
1163 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a7cc624f3d8429b0d35ad163092b4821a"/>    <section>
    <title>_glfwWaitEventsWayland()</title>
<indexterm><primary>_glfwWaitEventsWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwWaitEventsWayland</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsWayland (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1155 of file wl_window.c.</para>
<programlisting>1156 {
1157 &#32;&#32;&#32;&#32;handleEvents(-1);
1158 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1ab0d72e6bf663506ff3f138bc670b2f6c"/>    <section>
    <title>_glfwWindowFocusedWayland()</title>
<indexterm><primary>_glfwWindowFocusedWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwWindowFocusedWayland</secondary></indexterm>
<para><computeroutput>int _glfwWindowFocusedWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1059 of file wl_window.c.</para>
<programlisting>1060 {
1061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wl.keyboardFocus&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>;
1062 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1af427fb6a233af50a51858a9908d196fb"/>    <section>
    <title>_glfwWindowHoveredWayland()</title>
<indexterm><primary>_glfwWindowHoveredWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwWindowHoveredWayland</secondary></indexterm>
<para><computeroutput>int _glfwWindowHoveredWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1081 of file wl_window.c.</para>
<programlisting>1082 {
1083 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.hovered;
1084 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a44752c656c8cee3498776b851285dca6"/>    <section>
    <title>_glfwWindowIconifiedWayland()</title>
<indexterm><primary>_glfwWindowIconifiedWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwWindowIconifiedWayland</secondary></indexterm>
<para><computeroutput>int _glfwWindowIconifiedWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1064 of file wl_window.c.</para>
<programlisting>1065 {
1066 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;xdg-shell&#32;doesn’t&#32;give&#32;any&#32;way&#32;to&#32;request&#32;whether&#32;a&#32;surface&#32;is</emphasis>
1067 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;iconified.</emphasis>
1068 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1069 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1a7676d7f4167b65f29aedf393e14174ed"/>    <section>
    <title>_glfwWindowMaximizedWayland()</title>
<indexterm><primary>_glfwWindowMaximizedWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwWindowMaximizedWayland</secondary></indexterm>
<para><computeroutput>int _glfwWindowMaximizedWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1076 of file wl_window.c.</para>
<programlisting>1077 {
1078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.maximized;
1079 }
</programlisting>    </section><anchor xml:id="_wl__platform_8h_1abb9d2bf1aac035ff3ae3abcc9e0a7f09"/>    <section>
    <title>_glfwWindowVisibleWayland()</title>
<indexterm><primary>_glfwWindowVisibleWayland</primary><secondary>wl_platform.h</secondary></indexterm>
<indexterm><primary>wl_platform.h</primary><secondary>_glfwWindowVisibleWayland</secondary></indexterm>
<para><computeroutput>int _glfwWindowVisibleWayland (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1071 of file wl_window.c.</para>
<programlisting>1072 {
1073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;wl.visible;
1074 }
</programlisting></section>
</section>
</section>
