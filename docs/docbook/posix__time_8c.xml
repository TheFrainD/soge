<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_posix__time_8c">
<title>deps/glfw/src/posix_time.c File Reference</title>
<indexterm><primary>deps/glfw/src/posix_time.c</primary></indexterm>
<programlisting>#include &quot;internal.h&quot;
#include &lt;unistd.h&gt;
#include &lt;sys/time.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_posix__time_8c_1a6029c1379e357d7b4e8836e1c1ad2fa2">_glfwPlatformInitTimer</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_posix__time_8c_1a5ee7e09b380d3afdd3c2738b726a2a6e">_glfwPlatformGetTimerValue</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> <link linkend="_posix__time_8c_1ab3fe69b1eec5554114fe774623a15137">_glfwPlatformGetTimerFrequency</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_posix__time_8c_1ab3fe69b1eec5554114fe774623a15137"/>    <section>
    <title>_glfwPlatformGetTimerFrequency()</title>
<indexterm><primary>_glfwPlatformGetTimerFrequency</primary><secondary>posix_time.c</secondary></indexterm>
<indexterm><primary>posix_time.c</primary><secondary>_glfwPlatformGetTimerFrequency</secondary></indexterm>
<para><computeroutput><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _glfwPlatformGetTimerFrequency (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 59 of file posix_time.c.</para>
<programlisting>60 {
61 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aad3e22c47c3095922e6bcbab7f4fe113">timer</link>.posix.frequency;
62 }
</programlisting>    </section><anchor xml:id="_posix__time_8c_1a5ee7e09b380d3afdd3c2738b726a2a6e"/>    <section>
    <title>_glfwPlatformGetTimerValue()</title>
<indexterm><primary>_glfwPlatformGetTimerValue</primary><secondary>posix_time.c</secondary></indexterm>
<indexterm><primary>posix_time.c</primary><secondary>_glfwPlatformGetTimerValue</secondary></indexterm>
<para><computeroutput><link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link> _glfwPlatformGetTimerValue (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 52 of file posix_time.c.</para>
<programlisting>53 {
54 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>timespec&#32;ts;
55 &#32;&#32;&#32;&#32;clock_gettime(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aad3e22c47c3095922e6bcbab7f4fe113">timer</link>.posix.clock,&#32;&amp;ts);
56 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>)&#32;ts.tv_sec&#32;*&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aad3e22c47c3095922e6bcbab7f4fe113">timer</link>.posix.frequency&#32;+&#32;(<link linkend="_stdint_8h_1aec6fcb673ff035718c238c8c9d544c47">uint64_t</link>)&#32;ts.tv_nsec;
57 }
</programlisting>    </section><anchor xml:id="_posix__time_8c_1a6029c1379e357d7b4e8836e1c1ad2fa2"/>    <section>
    <title>_glfwPlatformInitTimer()</title>
<indexterm><primary>_glfwPlatformInitTimer</primary><secondary>posix_time.c</secondary></indexterm>
<indexterm><primary>posix_time.c</primary><secondary>_glfwPlatformInitTimer</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPlatformInitTimer (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 40 of file posix_time.c.</para>
<programlisting>41 {
42 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aad3e22c47c3095922e6bcbab7f4fe113">timer</link>.posix.clock&#32;=&#32;CLOCK_REALTIME;
43 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aad3e22c47c3095922e6bcbab7f4fe113">timer</link>.posix.frequency&#32;=&#32;1000000000;
44 
45 <emphasis role="preprocessor">#if&#32;defined(_POSIX_MONOTONIC_CLOCK)</emphasis>
46 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>timespec&#32;ts;
47 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(clock_gettime(CLOCK_MONOTONIC,&#32;&amp;ts)&#32;==&#32;0)
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1aad3e22c47c3095922e6bcbab7f4fe113">timer</link>.posix.clock&#32;=&#32;CLOCK_MONOTONIC;
49 <emphasis role="preprocessor">#endif</emphasis>
50 }
</programlisting></section>
</section>
</section>
