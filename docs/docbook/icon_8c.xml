<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_icon_8c">
<title>deps/glfw/tests/icon.c File Reference</title>
<indexterm><primary>deps/glfw/tests/icon.c</primary></indexterm>
<programlisting>#include &lt;glad/gl.h&gt;
#include &lt;GLFW/glfw3.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_icon_8c_1a09f9c3bf094ecaf707c673924ffd615a">GLAD_GL_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_icon_8c_1a088324ad8995e3eb76024e3e79083d48">GLFW_INCLUDE_NONE</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_icon_8c_1a3c04138a5bfe5d72780bb7e82a18e627">main</link> (int argc, char **argv)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const char *const <link linkend="_icon_8c_1a021e4ab27d6621eba526773d58961d2b">logo</link> []</para>
</listitem>
            <listitem><para>const unsigned char <link linkend="_icon_8c_1a9dd796d611e3405977f7f895638a5619">icon_colors</link> [5][4]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_icon_8c_1a09f9c3bf094ecaf707c673924ffd615a"/>    <section>
    <title>GLAD_GL_IMPLEMENTATION</title>
<indexterm><primary>GLAD_GL_IMPLEMENTATION</primary><secondary>icon.c</secondary></indexterm>
<indexterm><primary>icon.c</primary><secondary>GLAD_GL_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define GLAD_GL_IMPLEMENTATION</computeroutput></para><para>
Definition at line 30 of file icon.c.</para>
    </section><anchor xml:id="_icon_8c_1a088324ad8995e3eb76024e3e79083d48"/>    <section>
    <title>GLFW_INCLUDE_NONE</title>
<indexterm><primary>GLFW_INCLUDE_NONE</primary><secondary>icon.c</secondary></indexterm>
<indexterm><primary>icon.c</primary><secondary>GLFW_INCLUDE_NONE</secondary></indexterm>
<para><computeroutput>#define GLFW_INCLUDE_NONE</computeroutput></para><para>
Definition at line 32 of file icon.c.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_icon_8c_1a3c04138a5bfe5d72780bb7e82a18e627"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>icon.c</secondary></indexterm>
<indexterm><primary>icon.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (int argc, char ** argv)</computeroutput></para><para>
Definition at line 114 of file icon.c.</para>
<programlisting>115 {
116 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>;
117 
118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_group__init_1gab41771f0215a2e0afb4cf1cf98082d40">glfwInit</link>())
119 &#32;&#32;&#32;&#32;{
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;initialize&#32;GLFW\n&quot;</emphasis>);
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
122 &#32;&#32;&#32;&#32;}
123 
124 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_group__window_1ga680a02abe0e4494b6759d5703240713e">glfwCreateWindow</link>(200,&#32;200,&#32;<emphasis role="stringliteral">&quot;Window&#32;Icon&quot;</emphasis>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
126 &#32;&#32;&#32;&#32;{
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
128 
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;open&#32;GLFW&#32;window\n&quot;</emphasis>);
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
131 &#32;&#32;&#32;&#32;}
132 
133 &#32;&#32;&#32;&#32;<link linkend="_group__context_1gafd76c93e15ec8b0b90506a9936a46185">glfwMakeContextCurrent</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
134 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a7e9e0ebe65864f5f2bcd289c5736041b">gladLoadGL</link>(<link linkend="_group__context_1ga0e8af175218929615c16e74938c10f2a">glfwGetProcAddress</link>);
135 
136 &#32;&#32;&#32;&#32;<link linkend="_group__input_1gaa4cbcb81b939b8800e44cea971ddae47">glfwSetKeyCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;key_callback);
137 &#32;&#32;&#32;&#32;set_icon(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;cur_icon_color);
138 
139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_group__window_1gaa6162f67dfa38b8beda2fea623649332">glfwWindowShouldClose</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
140 &#32;&#32;&#32;&#32;{
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1afc250a2b6bf11f24bb73534a2f053c0d">glClear</link>(<link linkend="_glad_8h_1a947db9ff944c4b78e652144c3dd1060c">GL_COLOR_BUFFER_BIT</link>);
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1gafb827800eedbfcbc97b1e5408df668d7">glfwSwapBuffers</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link>();
144 &#32;&#32;&#32;&#32;}
145 
146 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga806747476b7247d292be3711c323ea10">glfwDestroyWindow</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
147 &#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
148 &#32;&#32;&#32;&#32;exit(EXIT_SUCCESS);
149 }
</programlisting></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_icon_8c_1a9dd796d611e3405977f7f895638a5619"/>    <section>
    <title>icon_colors</title>
<indexterm><primary>icon_colors</primary><secondary>icon.c</secondary></indexterm>
<indexterm><primary>icon.c</primary><secondary>icon_colors</secondary></indexterm>
<para><computeroutput>const unsigned char icon_colors[5][4]</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting>=
{
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;0,&#32;&#32;&#32;0,&#32;&#32;&#32;0,&#32;255&#32;},&#32;
&#32;&#32;&#32;&#32;{&#32;255,&#32;&#32;&#32;0,&#32;&#32;&#32;0,&#32;255&#32;},&#32;
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;0,&#32;255,&#32;&#32;&#32;0,&#32;255&#32;},&#32;
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;0,&#32;&#32;&#32;0,&#32;255,&#32;255&#32;},&#32;
&#32;&#32;&#32;&#32;{&#32;255,&#32;255,&#32;255,&#32;255&#32;}&#32;&#32;
}
</programlisting><para>
Definition at line 60 of file icon.c.</para>
    </section><anchor xml:id="_icon_8c_1a021e4ab27d6621eba526773d58961d2b"/>    <section>
    <title>logo</title>
<indexterm><primary>logo</primary><secondary>icon.c</secondary></indexterm>
<indexterm><primary>icon.c</primary><secondary>logo</secondary></indexterm>
<para><computeroutput>const char* const logo[]</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting>=
{
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;................&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;................&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0000..0......&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0.....0......&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0.00..0......&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0..0..0......&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0000..0000...&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;................&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;................&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...000..0...0...&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0....0...0...&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...000..0.0.0...&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0....0.0.0...&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;...0....00000...&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;................&quot;</emphasis>,
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;................&quot;</emphasis>
}
</programlisting><para>
Definition at line 40 of file icon.c.</para>
</section>
</section>
</section>
