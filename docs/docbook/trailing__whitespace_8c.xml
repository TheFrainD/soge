<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_trailing__whitespace_8c">
<title>deps/stb/tools/trailing_whitespace.c File Reference</title>
<indexterm><primary>deps/stb/tools/trailing_whitespace.c</primary></indexterm>
<programlisting>#include &quot;stb.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_trailing__whitespace_8c_1a5640e9acc84db268e2628d4c5dad308c">STB_DEFINE</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_trailing__whitespace_8c_1a3c04138a5bfe5d72780bb7e82a18e627">main</link> (int argc, char **argv)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_trailing__whitespace_8c_1a5640e9acc84db268e2628d4c5dad308c"/>    <section>
    <title>STB_DEFINE</title>
<indexterm><primary>STB_DEFINE</primary><secondary>trailing_whitespace.c</secondary></indexterm>
<indexterm><primary>trailing_whitespace.c</primary><secondary>STB_DEFINE</secondary></indexterm>
<para><computeroutput>#define STB_DEFINE</computeroutput></para><para>
Definition at line 1 of file trailing_whitespace.c.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_trailing__whitespace_8c_1a3c04138a5bfe5d72780bb7e82a18e627"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>trailing_whitespace.c</secondary></indexterm>
<indexterm><primary>trailing_whitespace.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (int argc, char ** argv)</computeroutput></para><para>
Definition at line 4 of file trailing_whitespace.c.</para>
<programlisting>5 {
6 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
7 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=1;&#32;i&#32;&lt;&#32;argc;&#32;++i)&#32;{
8 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>;
9 &#32;&#32;&#32;&#32;&#32;&#32;FILE&#32;*<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>;
10 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;=&#32;<link linkend="_stb_8h_1a80d53e18fd67d6511e4c15dd04bc1d45">stb_file</link>(argv[i],&#32;&amp;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>);
11 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glad_8h_1a432111147038972f06e049e18a837002">end</link>,&#32;*<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>,&#32;*dest;
12 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;==&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;{
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Couldn&apos;t&#32;read&#32;file&#32;&apos;%s&apos;.\n&quot;</emphasis>,&#32;argv[i]);
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;&#32;
15 &#32;&#32;&#32;&#32;&#32;&#32;}
16 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;=&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;+&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>;
17 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;=&#32;dest&#32;=&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
18 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;&lt;&#32;<link linkend="_glad_8h_1a432111147038972f06e049e18a837002">end</link>)&#32;{
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glad_8h_1ac55adc720a3098c1b454d2a4647f4361">start</link>=0;
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;&lt;&#32;<link linkend="_glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;&amp;&amp;&#32;*<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;!=&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>&#32;&amp;&amp;&#32;*<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;!=&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>)
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*dest++&#32;=&#32;*<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>++;
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(dest-1&#32;&gt;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;&amp;&amp;&#32;(dest[-1]&#32;==&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>&#32;||&#32;dest[-1]&#32;==&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>))
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--dest;
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;&lt;&#32;<link linkend="_glad_8h_1a432111147038972f06e049e18a837002">end</link>&#32;&amp;&amp;&#32;(*<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>&#32;||&#32;*<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>&#32;==&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>))
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*dest++&#32;=&#32;*<link linkend="_glad_8h_1a72e0fdf0f845ded60b1fada9e9195cd7">src</link>++;
26 &#32;&#32;&#32;&#32;&#32;&#32;}
27 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;=&#32;fopen(argv[i],&#32;<emphasis role="stringliteral">&quot;wb&quot;</emphasis>);
28 &#32;&#32;&#32;&#32;&#32;&#32;fwrite(<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;1,&#32;dest-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
29 &#32;&#32;&#32;&#32;&#32;&#32;fclose(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
30 &#32;&#32;&#32;}
31 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
32 }
</programlisting></section>
</section>
</section>
