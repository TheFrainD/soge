<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stb__image_8h">
<title>deps/stb/stb_image.h File Reference</title>
<indexterm><primary>deps/stb/stb_image.h</primary></indexterm>
<programlisting>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stddef.h&gt;
#include &lt;string.h&gt;
#include &lt;limits.h&gt;
#include &lt;math.h&gt;
#include &lt;assert.h&gt;
#include &lt;stdint.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_stb__image_8h_1aed6cd14a3bf678808c4c179e808866aa">STBI_VERSION</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link>   extern</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef unsigned char <link linkend="_stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link></para>
</listitem>
            <listitem><para>typedef unsigned short <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum { 
<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67a0177ac2c5002f4f251bb766d41752029">STBI_default</link> = 0, 
<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67ad1eb95ca1fa7706bf732bf35a0ed40aa">STBI_grey</link> = 1, 
<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67af5829d16d4cca6077465c5abd346e2f8">STBI_grey_alpha</link> = 2, 
<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67aa59123e5d0af25f9b1539f5cf1facddf">STBI_rgb</link> = 3, 

<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67aa7b1af0c9f0310c3ada2aa29a32de293">STBI_rgb_alpha</link> = 4
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> * <link linkend="_stb__image_8h_1acae25d31bfae29d75482f07fecf2935f">stbi_load_from_memory</link> (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>

<para>STBI_NO_STDIO. </para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> * <link linkend="_stb__image_8h_1a95ebc5c42c1a753200be8d465e933af7">stbi_load_from_callbacks</link> (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const *clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> * <link linkend="_stb__image_8h_1aefdc7387857a14894bbf321e9ea4f048">stbi_load</link> (char const *filename, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> * <link linkend="_stb__image_8h_1aa9994764695597161e8f3776e97caa99">stbi_load_from_file</link> (FILE *<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> * <link linkend="_stb__image_8h_1ab81ccbc3526368d651117ef48df82b01">stbi_load_gif_from_memory</link> (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int **delays, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>, int *comp, int req_comp)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link> * <link linkend="_stb__image_8h_1ad30fd870ed2138ce8f38c9dd29b2f76a">stbi_load_16_from_memory</link> (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link> * <link linkend="_stb__image_8h_1a82bcc0957b6a4ebfdfa3d7f04fbaed18">stbi_load_16_from_callbacks</link> (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const *clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link> * <link linkend="_stb__image_8h_1a8a58b6bcd805afa1bdb14f988dd37fee">stbi_load_16</link> (char const *filename, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link> * <link linkend="_stb__image_8h_1a9ca2591f0987284129e82bf9dbcf7c6c">stbi_load_from_file_16</link> (FILE *<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float * <link linkend="_stb__image_8h_1a5d47fb76ce1e34eb0729ad932c9c48e2">stbi_loadf_from_memory</link> (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float * <link linkend="_stb__image_8h_1a6e7fd261af79ecef2208df3a6cc806bb">stbi_loadf_from_callbacks</link> (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const *clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float * <link linkend="_stb__image_8h_1af4f17acd30945a75901fdc022f90575f">stbi_loadf</link> (char const *filename, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float * <link linkend="_stb__image_8h_1ace82446ecd7b5c760cde062179660f46">stbi_loadf_from_file</link> (FILE *<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *channels_in_file, int desired_channels)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e">stbi_hdr_to_ldr_gamma</link> (float gamma)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258">stbi_hdr_to_ldr_scale</link> (float <link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb">stbi_ldr_to_hdr_gamma</link> (float gamma)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1af946583656a362a316b40c0421c20561">stbi_ldr_to_hdr_scale</link> (float <link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1af0e94f316fe1848f632517ca3c11d077">stbi_is_hdr_from_callbacks</link> (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const *clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e">stbi_is_hdr_from_memory</link> (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c">stbi_is_hdr</link> (char const *filename)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524">stbi_is_hdr_from_file</link> (FILE *<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>)</para>
</listitem>
            <listitem><para>const <link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char * <link linkend="_stb__image_8h_1ab59081c58fec889ef8ed66f539a5bb46">stbi_failure_reason</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb">stbi_image_free</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *retval_from_stbi_load)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1acfef077febce3bc3f1f339de478f3315">stbi_info_from_memory</link> (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *comp)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a86291c64cb663f41a34647d5e1abf363">stbi_info_from_callbacks</link> (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const *clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *comp)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f">stbi_is_16_bit_from_memory</link> (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f">stbi_is_16_bit_from_callbacks</link> (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const *clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *user)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70">stbi_info</link> (char const *filename, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *comp)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a28abedef4a0a93909332080df6be0021">stbi_info_from_file</link> (FILE *<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>, int *<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int *<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int *comp)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af">stbi_is_16_bit</link> (char const *filename)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62">stbi_is_16_bit_from_file</link> (FILE *<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9">stbi_set_unpremultiply_on_load</link> (int flag_true_if_should_unpremultiply)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b">stbi_convert_iphone_png_to_rgb</link> (int flag_true_if_should_convert)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4">stbi_set_flip_vertically_on_load</link> (int flag_true_if_should_flip)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca">stbi_set_unpremultiply_on_load_thread</link> (int flag_true_if_should_unpremultiply)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1aff26696e30b62a40dd00bc12415343f6">stbi_convert_iphone_png_to_rgb_thread</link> (int flag_true_if_should_convert)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee">stbi_set_flip_vertically_on_load_thread</link> (int flag_true_if_should_flip)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char * <link linkend="_stb__image_8h_1aaaa17a529bec51403cc23dc2e7c36d79">stbi_zlib_decode_malloc_guesssize</link> (const char *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int initial_size, int *outlen)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char * <link linkend="_stb__image_8h_1a038b0e741859a482b8b9d60167e54d27">stbi_zlib_decode_malloc_guesssize_headerflag</link> (const char *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int initial_size, int *outlen, int parse_header)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char * <link linkend="_stb__image_8h_1a4919b67b12e0e3acc5301f185ca77e2e">stbi_zlib_decode_malloc</link> (const char *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int *outlen)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48">stbi_zlib_decode_buffer</link> (char *obuffer, int olen, const char *ibuffer, int ilen)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char * <link linkend="_stb__image_8h_1a7fbd65c83495f13f22469fe493775739">stbi_zlib_decode_noheader_malloc</link> (const char *<link linkend="_structbuffer">buffer</link>, int <link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>, int *outlen)</para>
</listitem>
            <listitem><para><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int <link linkend="_stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e">stbi_zlib_decode_noheader_buffer</link> (char *obuffer, int olen, const char *ibuffer, int ilen)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_stb__image_8h_1aed6cd14a3bf678808c4c179e808866aa"/>    <section>
    <title>STBI_VERSION</title>
<indexterm><primary>STBI_VERSION</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>STBI_VERSION</secondary></indexterm>
<para><computeroutput>#define STBI_VERSION   1</computeroutput></para><para>
Definition at line 371 of file stb_image.h.</para>
    </section><anchor xml:id="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2"/>    <section>
    <title>STBIDEF</title>
<indexterm><primary>STBIDEF</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>STBIDEF</secondary></indexterm>
<para><computeroutput>#define STBIDEF   extern</computeroutput></para><para>
Definition at line 395 of file stb_image.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_stb__image_8h_1a28eb51a1512ce382ee50f20e1d04d50d"/>    <section>
    <title>stbi_uc</title>
<indexterm><primary>stbi_uc</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_uc</secondary></indexterm>
<para><computeroutput>typedef unsigned char <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link></computeroutput></para><para>
Definition at line 384 of file stb_image.h.</para>
    </section><anchor xml:id="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2"/>    <section>
    <title>stbi_us</title>
<indexterm><primary>stbi_us</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_us</secondary></indexterm>
<para><computeroutput>typedef unsigned short <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link></computeroutput></para><para>
Definition at line 385 of file stb_image.h.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBI_default</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>STBI_default</secondary></indexterm>
<anchor xml:id="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67a0177ac2c5002f4f251bb766d41752029"/>STBI_default</entry><entry></entry></row><row><entry><indexterm><primary>STBI_grey</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>STBI_grey</secondary></indexterm>
<anchor xml:id="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67ad1eb95ca1fa7706bf732bf35a0ed40aa"/>STBI_grey</entry><entry></entry></row><row><entry><indexterm><primary>STBI_grey_alpha</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>STBI_grey_alpha</secondary></indexterm>
<anchor xml:id="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67af5829d16d4cca6077465c5abd346e2f8"/>STBI_grey_alpha</entry><entry></entry></row><row><entry><indexterm><primary>STBI_rgb</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>STBI_rgb</secondary></indexterm>
<anchor xml:id="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67aa59123e5d0af25f9b1539f5cf1facddf"/>STBI_rgb</entry><entry></entry></row><row><entry><indexterm><primary>STBI_rgb_alpha</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>STBI_rgb_alpha</secondary></indexterm>
<anchor xml:id="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67aa7b1af0c9f0310c3ada2aa29a32de293"/>STBI_rgb_alpha</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 373 of file stb_image.h.</para>
<programlisting>374 {
375 &#32;&#32;&#32;<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67a0177ac2c5002f4f251bb766d41752029">STBI_default</link>&#32;=&#32;0,&#32;<emphasis role="comment">//&#32;only&#32;used&#32;for&#32;desired_channels</emphasis>
376 
377 &#32;&#32;&#32;<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67ad1eb95ca1fa7706bf732bf35a0ed40aa">STBI_grey</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;1,
378 &#32;&#32;&#32;<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67af5829d16d4cca6077465c5abd346e2f8">STBI_grey_alpha</link>&#32;=&#32;2,
379 &#32;&#32;&#32;<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67aa59123e5d0af25f9b1539f5cf1facddf">STBI_rgb</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;3,
380 &#32;&#32;&#32;<link linkend="_stb__image_8h_1a9334a5b9057f32da96db9b5c6a045d67aa7b1af0c9f0310c3ada2aa29a32de293">STBI_rgb_alpha</link>&#32;&#32;=&#32;4
381 };
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_stb__image_8h_1a23525ef2b882f3de426b47ecf8d9151b"/>    <section>
    <title>stbi_convert_iphone_png_to_rgb()</title>
<indexterm><primary>stbi_convert_iphone_png_to_rgb</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_convert_iphone_png_to_rgb</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_convert_iphone_png_to_rgb (int flag_true_if_should_convert)</computeroutput></para><para>
Definition at line 2653 of file stb_image.c.</para>
<programlisting>2654 {
2655 &#32;&#32;&#32;stbi_de_iphone_flag&#32;=&#32;flag_true_if_should_convert;
2656 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1aff26696e30b62a40dd00bc12415343f6"/>    <section>
    <title>stbi_convert_iphone_png_to_rgb_thread()</title>
<indexterm><primary>stbi_convert_iphone_png_to_rgb_thread</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_convert_iphone_png_to_rgb_thread</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_convert_iphone_png_to_rgb_thread (int flag_true_if_should_convert)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1ab59081c58fec889ef8ed66f539a5bb46"/>    <section>
    <title>stbi_failure_reason()</title>
<indexterm><primary>stbi_failure_reason</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_failure_reason</secondary></indexterm>
<para><computeroutput>const <link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char* stbi_failure_reason (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 513 of file stb_image.c.</para>
<programlisting>514 {
515 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;failure_reason;
516 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1ab18889e43518d6b4421b705782bb1b5e"/>    <section>
    <title>stbi_hdr_to_ldr_gamma()</title>
<indexterm><primary>stbi_hdr_to_ldr_gamma</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_hdr_to_ldr_gamma</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_hdr_to_ldr_gamma (float gamma)</computeroutput></para><para>
Definition at line 716 of file stb_image.c.</para>
<programlisting>716 {&#32;h2l_gamma_i&#32;=&#32;1/gamma;&#32;}
</programlisting>    </section><anchor xml:id="_stb__image_8h_1ae21cc1184eeb5cc814699f1ed62c5258"/>    <section>
    <title>stbi_hdr_to_ldr_scale()</title>
<indexterm><primary>stbi_hdr_to_ldr_scale</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_hdr_to_ldr_scale</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_hdr_to_ldr_scale (float scale)</computeroutput></para><para>
Definition at line 717 of file stb_image.c.</para>
<programlisting>717 {&#32;h2l_scale_i&#32;=&#32;1/<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>;&#32;}
</programlisting>    </section><anchor xml:id="_stb__image_8h_1ad3e11bb44412a7ba348acfbad09caacb"/>    <section>
    <title>stbi_image_free()</title>
<indexterm><primary>stbi_image_free</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_image_free</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_image_free (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * retval_from_stbi_load)</computeroutput></para><para>
Definition at line 539 of file stb_image.c.</para>
<programlisting>540 {
541 &#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(retval_from_stbi_load);
542 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1aede708cca1304520b2afcf4d5eb61d70"/>    <section>
    <title>stbi_info()</title>
<indexterm><primary>stbi_info</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_info</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_info (char const * filename, int * x, int * y, int * comp)</computeroutput></para><para>
Definition at line 4542 of file stb_image.c.</para>
<programlisting>4543 {
4544 &#32;&#32;&#32;&#32;FILE&#32;*<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;=&#32;fopen(filename,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
4545 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
4546 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_stb__image_8c_1a43133ab631c96e9096c7f34895c05ccc">e</link>(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
4547 &#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_stb__image_8c_1a5560f2807ab53f12ab062235b14f3a3c">stbi_info_from_file</link>(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,&#32;comp);
4548 &#32;&#32;&#32;&#32;fclose(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
4549 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
4550 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a86291c64cb663f41a34647d5e1abf363"/>    <section>
    <title>stbi_info_from_callbacks()</title>
<indexterm><primary>stbi_info_from_callbacks</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_info_from_callbacks</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_info_from_callbacks (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const * clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * user, int * x, int * y, int * comp)</computeroutput></para><para>
Definition at line 4571 of file stb_image.c.</para>
<programlisting>4572 {
4573 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
4574 &#32;&#32;&#32;start_callbacks(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;user);
4575 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_info_main(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp);
4576 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a28abedef4a0a93909332080df6be0021"/>    <section>
    <title>stbi_info_from_file()</title>
<indexterm><primary>stbi_info_from_file</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_info_from_file</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_info_from_file (FILE * f, int * x, int * y, int * comp)</computeroutput></para><para>
Definition at line 4552 of file stb_image.c.</para>
<programlisting>4553 {
4554 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
4555 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
4556 &#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;pos&#32;=&#32;ftell(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
4557 &#32;&#32;&#32;start_file(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
4558 &#32;&#32;&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>&#32;=&#32;stbi_info_main(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp);
4559 &#32;&#32;&#32;fseek(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,pos,SEEK_SET);
4560 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
4561 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1acfef077febce3bc3f1f339de478f3315"/>    <section>
    <title>stbi_info_from_memory()</title>
<indexterm><primary>stbi_info_from_memory</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_info_from_memory</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_info_from_memory (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const * buffer, int len, int * x, int * y, int * comp)</computeroutput></para><para>
Definition at line 4564 of file stb_image.c.</para>
<programlisting>4565 {
4566 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
4567 &#32;&#32;&#32;start_mem(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_structbuffer">buffer</link>,<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>);
4568 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_info_main(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp);
4569 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a7d9af55a35382c011cc186f7b62c00af"/>    <section>
    <title>stbi_is_16_bit()</title>
<indexterm><primary>stbi_is_16_bit</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_16_bit</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_16_bit (char const * filename)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1a990e0e38ab6e600bd9cbf5d30abd2f8f"/>    <section>
    <title>stbi_is_16_bit_from_callbacks()</title>
<indexterm><primary>stbi_is_16_bit_from_callbacks</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_16_bit_from_callbacks</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_16_bit_from_callbacks (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const * clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * user)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1a42fa266b80bfde22a0781ba2112d1c62"/>    <section>
    <title>stbi_is_16_bit_from_file()</title>
<indexterm><primary>stbi_is_16_bit_from_file</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_16_bit_from_file</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_16_bit_from_file (FILE * f)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1a548d486e07e0eb95671cb200d3a9530f"/>    <section>
    <title>stbi_is_16_bit_from_memory()</title>
<indexterm><primary>stbi_is_16_bit_from_memory</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_16_bit_from_memory</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_16_bit_from_memory (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const * buffer, int len)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1ae70f9a302f7e87fd971075e7f758d55c"/>    <section>
    <title>stbi_is_hdr()</title>
<indexterm><primary>stbi_is_hdr</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_hdr</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_hdr (char const * filename)</computeroutput></para><para>
Definition at line 678 of file stb_image.c.</para>
<programlisting>679 {
680 &#32;&#32;&#32;FILE&#32;*<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;=&#32;fopen(filename,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
681 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structresult">result</link>=0;
682 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>)&#32;{
683 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_stb__image_8c_1a6b45e9af5f0b0f76cc33bcb5b08bb7d8">stbi_is_hdr_from_file</link>(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
684 &#32;&#32;&#32;&#32;&#32;&#32;fclose(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
685 &#32;&#32;&#32;}
686 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
687 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1af0e94f316fe1848f632517ca3c11d077"/>    <section>
    <title>stbi_is_hdr_from_callbacks()</title>
<indexterm><primary>stbi_is_hdr_from_callbacks</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_hdr_from_callbacks</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_hdr_from_callbacks (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const * clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * user)</computeroutput></para><para>
Definition at line 701 of file stb_image.c.</para>
<programlisting>702 {
703 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
704 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
705 &#32;&#32;&#32;start_callbacks(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;clbk,&#32;user);
706 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_hdr_test(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
707 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
708 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
709 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
710 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1aaf10d41631e1e9214fde1688bdbd8524"/>    <section>
    <title>stbi_is_hdr_from_file()</title>
<indexterm><primary>stbi_is_hdr_from_file</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_hdr_from_file</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_hdr_from_file (FILE * f)</computeroutput></para><para>
Definition at line 689 of file stb_image.c.</para>
<programlisting>690 {
691 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
692 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
693 &#32;&#32;&#32;start_file(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
694 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_hdr_test(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
695 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
696 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
697 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
698 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a5cbc6f5cbb3b2d0d87ee959fcee9d23e"/>    <section>
    <title>stbi_is_hdr_from_memory()</title>
<indexterm><primary>stbi_is_hdr_from_memory</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_is_hdr_from_memory</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_is_hdr_from_memory (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const * buffer, int len)</computeroutput></para><para>
Definition at line 664 of file stb_image.c.</para>
<programlisting>665 {
666 <emphasis role="preprocessor">&#32;&#32;&#32;#ifndef&#32;STBI_NO_HDR</emphasis>
667 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
668 &#32;&#32;&#32;start_mem(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_structbuffer">buffer</link>,<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>);
669 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_hdr_test(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
670 <emphasis role="preprocessor">&#32;&#32;&#32;#else</emphasis>
671 &#32;&#32;&#32;<link linkend="_stb__image_8c_1a3970ebac9a09e8116fa5855b334ca6ab">STBI_NOTUSED</link>(<link linkend="_structbuffer">buffer</link>);
672 &#32;&#32;&#32;<link linkend="_stb__image_8c_1a3970ebac9a09e8116fa5855b334ca6ab">STBI_NOTUSED</link>(<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>);
673 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
674 <emphasis role="preprocessor">&#32;&#32;&#32;#endif</emphasis>
675 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a1feccdcf726dcc6b5502e3efa85b7dbb"/>    <section>
    <title>stbi_ldr_to_hdr_gamma()</title>
<indexterm><primary>stbi_ldr_to_hdr_gamma</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_ldr_to_hdr_gamma</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_ldr_to_hdr_gamma (float gamma)</computeroutput></para><para>
Definition at line 719 of file stb_image.c.</para>
<programlisting>719 {&#32;l2h_gamma&#32;=&#32;gamma;&#32;}
</programlisting>    </section><anchor xml:id="_stb__image_8h_1af946583656a362a316b40c0421c20561"/>    <section>
    <title>stbi_ldr_to_hdr_scale()</title>
<indexterm><primary>stbi_ldr_to_hdr_scale</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_ldr_to_hdr_scale</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_ldr_to_hdr_scale (float scale)</computeroutput></para><para>
Definition at line 720 of file stb_image.c.</para>
<programlisting>720 {&#32;l2h_scale&#32;=&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>;&#32;}
</programlisting>    </section><anchor xml:id="_stb__image_8h_1aefdc7387857a14894bbf321e9ea4f048"/>    <section>
    <title>stbi_load()</title>
<indexterm><primary>stbi_load</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>* stbi_load (char const * filename, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>
Definition at line 572 of file stb_image.c.</para>
<programlisting>573 {
574 &#32;&#32;&#32;FILE&#32;*<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;=&#32;fopen(filename,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
575 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
576 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_stb__image_8c_1a561c4b95e46ce2bbb293646527b41b5c">epuc</link>(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
577 &#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_stb__image_8c_1a1425e85e77b6ae1e630d9f5c6a764a3a">stbi_load_from_file</link>(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
578 &#32;&#32;&#32;fclose(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
579 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
580 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a8a58b6bcd805afa1bdb14f988dd37fee"/>    <section>
    <title>stbi_load_16()</title>
<indexterm><primary>stbi_load_16</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_16</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>* stbi_load_16 (char const * filename, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1a82bcc0957b6a4ebfdfa3d7f04fbaed18"/>    <section>
    <title>stbi_load_16_from_callbacks()</title>
<indexterm><primary>stbi_load_16_from_callbacks</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_16_from_callbacks</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>* stbi_load_16_from_callbacks (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const * clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * user, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1ad30fd870ed2138ce8f38c9dd29b2f76a"/>    <section>
    <title>stbi_load_16_from_memory()</title>
<indexterm><primary>stbi_load_16_from_memory</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_16_from_memory</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>* stbi_load_16_from_memory (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const * buffer, int len, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1a95ebc5c42c1a753200be8d465e933af7"/>    <section>
    <title>stbi_load_from_callbacks()</title>
<indexterm><primary>stbi_load_from_callbacks</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_from_callbacks</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>* stbi_load_from_callbacks (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const * clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * user, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>
Definition at line 603 of file stb_image.c.</para>
<programlisting>604 {
605 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
606 &#32;&#32;&#32;start_callbacks(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;clbk,&#32;user);
607 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_load_main(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
608 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1aa9994764695597161e8f3776e97caa99"/>    <section>
    <title>stbi_load_from_file()</title>
<indexterm><primary>stbi_load_from_file</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_from_file</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>* stbi_load_from_file (FILE * f, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>
Definition at line 582 of file stb_image.c.</para>
<programlisting>583 {
584 &#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
585 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
586 &#32;&#32;&#32;start_file(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
587 &#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;stbi_load_main(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
588 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>)&#32;{
589 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;need&#32;to&#32;&apos;unget&apos;&#32;all&#32;the&#32;characters&#32;in&#32;the&#32;IO&#32;buffer</emphasis>
590 &#32;&#32;&#32;&#32;&#32;&#32;fseek(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;-&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>.img_buffer_end&#32;-&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>.img_buffer),&#32;SEEK_CUR);
591 &#32;&#32;&#32;}
592 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
593 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a9ca2591f0987284129e82bf9dbcf7c6c"/>    <section>
    <title>stbi_load_from_file_16()</title>
<indexterm><primary>stbi_load_from_file_16</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_from_file_16</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8h_1a648037d4c55689328ba08c8f5d293df2">stbi_us</link>* stbi_load_from_file_16 (FILE * f, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1acae25d31bfae29d75482f07fecf2935f"/>    <section>
    <title>stbi_load_from_memory()</title>
<indexterm><primary>stbi_load_from_memory</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_from_memory</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>* stbi_load_from_memory (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const * buffer, int len, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>

<para>STBI_NO_STDIO. </para>
</para>
<para>
Definition at line 596 of file stb_image.c.</para>
<programlisting>597 {
598 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
599 &#32;&#32;&#32;start_mem(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_structbuffer">buffer</link>,<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>);
600 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stbi_load_main(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
601 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1ab81ccbc3526368d651117ef48df82b01"/>    <section>
    <title>stbi_load_gif_from_memory()</title>
<indexterm><primary>stbi_load_gif_from_memory</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_load_gif_from_memory</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link>* stbi_load_gif_from_memory (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const * buffer, int len, int ** delays, int * x, int * y, int * z, int * comp, int req_comp)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1af4f17acd30945a75901fdc022f90575f"/>    <section>
    <title>stbi_loadf()</title>
<indexterm><primary>stbi_loadf</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_loadf</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float* stbi_loadf (char const * filename, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>
Definition at line 640 of file stb_image.c.</para>
<programlisting>641 {
642 &#32;&#32;&#32;FILE&#32;*<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;=&#32;fopen(filename,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>);
643 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;*<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
644 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_stb__image_8c_1a6d4ec1e550488376c800b0fd015b61cb">epf</link>(<emphasis role="stringliteral">&quot;can&apos;t&#32;fopen&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;file&quot;</emphasis>);
645 &#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_stb__image_8c_1a1aeca869b8b68db1a81d6c8a5cc77e2d">stbi_loadf_from_file</link>(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
646 &#32;&#32;&#32;fclose(<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
647 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
648 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a6e7fd261af79ecef2208df3a6cc806bb"/>    <section>
    <title>stbi_loadf_from_callbacks()</title>
<indexterm><primary>stbi_loadf_from_callbacks</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_loadf_from_callbacks</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float* stbi_loadf_from_callbacks (<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link> const * clbk, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * user, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>
Definition at line 632 of file stb_image.c.</para>
<programlisting>633 {
634 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
635 &#32;&#32;&#32;start_callbacks(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;(<link linkend="_structstbi__io__callbacks">stbi_io_callbacks</link>&#32;*)&#32;clbk,&#32;user);
636 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_stb__image_8c_1af158585fc62315500a54fc9622339f91">stbi_loadf_main</link>(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
637 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1ace82446ecd7b5c760cde062179660f46"/>    <section>
    <title>stbi_loadf_from_file()</title>
<indexterm><primary>stbi_loadf_from_file</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_loadf_from_file</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float* stbi_loadf_from_file (FILE * f, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>
Definition at line 650 of file stb_image.c.</para>
<programlisting>651 {
652 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
653 &#32;&#32;&#32;start_file(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
654 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_stb__image_8c_1af158585fc62315500a54fc9622339f91">stbi_loadf_main</link>(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
655 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a5d47fb76ce1e34eb0729ad932c9c48e2"/>    <section>
    <title>stbi_loadf_from_memory()</title>
<indexterm><primary>stbi_loadf_from_memory</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_loadf_from_memory</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> float* stbi_loadf_from_memory (<link linkend="_stb__image_8c_1a28eb51a1512ce382ee50f20e1d04d50d">stbi_uc</link> const * buffer, int len, int * x, int * y, int * channels_in_file, int desired_channels)</computeroutput></para><para>
Definition at line 625 of file stb_image.c.</para>
<programlisting>626 {
627 &#32;&#32;&#32;<link linkend="_structstbi">stbi</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
628 &#32;&#32;&#32;start_mem(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_structbuffer">buffer</link>,<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>);
629 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_stb__image_8c_1af158585fc62315500a54fc9622339f91">stbi_loadf_main</link>(&amp;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,comp,req_comp);
630 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1ab89c177fc52f1bb2dc1c05e48129a0a4"/>    <section>
    <title>stbi_set_flip_vertically_on_load()</title>
<indexterm><primary>stbi_set_flip_vertically_on_load</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_set_flip_vertically_on_load</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_set_flip_vertically_on_load (int flag_true_if_should_flip)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1ad683202a3f6ec89729b5ad9220ae98ee"/>    <section>
    <title>stbi_set_flip_vertically_on_load_thread()</title>
<indexterm><primary>stbi_set_flip_vertically_on_load_thread</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_set_flip_vertically_on_load_thread</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_set_flip_vertically_on_load_thread (int flag_true_if_should_flip)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1a3f02e0053e1c8d08a3ed436e6a82c7c9"/>    <section>
    <title>stbi_set_unpremultiply_on_load()</title>
<indexterm><primary>stbi_set_unpremultiply_on_load</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_set_unpremultiply_on_load</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_set_unpremultiply_on_load (int flag_true_if_should_unpremultiply)</computeroutput></para><para>
Definition at line 2649 of file stb_image.c.</para>
<programlisting>2650 {
2651 &#32;&#32;&#32;stbi_unpremultiply_on_load&#32;=&#32;flag_true_if_should_unpremultiply;
2652 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1acf48dffaa1b2bb00f5a8d9af697c6aca"/>    <section>
    <title>stbi_set_unpremultiply_on_load_thread()</title>
<indexterm><primary>stbi_set_unpremultiply_on_load_thread</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_set_unpremultiply_on_load_thread</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbi_set_unpremultiply_on_load_thread (int flag_true_if_should_unpremultiply)</computeroutput></para>    </section><anchor xml:id="_stb__image_8h_1ae8447830c49bc17f8491e12c1f0ded48"/>    <section>
    <title>stbi_zlib_decode_buffer()</title>
<indexterm><primary>stbi_zlib_decode_buffer</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_zlib_decode_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_zlib_decode_buffer (char * obuffer, int olen, const char * ibuffer, int ilen)</computeroutput></para><para>
Definition at line 2363 of file stb_image.c.</para>
<programlisting>2364 {
2365 &#32;&#32;&#32;<link linkend="_structzbuf">zbuf</link>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>;
2366 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;ibuffer;
2367 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer_end&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;ibuffer&#32;+&#32;ilen;
2368 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_zlib(&amp;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,&#32;obuffer,&#32;olen,&#32;0,&#32;1))
2369 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout&#32;-&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2370 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2371 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2372 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a4919b67b12e0e3acc5301f185ca77e2e"/>    <section>
    <title>stbi_zlib_decode_malloc()</title>
<indexterm><primary>stbi_zlib_decode_malloc</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_zlib_decode_malloc</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char* stbi_zlib_decode_malloc (const char * buffer, int len, int * outlen)</computeroutput></para><para>
Definition at line 2342 of file stb_image.c.</para>
<programlisting>2343 {
2344 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_stb__image_8c_1ad58a5fbe941f1cc170dba564f6d2bdc3">stbi_zlib_decode_malloc_guesssize</link>(<link linkend="_structbuffer">buffer</link>,&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>,&#32;16384,&#32;outlen);
2345 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1aaaa17a529bec51403cc23dc2e7c36d79"/>    <section>
    <title>stbi_zlib_decode_malloc_guesssize()</title>
<indexterm><primary>stbi_zlib_decode_malloc_guesssize</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_zlib_decode_malloc_guesssize</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char* stbi_zlib_decode_malloc_guesssize (const char * buffer, int len, int initial_size, int * outlen)</computeroutput></para><para>
Definition at line 2326 of file stb_image.c.</para>
<programlisting>2327 {
2328 &#32;&#32;&#32;<link linkend="_structzbuf">zbuf</link>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>;
2329 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="_stb__leakcheck_8h_1ac71ce303a4b993665ae00f1e1293ba8b">malloc</link>(initial_size);
2330 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>&#32;==&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2331 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;<link linkend="_structbuffer">buffer</link>;
2332 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer_end&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;<link linkend="_structbuffer">buffer</link>&#32;+&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>;
2333 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_zlib(&amp;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>,&#32;initial_size,&#32;1,&#32;1))&#32;{
2334 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outlen)&#32;*outlen&#32;=&#32;(int)&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout&#32;-&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2335 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start;
2336 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2337 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2338 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2339 &#32;&#32;&#32;}
2340 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a038b0e741859a482b8b9d60167e54d27"/>    <section>
    <title>stbi_zlib_decode_malloc_guesssize_headerflag()</title>
<indexterm><primary>stbi_zlib_decode_malloc_guesssize_headerflag</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_zlib_decode_malloc_guesssize_headerflag</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char* stbi_zlib_decode_malloc_guesssize_headerflag (const char * buffer, int len, int initial_size, int * outlen, int parse_header)</computeroutput></para><para>
Definition at line 2347 of file stb_image.c.</para>
<programlisting>2348 {
2349 &#32;&#32;&#32;<link linkend="_structzbuf">zbuf</link>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>;
2350 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="_stb__leakcheck_8h_1ac71ce303a4b993665ae00f1e1293ba8b">malloc</link>(initial_size);
2351 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>&#32;==&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2352 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;<link linkend="_structbuffer">buffer</link>;
2353 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer_end&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;<link linkend="_structbuffer">buffer</link>&#32;+&#32;<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>;
2354 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_zlib(&amp;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>,&#32;initial_size,&#32;1,&#32;parse_header))&#32;{
2355 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outlen)&#32;*outlen&#32;=&#32;(int)&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout&#32;-&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2356 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start;
2357 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2358 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2359 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2360 &#32;&#32;&#32;}
2361 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a0d12efc011adfff7521f3b924feb0b0e"/>    <section>
    <title>stbi_zlib_decode_noheader_buffer()</title>
<indexterm><primary>stbi_zlib_decode_noheader_buffer</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_zlib_decode_noheader_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> int stbi_zlib_decode_noheader_buffer (char * obuffer, int olen, const char * ibuffer, int ilen)</computeroutput></para><para>
Definition at line 2390 of file stb_image.c.</para>
<programlisting>2391 {
2392 &#32;&#32;&#32;<link linkend="_structzbuf">zbuf</link>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>;
2393 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;ibuffer;
2394 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer_end&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;ibuffer&#32;+&#32;ilen;
2395 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_zlib(&amp;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,&#32;obuffer,&#32;olen,&#32;0,&#32;0))
2396 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout&#32;-&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2397 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2398 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
2399 }
</programlisting>    </section><anchor xml:id="_stb__image_8h_1a7fbd65c83495f13f22469fe493775739"/>    <section>
    <title>stbi_zlib_decode_noheader_malloc()</title>
<indexterm><primary>stbi_zlib_decode_noheader_malloc</primary><secondary>stb_image.h</secondary></indexterm>
<indexterm><primary>stb_image.h</primary><secondary>stbi_zlib_decode_noheader_malloc</secondary></indexterm>
<para><computeroutput><link linkend="_stb__image_8h_1a2d9ec9850cd12aefe7641b456266a4c2">STBIDEF</link> char* stbi_zlib_decode_noheader_malloc (const char * buffer, int len, int * outlen)</computeroutput></para><para>
Definition at line 2374 of file stb_image.c.</para>
<programlisting>2375 {
2376 &#32;&#32;&#32;<link linkend="_structzbuf">zbuf</link>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>;
2377 &#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;<link linkend="_stb__leakcheck_8h_1ac71ce303a4b993665ae00f1e1293ba8b">malloc</link>(16384);
2378 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>&#32;==&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2379 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;<link linkend="_structbuffer">buffer</link>;
2380 &#32;&#32;&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zbuffer_end&#32;=&#32;(<link linkend="_stb__image_8c_1a5e7a39bc0f2f7bad5568c1f1c5aaf761">stbi__uint8</link>&#32;*)&#32;<link linkend="_structbuffer">buffer</link>+<link linkend="_glext_8h_1a652168017ea9a8bbcead03d5c16269fb">len</link>;
2381 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(do_zlib(&amp;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>,&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>,&#32;16384,&#32;1,&#32;0))&#32;{
2382 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outlen)&#32;*outlen&#32;=&#32;(int)&#32;(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout&#32;-&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2383 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start;
2384 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
2385 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>.zout_start);
2386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2387 &#32;&#32;&#32;}
2388 }
</programlisting></section>
</section>
</section>
