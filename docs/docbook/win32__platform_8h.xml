<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_win32__platform_8h">
<title>deps/glfw/src/win32_platform.h File Reference</title>
<indexterm><primary>deps/glfw/src/win32_platform.h</primary></indexterm>
<programlisting>#include &lt;wctype.h&gt;
#include &lt;windows.h&gt;
#include &lt;dinput.h&gt;
#include &lt;xinput.h&gt;
#include &lt;dbt.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_c_h_a_n_g_e_f_i_l_t_e_r_s_t_r_u_c_t">CHANGEFILTERSTRUCT</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_d_w_m___b_l_u_r_b_e_h_i_n_d">DWM_BLURBEHIND</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wcontext_w_g_l">_GLFWcontextWGL</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wlibrary_w_g_l">_GLFWlibraryWGL</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a0172fbace36625330d5f0f163a1ddc1a">VC_EXTRALEAN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ac7bef5d85e3dcd73eef56ad39ffc84a9">WIN32_LEAN_AND_MEAN</link></para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a09ecca53f2cd1b8d1c566bedb245e141">UNICODE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a966cd377b9f3fdeb1432460c33352af1">WINVER</link>   0x0501</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ac50762666aa00bd3a4308158510f1748">_WIN32_WINNT</link>   0x0501</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a1d7ab29fdefabdb4e7e7cd27ac4c9934">DIRECTINPUT_VERSION</link>   0x0800</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a3a75770af38d05856eb2e9d1867b471c">OEMRESOURCE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a7b2918d422b3a1fe86a641f74818bb55">WM_MOUSEHWHEEL</link>   0x020E</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a799c22638393cccf5b4f8c2f9702f2b8">WM_DWMCOMPOSITIONCHANGED</link>   0x031E</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ae905d8e1f553108e163a295c4869e026">WM_DWMCOLORIZATIONCOLORCHANGED</link>   0x0320</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a0d35b9c78d456ccb46152c4fc9126d5c">WM_COPYGLOBALDATA</link>   0x0049</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a3e39d5f7fe13772b34a4ad42907084d6">WM_UNICHAR</link>   0x0109</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a587e15f5cad43acf6eb43214dadbefc8">UNICODE_NOCHAR</link>   0xFFFF</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a53e033000a66015712a3ddceea09ac5c">WM_DPICHANGED</link>   0x02E0</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa566dc24d4ca89efb0f714c7db67bc9c">GET_XBUTTON_WPARAM</link>(<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>)   (HIWORD(<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>))</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ae4a3f2aeae276c46f44d9d5c08452c12">EDS_ROTATEDMODE</link>   0x00000004</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1acfc9af5fc06a9d2336c4d876213a96f4">DISPLAY_DEVICE_ACTIVE</link>   0x00000001</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a40cc721e8dd42feab7e40baef74b2315">_WIN32_WINNT_WINBLUE</link>   0x0603</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a5464d3c7dccb650c7900dd408f6c96b3">_WIN32_WINNT_WIN8</link>   0x0602</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a3bcea7117c9fe385a2b760614aca8123">WM_GETDPISCALEDSIZE</link>   0x02e4</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ad7cf236b9f6824d4924c8397b9478e0c">USER_DEFAULT_SCREEN_DPI</link>   96</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a9a96efea829ad3f6577700fd829c8e26">OCR_HAND</link>   32649</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a5b38c2aa851a188b58fd168cd18eadf3">MSGFLT_ALLOW</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1afdc24a8b6542d25a4fe3463a743103ec">DWM_BB_ENABLE</link>   0x00000001</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a2bb024d8e6c9972b5f1eb2c5bc1eab95">DWM_BB_BLURREGION</link>   0x00000002</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ac007743843b15f477f33dc5c3dd0507a">DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</link>   ((HANDLE) -4)</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a4bcb1405eb8c8c83bcb5b3089e6d2547">IsWindowsVistaOrGreater</link>()</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a8bf1e311ab66df42fbbb524166279d03">IsWindows7OrGreater</link>()</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a1da7a817f596b4db22524e67ff16aea6">IsWindows8OrGreater</link>()</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a5e26976cd63d69f6ff83f646e6a6f27f">IsWindows8Point1OrGreater</link>()</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a2beecf9b7d4233876e8c0b9214099146">_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</link>()   <link linkend="_win32__platform_8h_1a5ce4ee459a0874a32dc1b0e79c3a0619">_glfwIsWindows10BuildOrGreaterWin32</link>(14393)</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a8889f30a5ad0faeff9dcfb915ac5cf27">_glfwIsWindows10CreatorsUpdateOrGreaterWin32</link>()   <link linkend="_win32__platform_8h_1a5ce4ee459a0874a32dc1b0e79c3a0619">_glfwIsWindows10BuildOrGreaterWin32</link>(15063)</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aaac2c967002577279cf5e5a0942d71ab">XINPUT_CAPS_WIRELESS</link>   0x0002</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a69a9e716aeb3e2b4b1f4a952fa7dd258">XINPUT_DEVSUBTYPE_WHEEL</link>   0x02</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a7a765e1be63dbaadb2ed6df4b9fa5503">XINPUT_DEVSUBTYPE_ARCADE_STICK</link>   0x03</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a9668d9770d61b974cd15bcc087da7a72">XINPUT_DEVSUBTYPE_FLIGHT_STICK</link>   0x04</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a13fcb4b8a7a3adba1c372147e80ca41a">XINPUT_DEVSUBTYPE_DANCE_PAD</link>   0x05</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa2054f7815848e93143eda442d9e5d63">XINPUT_DEVSUBTYPE_GUITAR</link>   0x06</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1afb3627c28993723c5c9170e9e13e53f3">XINPUT_DEVSUBTYPE_DRUM_KIT</link>   0x08</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a2135fc9a25e0728fcaa9506974212e31">XINPUT_DEVSUBTYPE_ARCADE_PAD</link>   0x13</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a1ed62c09d395884159e802440e233a94">XUSER_MAX_COUNT</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ab151a531d322638c706d3cb0d5af55cf">DIDFT_OPTIONAL</link>   0x80000000</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ac08792306c4cb9c9f258979cebd7895d">WGL_NUMBER_PIXEL_FORMATS_ARB</link>   0x2000</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1afddc80fbff35c1f270613b83090eca85">WGL_SUPPORT_OPENGL_ARB</link>   0x2010</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a9b0723a3d7c302c78c2c225a142e6e84">WGL_DRAW_TO_WINDOW_ARB</link>   0x2001</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a74709fd85aae5b059d39dd4b51694249">WGL_PIXEL_TYPE_ARB</link>   0x2013</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a9ef316350bc3d0261a55e22242da3573">WGL_TYPE_RGBA_ARB</link>   0x202b</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a131f3cc56b5489a6fd8f7efa556634ea">WGL_ACCELERATION_ARB</link>   0x2003</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a6e99b85ae842730daef27353a9e3d434">WGL_NO_ACCELERATION_ARB</link>   0x2025</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1acf6d0dc14bd58ab03b10d4cf1534625a">WGL_RED_BITS_ARB</link>   0x2015</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a266ab3ccd927f4caf9df1f426c960c1b">WGL_RED_SHIFT_ARB</link>   0x2016</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a4b67d94c2dbd3c5ad5235eeac10749db">WGL_GREEN_BITS_ARB</link>   0x2017</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a6d6fd2424c846bcd2800ea296e76113f">WGL_GREEN_SHIFT_ARB</link>   0x2018</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a25743041a05d4564428d28a2e0e35e09">WGL_BLUE_BITS_ARB</link>   0x2019</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a33128dba5304ec64ed26475722828a9b">WGL_BLUE_SHIFT_ARB</link>   0x201a</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a5d54c3606cc49e80cb6420b145a2119a">WGL_ALPHA_BITS_ARB</link>   0x201b</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa5f833102cee048157f3c96a887d9922">WGL_ALPHA_SHIFT_ARB</link>   0x201c</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ae70e59419a58e3c6c1951cad5e78c055">WGL_ACCUM_BITS_ARB</link>   0x201d</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ac457cdee636955daf428b8d5311f7870">WGL_ACCUM_RED_BITS_ARB</link>   0x201e</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a491952e52b2caad0be533c23b65b16e2">WGL_ACCUM_GREEN_BITS_ARB</link>   0x201f</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a0044e12ada2c0cee252e1205400413a1">WGL_ACCUM_BLUE_BITS_ARB</link>   0x2020</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aeb27a625f80aaa587b86c28ea44fbe65">WGL_ACCUM_ALPHA_BITS_ARB</link>   0x2021</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a75b1340d23a385c2b1ce88a303930820">WGL_DEPTH_BITS_ARB</link>   0x2022</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a0adda3bf0bcae1b1f66094f4331570bd">WGL_STENCIL_BITS_ARB</link>   0x2023</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ade9ba085a4a1ad9db1fea0ede7139948">WGL_AUX_BUFFERS_ARB</link>   0x2024</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a2aa289efbc19a76be9dc0ac303f01689">WGL_STEREO_ARB</link>   0x2012</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a8acd69a2be1c4ed51226145c520ecbe5">WGL_DOUBLE_BUFFER_ARB</link>   0x2011</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a99289a023da8e683eb7de95543e22c87">WGL_SAMPLES_ARB</link>   0x2042</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a18ba4b32abb0962574805c320cc6e00a">WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB</link>   0x20a9</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a8a600cc66dbc5a788e7b16dd9c116055">WGL_CONTEXT_DEBUG_BIT_ARB</link>   0x00000001</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aaec3bbb2c9fb813e229ad64f25130da6">WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB</link>   0x00000002</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a6847a02f9b4e6e9712a4b32250337dc1">WGL_CONTEXT_PROFILE_MASK_ARB</link>   0x9126</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a956f8c0391ca8b3076aacdd11123ab23">WGL_CONTEXT_CORE_PROFILE_BIT_ARB</link>   0x00000001</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ac0e0f83037fd693f85a0a382245cded4">WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB</link>   0x00000002</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a64d5f1fa63a1979e33aee2949f6f21ad">WGL_CONTEXT_MAJOR_VERSION_ARB</link>   0x2091</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a043b9ae0e73a1ff853339c02a3026096">WGL_CONTEXT_MINOR_VERSION_ARB</link>   0x2092</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa9b5de1c7cb84a809ad79296192a76d3">WGL_CONTEXT_FLAGS_ARB</link>   0x2094</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a5eb4392eceedc35a06f15bba687daff4">WGL_CONTEXT_ES2_PROFILE_BIT_EXT</link>   0x00000004</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa003e5620fa6d66c356ede014cdf1648">WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB</link>   0x00000004</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aba383b9c347928b3ba1d1f749763f697">WGL_LOSE_CONTEXT_ON_RESET_ARB</link>   0x8252</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a276501381fad6637056ecc04c5439e31">WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB</link>   0x8256</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ac2884bc3b423afa8ef44d4426370b7bf">WGL_NO_RESET_NOTIFICATION_ARB</link>   0x8261</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a82a475adf314346fe8a5375edfa0560d">WGL_CONTEXT_RELEASE_BEHAVIOR_ARB</link>   0x2097</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a1c52f05f8e71f0ad70cc196e390b8d9f">WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a0fbf2bf72421745143dd3505d18cb53c">WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB</link>   0x2098</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a396878906cfef21a6b43de8c238f6a40">WGL_CONTEXT_OPENGL_NO_ERROR_ARB</link>   0x31b3</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a58bd6eb67d94bcb21f147ed7871dcfde">WGL_COLORSPACE_EXT</link>   0x309d</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1af36ba6a6ad397b80748706a1c377ceca">WGL_COLORSPACE_SRGB_EXT</link>   0x3089</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa711b7b414242207d8f58d9e9a8feb73">ERROR_INVALID_VERSION_ARB</link>   0x2095</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a685e9dcd28f13baaa254a1c41a796a5a">ERROR_INVALID_PROFILE_ARB</link>   0x2096</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1adf20e6297613c960933d70196939049d">ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB</link>   0x2054</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1af9394dae29c2b796b68e4746e8a30064">XInputGetCapabilities</link>   _glfw.win32.xinput.GetCapabilities</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a3ae78a5ed579475a7cce56af08fb4b51">XInputGetState</link>   _glfw.win32.xinput.GetState</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a9c84b387ea213fa5c0d7dd7741e54e64">DirectInput8Create</link>   _glfw.win32.dinput8.Create</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a33bdd095adc0364c3ffd9ef077ea2f5b">SetProcessDPIAware</link>   _glfw.win32.user32.SetProcessDPIAware_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a88faa038236de05c5db02f7e95b79b5d">ChangeWindowMessageFilterEx</link>   _glfw.win32.user32.ChangeWindowMessageFilterEx_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a6854416daa1792955c56ba99bdeced11">EnableNonClientDpiScaling</link>   _glfw.win32.user32.EnableNonClientDpiScaling_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a067e1d6f40e35ce50c89b3df937f8bbe">SetProcessDpiAwarenessContext</link>   _glfw.win32.user32.SetProcessDpiAwarenessContext_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1adbb79683794601577be49f6ebe606dd0">GetDpiForWindow</link>   _glfw.win32.user32.GetDpiForWindow_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a13bab8e489d9ad05951150e27d3a6334">AdjustWindowRectExForDpi</link>   _glfw.win32.user32.AdjustWindowRectExForDpi_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ae42cc8f67518bd76a8ea709b485b0831">DwmIsCompositionEnabled</link>   _glfw.win32.dwmapi.IsCompositionEnabled</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a71f3d02be3cf5c51fe41284f8f3231b7">DwmFlush</link>   _glfw.win32.dwmapi.Flush</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a75c586ad15b6eafe051745230ff0cdeb">DwmEnableBlurBehindWindow</link>   _glfw.win32.dwmapi.EnableBlurBehindWindow</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a5e9ecbf435db8026186482a6ec574bff">DwmGetColorizationColor</link>   _glfw.win32.dwmapi.GetColorizationColor</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa2f8c4cf133af6bf2fb63a09d5cb9451">SetProcessDpiAwareness</link>   _glfw.win32.shcore.SetProcessDpiAwareness_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a0a09db022c26f82f539c0e925feae84a">GetDpiForMonitor</link>   _glfw.win32.shcore.GetDpiForMonitor_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1abfd9f0bf7f4fe1da260cc3a694d6228f">RtlVerifyVersionInfo</link>   _glfw.win32.ntdll.RtlVerifyVersionInfo_</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a8a2877f5187c2bbcaab779c518e4bb1a">wglSwapIntervalEXT</link>   _glfw.wgl.SwapIntervalEXT</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a8edcc08abf2e74d0331fdfe925e98199">wglGetPixelFormatAttribivARB</link>   _glfw.wgl.GetPixelFormatAttribivARB</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a134614db3b57ba3660b3bc2e01b6c886">wglGetExtensionsStringEXT</link>   _glfw.wgl.GetExtensionsStringEXT</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1adee3b196f14083e02d4e6f8222fd3791">wglGetExtensionsStringARB</link>   _glfw.wgl.GetExtensionsStringARB</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1acdca080586c894bbe2244900e8dfa24c">wglCreateContextAttribsARB</link>   _glfw.wgl.CreateContextAttribsARB</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a750f042435b05950e7739cbc3e0b2bd1">wglCreateContext</link>   _glfw.wgl.CreateContext</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aab1f95aa242eec7e28d7bc559b7e1d3b">wglDeleteContext</link>   _glfw.wgl.DeleteContext</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a1ac6c8ffa0b1d53fc4fc812f471d6524">wglGetProcAddress</link>   _glfw.wgl.GetProcAddress</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a8d5248de079ec0afe7a9ccaccfc0bfce">wglGetCurrentDC</link>   _glfw.wgl.GetCurrentDC</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1af28a48d6d098fef9e6e79cbe9df8c87d">wglGetCurrentContext</link>   _glfw.wgl.GetCurrentContext</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a2aa491735fbf4ee7df91c6a7cef32d5d">wglMakeCurrent</link>   _glfw.wgl.MakeCurrent</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a6658a50ceb506c7b2cbdf85d06cfb495">wglShareLists</link>   _glfw.wgl.ShareLists</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1afb084d3ede51d15e5e2ed59b06b61290">_GLFW_WNDCLASSNAME</link>   <link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&quot;GLFW30&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ae013c301a079d96c5fce953c5513b367">GLFW_WIN32_WINDOW_STATE</link>   <link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link>  win32;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a526b2749de71a7f953b62995c0866bdd">GLFW_WIN32_LIBRARY_WINDOW_STATE</link>   <link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link> win32;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1aa0f8e2d880036b2b2d701a9404ad4ee8">GLFW_WIN32_MONITOR_STATE</link>   <link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link> win32;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a53b2ba18b1fd997caeeb63b52b915bad">GLFW_WIN32_CURSOR_STATE</link>   <link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link>  win32;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1a42cbcf5bbaffc75bf3fc25a67d10fd49">GLFW_WGL_CONTEXT_STATE</link>   <link linkend="_struct___g_l_f_wcontext_w_g_l">_GLFWcontextWGL</link> wgl;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32__platform_8h_1ab24918430d19f38297bd784685991aed">GLFW_WGL_LIBRARY_CONTEXT_STATE</link>   <link linkend="_struct___g_l_f_wlibrary_w_g_l">_GLFWlibraryWGL</link> wgl;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef DWORD(WINAPI * <link linkend="_win32__platform_8h_1ab894020cfaceec8e0a7e24a2b8cf003a">PFN_XInputGetCapabilities</link>) (DWORD, DWORD, <link linkend="_xinput_8h_1acf54f59fb9d30352c7016615d997ee42">XINPUT_CAPABILITIES</link> *)</para>
</listitem>
            <listitem><para>typedef DWORD(WINAPI * <link linkend="_win32__platform_8h_1a0554b333dae0845c369b9d7234c695e9">PFN_XInputGetState</link>) (DWORD, <link linkend="_xinput_8h_1a0627b327913f1bc398ae904fc980e74c">XINPUT_STATE</link> *)</para>
</listitem>
            <listitem><para>typedef HRESULT(WINAPI * <link linkend="_win32__platform_8h_1a21e6e94714ccc6d706bfc1697bd9f71b">PFN_DirectInput8Create</link>) (HINSTANCE, DWORD, REFIID, LPVOID *, LPUNKNOWN)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a3b0088e74a9d3c97e116d080cbf93176">PFN_SetProcessDPIAware</link>) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1ac5444b0c65734773cf49c70a4e69abc4">PFN_ChangeWindowMessageFilterEx</link>) (HWND, UINT, DWORD, <link linkend="_struct_c_h_a_n_g_e_f_i_l_t_e_r_s_t_r_u_c_t">CHANGEFILTERSTRUCT</link> *)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a8a5c41e21d30070c8cd14a1621c3e5fb">PFN_EnableNonClientDpiScaling</link>) (HWND)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a23bae644f21a2c242a3e3589d5279350">PFN_SetProcessDpiAwarenessContext</link>) (HANDLE)</para>
</listitem>
            <listitem><para>typedef UINT(WINAPI * <link linkend="_win32__platform_8h_1aeffd71949cc91f9620f80af4c8c9aec6">PFN_GetDpiForWindow</link>) (HWND)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a193a4995605a686091c2ad135f2ebbd4">PFN_AdjustWindowRectExForDpi</link>) (LPRECT, DWORD, BOOL, DWORD, UINT)</para>
</listitem>
            <listitem><para>typedef HRESULT(WINAPI * <link linkend="_win32__platform_8h_1a531129c30409599eee72da5fcf2b38f6">PFN_DwmIsCompositionEnabled</link>) (BOOL *)</para>
</listitem>
            <listitem><para>typedef HRESULT(WINAPI * <link linkend="_win32__platform_8h_1a376123548a7bd8202932f6e95ff4d785">PFN_DwmFlush</link>) (VOID)</para>
</listitem>
            <listitem><para>typedef HRESULT(WINAPI * <link linkend="_win32__platform_8h_1a2670fd07424d67591b26e0a36857c727">PFN_DwmEnableBlurBehindWindow</link>) (HWND, const <link linkend="_struct_d_w_m___b_l_u_r_b_e_h_i_n_d">DWM_BLURBEHIND</link> *)</para>
</listitem>
            <listitem><para>typedef HRESULT(WINAPI * <link linkend="_win32__platform_8h_1a8fe0ef023e70b6dc0a253000f3337eef">PFN_DwmGetColorizationColor</link>) (DWORD *, BOOL *)</para>
</listitem>
            <listitem><para>typedef HRESULT(WINAPI * <link linkend="_win32__platform_8h_1a36d30a5f5f7942a50b272fa13058cf96">PFN_SetProcessDpiAwareness</link>) (<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0">PROCESS_DPI_AWARENESS</link>)</para>
</listitem>
            <listitem><para>typedef HRESULT(WINAPI * <link linkend="_win32__platform_8h_1a411247e61a6621babce2d06bb8a434db">PFN_GetDpiForMonitor</link>) (HMONITOR, <link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf">MONITOR_DPI_TYPE</link>, UINT *, UINT *)</para>
</listitem>
            <listitem><para>typedef LONG(WINAPI * <link linkend="_win32__platform_8h_1ae84ddc48e418de3da946b1ca744f44af">PFN_RtlVerifyVersionInfo</link>) (OSVERSIONINFOEXW *, ULONG, ULONGLONG)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a9157176fda95d4db49f3a552978c43e6">PFNWGLSWAPINTERVALEXTPROC</link>) (int)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a39931f248131b270558f144f21b3c2af">PFNWGLGETPIXELFORMATATTRIBIVARBPROC</link>) (HDC, int, int, UINT, const int *, int *)</para>
</listitem>
            <listitem><para>typedef HGLRC(WINAPI * <link linkend="_win32__platform_8h_1ada319dc3b2d571bc9f4d242e5cb9a543">PFNWGLCREATECONTEXTATTRIBSARBPROC</link>) (HDC, HGLRC, const int *)</para>
</listitem>
            <listitem><para>typedef HGLRC(WINAPI * <link linkend="_win32__platform_8h_1acd4ffae7f53c6e3df2f1bd1feae206a1">PFN_wglCreateContext</link>) (HDC)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a680be7b362dea206756ecf78046ec568">PFN_wglDeleteContext</link>) (HGLRC)</para>
</listitem>
            <listitem><para>typedef PROC(WINAPI * <link linkend="_win32__platform_8h_1afe938f6abc996c782668b4830fd49844">PFN_wglGetProcAddress</link>) (LPCSTR)</para>
</listitem>
            <listitem><para>typedef HDC(WINAPI * <link linkend="_win32__platform_8h_1ab7fdfe541f5de8218150ec71991b5e1a">PFN_wglGetCurrentDC</link>) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>typedef HGLRC(WINAPI * <link linkend="_win32__platform_8h_1ab67fa4ec6b012531a46090e0b6c73543">PFN_wglGetCurrentContext</link>) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a01b96444528ae07c30f644ad3b75dd79">PFN_wglMakeCurrent</link>) (HDC, HGLRC)</para>
</listitem>
            <listitem><para>typedef BOOL(WINAPI * <link linkend="_win32__platform_8h_1a4282d885859a70343d72b80af9380b27">PFN_wglShareLists</link>) (HGLRC, HGLRC)</para>
</listitem>
            <listitem><para>typedef <link linkend="_vulkan_8h_1abb605a7700670dd8420cc3841b939444">VkFlags</link> <link linkend="_win32__platform_8h_1ab89ca237e210dcda06c93ef3acc5caaa">VkWin32SurfaceCreateFlagsKHR</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link> <link linkend="_win32__platform_8h_1a020658817e5a625228e410cc2e1b57a0">VkWin32SurfaceCreateInfoKHR</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * <link linkend="_win32__platform_8h_1aae09ac436e491e590770b5585cd57874">PFN_vkCreateWin32SurfaceKHR</link>) (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link>, const <link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link> *, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *)</para>
</listitem>
            <listitem><para>typedef <link linkend="_vulkan_8h_1ae5d9faf75f583010e32ee49087a15326">VkBool32</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * <link linkend="_win32__platform_8h_1a91754c61c45a61e9b0858bca669ccf63">PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR</link>) (<link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>)</para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wcontext_w_g_l">_GLFWcontextWGL</link> <link linkend="_win32__platform_8h_1a5a3234465bb7e264821cadb19bc5a312">_GLFWcontextWGL</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wlibrary_w_g_l">_GLFWlibraryWGL</link> <link linkend="_win32__platform_8h_1ab650ea7dbcbbda029445f3c7a31f3754">_GLFWlibraryWGL</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link> <link linkend="_win32__platform_8h_1ab5efcddf006814cfe6ae2adc0657607f">_GLFWwindowWin32</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link> <link linkend="_win32__platform_8h_1a407d34356f6555d6cfc3cbdeb5b1bb7a">_GLFWlibraryWin32</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link> <link linkend="_win32__platform_8h_1a2bc910cef485c288b92c1ebae1c33092">_GLFWmonitorWin32</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link> <link linkend="_win32__platform_8h_1a9fd275bb321a21611f3d07cf610a0bee">_GLFWcursorWin32</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0">PROCESS_DPI_AWARENESS</link> { <link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019">PROCESS_DPI_UNAWARE</link> = 0, 
<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b">PROCESS_SYSTEM_DPI_AWARE</link> = 1, 
<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097">PROCESS_PER_MONITOR_DPI_AWARE</link> = 2
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf">MONITOR_DPI_TYPE</link> { <link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162">MDT_EFFECTIVE_DPI</link> = 0, 
<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3">MDT_ANGULAR_DPI</link> = 1, 
<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851">MDT_RAW_DPI</link> = 2, 
<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f">MDT_DEFAULT</link> = MDT_EFFECTIVE_DPI
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>const typedef char *WINAPI * <link linkend="_win32__platform_8h_1a7614b1a68db31fbed2cf336f2b74994b">PFNWGLGETEXTENSIONSSTRINGEXTPROC</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>const typedef char *WINAPI * <link linkend="_win32__platform_8h_1a3428606a981275d46b67922d5b97e498">PFNWGLGETEXTENSIONSSTRINGARBPROC</link> (HDC)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__platform_8h_1a3c83872580850a72c3cde2861fdc229f">_glfwConnectWin32</link> (int platformID, <link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link> *platform)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1af4042dcaff3b650d19d2052ea5778bbf">_glfwInitWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1ae5fd5e0d48189d6a1ea0e11418e9a236">_glfwTerminateWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__platform_8h_1a51e8da6667fce5464f07bc810fc780dc">_glfwRegisterWindowClassWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a85fb6be0a27d7f17a5d90eaec5320627">_glfwUnregisterWindowClassWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>WCHAR * <link linkend="_win32__platform_8h_1afcf517cf44f0f8a87489860bc9373a54">_glfwCreateWideStringFromUTF8Win32</link> (const char *<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>)</para>
</listitem>
            <listitem><para>char * <link linkend="_win32__platform_8h_1a17207e4093e353bc490b8c23fef40e3e">_glfwCreateUTF8FromWideStringWin32</link> (const WCHAR *<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>)</para>
</listitem>
            <listitem><para>BOOL <link linkend="_win32__platform_8h_1a78f377571872189aa6e46ef54afae7a4">_glfwIsWindowsVersionOrGreaterWin32</link> (WORD major, WORD minor, WORD sp)</para>
</listitem>
            <listitem><para>BOOL <link linkend="_win32__platform_8h_1a5ce4ee459a0874a32dc1b0e79c3a0619">_glfwIsWindows10BuildOrGreaterWin32</link> (WORD build)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link> (int <link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>, const char *description)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1afc4eeee5a7d5b62252466d3f6740c48b">_glfwUpdateKeyNamesWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a345b11644c658a9a94b0eeb4ed4a0618">_glfwPollMonitorsWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a52d8e36bf649dcb15198832d92206ce2">_glfwSetVideoModeWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> *desired)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1af4b02765bc562c8265503bb97c0cd8e9">_glfwRestoreVideoModeWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a666ce7b96d7717b71d8086be7b4e9fb3">_glfwGetHMONITORContentScaleWin32</link> (HMONITOR handle, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a37cb0ccc0788efd9a66af8f32bf5518c">_glfwCreateWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> *wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> *ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> *fbconfig)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1aa152206c5c520bd0dece9b837b143fa0">_glfwDestroyWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a86d6e8b4e6609cfeba7691e466b21184">_glfwSetWindowTitleWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const char *title)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a36bc130cc992e12d40e25a6a48e5a53b">_glfwSetWindowIconWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *images)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a11dbd52d555826a65ab903f5967a6c0d">_glfwGetWindowPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a497c96018316ca28c83a6ef2f1461a19">_glfwSetWindowPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int xpos, int ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1aa7047fda835205edd1f16fe265829654">_glfwGetWindowSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a658f42d345f10d3ab52613b030d801c6">_glfwSetWindowSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1ada7a6afa85a12d7a6ff3efe78e6abe0c">_glfwSetWindowSizeLimitsWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int minwidth, int minheight, int maxwidth, int maxheight)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1ab5e4af472645ebb89e26d1e9c6366aa4">_glfwSetWindowAspectRatioWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int numer, int denom)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a5f58eba94e456b57b09b2cc1841ce4c8">_glfwGetFramebufferSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a4d10fcc47127623f35696d95b5a14f05">_glfwGetWindowFrameSizeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>, int *<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>, int *<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>, int *<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a5c8171151c6daa5a7b1f22f45e1c4827">_glfwGetWindowContentScaleWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a4608d975b87d98c03adbf753b4ff6976">_glfwIconifyWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a7c516bd818882391fdaeabe7a13eba52">_glfwRestoreWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a1cf6741c3f061de6500770ce5116d14d">_glfwMaximizeWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a02bfef52e9e9352b7cf691434d01ec70">_glfwShowWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a41ff01be90f8280a68455451b1d5cd64">_glfwHideWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a072d8e8fc92daf82e56bf4d615d2cda5">_glfwRequestWindowAttentionWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a5e136a8b748e12c555e0c044c337358f">_glfwFocusWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a20e0a994ae4879caedde480b1dddf948">_glfwSetWindowMonitorWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int xpos, int ypos, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int refreshRate)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a9b069dba7d331d2cae0ecb3e975b027e">_glfwWindowFocusedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a1ef31772bba9bbbb70966126a08778d0">_glfwWindowIconifiedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a08f4731441f2215f589dc641eb015bb4">_glfwWindowVisibleWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a4640f26608b837f9793ef0ee923036eb">_glfwWindowMaximizedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a6e0135d2fd5538719c900c41424caa8b">_glfwWindowHoveredWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a5a02f919a9134279e0d46ce430986dbe">_glfwFramebufferTransparentWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1aa9ba9944e5152d29f1aa551f14d75b2d">_glfwSetWindowResizableWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a0d35deb7d39352e99fba8fa96013d969">_glfwSetWindowDecoratedWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a9da5d6290cad503b221e73482b67218e">_glfwSetWindowFloatingWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a08fda6580fcceccb5465cdb1fe770d7f">_glfwSetWindowMousePassthroughWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_win32__platform_8h_1abfdc4284feacb8b35eb527b81b630731">_glfwGetWindowOpacityWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a9428adda957ce508e3041119d670de0f">_glfwSetWindowOpacityWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float opacity)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1ad52b5863f16d0498407bbb612ea6f378">_glfwSetRawMouseMotionWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__platform_8h_1a87187d130a267838b8565c44603151e5">_glfwRawMouseMotionSupportedWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a8de69356bacf2073a7d4903d2d6ec741">_glfwPollEventsWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a482c57b8e130d21ad68ddf965f74e1a0">_glfwWaitEventsWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a62c585e2432977fa2b9fa4757a0d4cf9">_glfwWaitEventsTimeoutWin32</link> (double <link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1aaef33130746d9bb932ba1d7d7b51dabd">_glfwPostEmptyEventWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a731aa16e1109aa6963a7902af9b1e290">_glfwGetCursorPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double *xpos, double *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a7adc955bc72784fdf854cfd6e32ba287">_glfwSetCursorPosWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double xpos, double ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a0e6560aa1f1fc5f556543bd1dbc954f3">_glfwSetCursorModeWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_win32__platform_8h_1a7e6687a8499d9bf866660ad394b19750">_glfwGetScancodeNameWin32</link> (int scancode)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a2083a2b904b8909ef96ebe7e34f373c3">_glfwGetKeyScancodeWin32</link> (int <link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a5b60a1c1d42c9f51b6681afca63a154a">_glfwCreateCursorWin32</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *<link linkend="_structimage">image</link>, int xhot, int yhot)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1ab83aeb5b11824c61a09ee83ca90d22e3">_glfwCreateStandardCursorWin32</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, int shape)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a17e1a4d5ad34e0e6c9bfd31e78460618">_glfwDestroyCursorWin32</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1ab5d21e2433ee1d512ae83b39549e49fc">_glfwSetCursorWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1abf1a0ba92102516bdbc00c164edf5017">_glfwSetClipboardStringWin32</link> (const char *<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_win32__platform_8h_1af195ff960b1b462d052bfee6c8e64ea6">_glfwGetClipboardStringWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> <link linkend="_win32__platform_8h_1afdce1538a8e79a96033a8899db6e09c2">_glfwGetEGLPlatformWin32</link> (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> **<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> <link linkend="_win32__platform_8h_1a142f59c1c4c9897efbecad74e02698f1">_glfwGetEGLNativeDisplayWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> <link linkend="_win32__platform_8h_1a6c9791d77eda997cb697a353fc77d065">_glfwGetEGLNativeWindowWin32</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a42b3c1869e809150cfd5c661cf291108">_glfwGetRequiredInstanceExtensionsWin32</link> (char **extensions)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a80c3e9913415584c38f9af75ba2838a5">_glfwGetPhysicalDevicePresentationSupportWin32</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</para>
</listitem>
            <listitem><para><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> <link linkend="_win32__platform_8h_1ae332c39d7d375053b5c56d340fb8acd9">_glfwCreateWindowSurfaceWin32</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *surface)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a9df387b074c350e1cca8dbd26a375243">_glfwFreeMonitorWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a4261cca207894705081bbe41a912529b">_glfwGetMonitorPosWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a3fe7a2258a3ce26e3a8257c3d0ea1ca0">_glfwGetMonitorContentScaleWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a844e706059e08613de692291969111d2">_glfwGetMonitorWorkareaWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *xpos, int *ypos, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * <link linkend="_win32__platform_8h_1ab4ce13c23c2b2bc9635e36ee5387375e">_glfwGetVideoModesWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int *<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a7b43d8548648f7a49903525cda10e09c">_glfwGetVideoModeWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> *<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__platform_8h_1afb31cbafed71b1ea3fd13f1110d44af8">_glfwGetGammaRampWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a605f08f68a28c0bde60a12a0a399938e">_glfwSetGammaRampWin32</link> (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> *ramp)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__platform_8h_1a3e920595135793177be13d7ad39d20b7">_glfwInitJoysticksWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a219b355c48800354e45f6091d7b2e564">_glfwTerminateJoysticksWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__platform_8h_1a031cd959c74b03ac0523bbe77f3b117e">_glfwPollJoystickWin32</link> (<link linkend="_struct___g_l_f_wjoystick">_GLFWjoystick</link> *js, int <link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_win32__platform_8h_1ab4f284ba366d4134e9fb38c4f76c10a3">_glfwGetMappingNameWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a148681c996ee9d03ca7be51de6360ee4">_glfwUpdateGamepadGUIDWin32</link> (char *guid)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__platform_8h_1ac60452e7fb9f2b0fdc2050999a889fe1">_glfwInitWGL</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__platform_8h_1a441ed61fa295e53fca605f2e00c51e83">_glfwTerminateWGL</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__platform_8h_1a3a91c3b275d47f0fbe923cca11194502">_glfwCreateContextWGL</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> *ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> *fbconfig)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_win32__platform_8h_1afb084d3ede51d15e5e2ed59b06b61290"/>    <section>
    <title>_GLFW_WNDCLASSNAME</title>
<indexterm><primary>_GLFW_WNDCLASSNAME</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_GLFW_WNDCLASSNAME</secondary></indexterm>
<para><computeroutput>#define _GLFW_WNDCLASSNAME   <link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link>&quot;GLFW30&quot;</computeroutput></para><para>
Definition at line 356 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a2beecf9b7d4233876e8c0b9214099146"/>    <section>
    <title>_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</title>
<indexterm><primary>_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</secondary></indexterm>
<para><computeroutput>#define _glfwIsWindows10AnniversaryUpdateOrGreaterWin32( )   <link linkend="_win32__platform_8h_1a5ce4ee459a0874a32dc1b0e79c3a0619">_glfwIsWindows10BuildOrGreaterWin32</link>(14393)</computeroutput></para><para>
Definition at line 179 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8889f30a5ad0faeff9dcfb915ac5cf27"/>    <section>
    <title>_glfwIsWindows10CreatorsUpdateOrGreaterWin32</title>
<indexterm><primary>_glfwIsWindows10CreatorsUpdateOrGreaterWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwIsWindows10CreatorsUpdateOrGreaterWin32</secondary></indexterm>
<para><computeroutput>#define _glfwIsWindows10CreatorsUpdateOrGreaterWin32( )   <link linkend="_win32__platform_8h_1a5ce4ee459a0874a32dc1b0e79c3a0619">_glfwIsWindows10BuildOrGreaterWin32</link>(15063)</computeroutput></para><para>
Definition at line 181 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac50762666aa00bd3a4308158510f1748"/>    <section>
    <title>_WIN32_WINNT</title>
<indexterm><primary>_WIN32_WINNT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_WIN32_WINNT</secondary></indexterm>
<para><computeroutput>#define _WIN32_WINNT   0x0501</computeroutput></para><para>
Definition at line 58 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a5464d3c7dccb650c7900dd408f6c96b3"/>    <section>
    <title>_WIN32_WINNT_WIN8</title>
<indexterm><primary>_WIN32_WINNT_WIN8</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_WIN32_WINNT_WIN8</secondary></indexterm>
<para><computeroutput>#define _WIN32_WINNT_WIN8   0x0602</computeroutput></para><para>
Definition at line 108 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a40cc721e8dd42feab7e40baef74b2315"/>    <section>
    <title>_WIN32_WINNT_WINBLUE</title>
<indexterm><primary>_WIN32_WINNT_WINBLUE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_WIN32_WINNT_WINBLUE</secondary></indexterm>
<para><computeroutput>#define _WIN32_WINNT_WINBLUE   0x0603</computeroutput></para><para>
Definition at line 105 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a13bab8e489d9ad05951150e27d3a6334"/>    <section>
    <title>AdjustWindowRectExForDpi</title>
<indexterm><primary>AdjustWindowRectExForDpi</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>AdjustWindowRectExForDpi</secondary></indexterm>
<para><computeroutput>#define AdjustWindowRectExForDpi   _glfw.win32.user32.AdjustWindowRectExForDpi_</computeroutput></para><para>
Definition at line 291 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a88faa038236de05c5db02f7e95b79b5d"/>    <section>
    <title>ChangeWindowMessageFilterEx</title>
<indexterm><primary>ChangeWindowMessageFilterEx</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>ChangeWindowMessageFilterEx</secondary></indexterm>
<para><computeroutput>#define ChangeWindowMessageFilterEx   _glfw.win32.user32.ChangeWindowMessageFilterEx_</computeroutput></para><para>
Definition at line 287 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ab151a531d322638c706d3cb0d5af55cf"/>    <section>
    <title>DIDFT_OPTIONAL</title>
<indexterm><primary>DIDFT_OPTIONAL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DIDFT_OPTIONAL</secondary></indexterm>
<para><computeroutput>#define DIDFT_OPTIONAL   0x80000000</computeroutput></para><para>
Definition at line 215 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a9c84b387ea213fa5c0d7dd7741e54e64"/>    <section>
    <title>DirectInput8Create</title>
<indexterm><primary>DirectInput8Create</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DirectInput8Create</secondary></indexterm>
<para><computeroutput>#define DirectInput8Create   _glfw.win32.dinput8.Create</computeroutput></para><para>
Definition at line 277 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a1d7ab29fdefabdb4e7e7cd27ac4c9934"/>    <section>
    <title>DIRECTINPUT_VERSION</title>
<indexterm><primary>DIRECTINPUT_VERSION</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DIRECTINPUT_VERSION</secondary></indexterm>
<para><computeroutput>#define DIRECTINPUT_VERSION   0x0800</computeroutput></para><para>
Definition at line 62 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1acfc9af5fc06a9d2336c4d876213a96f4"/>    <section>
    <title>DISPLAY_DEVICE_ACTIVE</title>
<indexterm><primary>DISPLAY_DEVICE_ACTIVE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DISPLAY_DEVICE_ACTIVE</secondary></indexterm>
<para><computeroutput>#define DISPLAY_DEVICE_ACTIVE   0x00000001</computeroutput></para><para>
Definition at line 102 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac007743843b15f477f33dc5c3dd0507a"/>    <section>
    <title>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</title>
<indexterm><primary>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</secondary></indexterm>
<para><computeroutput>#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2   ((HANDLE) -4)</computeroutput></para><para>
Definition at line 162 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a2bb024d8e6c9972b5f1eb2c5bc1eab95"/>    <section>
    <title>DWM_BB_BLURREGION</title>
<indexterm><primary>DWM_BB_BLURREGION</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DWM_BB_BLURREGION</secondary></indexterm>
<para><computeroutput>#define DWM_BB_BLURREGION   0x00000002</computeroutput></para><para>
Definition at line 133 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1afdc24a8b6542d25a4fe3463a743103ec"/>    <section>
    <title>DWM_BB_ENABLE</title>
<indexterm><primary>DWM_BB_ENABLE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DWM_BB_ENABLE</secondary></indexterm>
<para><computeroutput>#define DWM_BB_ENABLE   0x00000001</computeroutput></para><para>
Definition at line 132 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a75c586ad15b6eafe051745230ff0cdeb"/>    <section>
    <title>DwmEnableBlurBehindWindow</title>
<indexterm><primary>DwmEnableBlurBehindWindow</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DwmEnableBlurBehindWindow</secondary></indexterm>
<para><computeroutput>#define DwmEnableBlurBehindWindow   _glfw.win32.dwmapi.EnableBlurBehindWindow</computeroutput></para><para>
Definition at line 300 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a71f3d02be3cf5c51fe41284f8f3231b7"/>    <section>
    <title>DwmFlush</title>
<indexterm><primary>DwmFlush</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DwmFlush</secondary></indexterm>
<para><computeroutput>#define DwmFlush   _glfw.win32.dwmapi.Flush</computeroutput></para><para>
Definition at line 299 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a5e9ecbf435db8026186482a6ec574bff"/>    <section>
    <title>DwmGetColorizationColor</title>
<indexterm><primary>DwmGetColorizationColor</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DwmGetColorizationColor</secondary></indexterm>
<para><computeroutput>#define DwmGetColorizationColor   _glfw.win32.dwmapi.GetColorizationColor</computeroutput></para><para>
Definition at line 301 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ae42cc8f67518bd76a8ea709b485b0831"/>    <section>
    <title>DwmIsCompositionEnabled</title>
<indexterm><primary>DwmIsCompositionEnabled</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>DwmIsCompositionEnabled</secondary></indexterm>
<para><computeroutput>#define DwmIsCompositionEnabled   _glfw.win32.dwmapi.IsCompositionEnabled</computeroutput></para><para>
Definition at line 298 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ae4a3f2aeae276c46f44d9d5c08452c12"/>    <section>
    <title>EDS_ROTATEDMODE</title>
<indexterm><primary>EDS_ROTATEDMODE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>EDS_ROTATEDMODE</secondary></indexterm>
<para><computeroutput>#define EDS_ROTATEDMODE   0x00000004</computeroutput></para><para>
Definition at line 99 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a6854416daa1792955c56ba99bdeced11"/>    <section>
    <title>EnableNonClientDpiScaling</title>
<indexterm><primary>EnableNonClientDpiScaling</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>EnableNonClientDpiScaling</secondary></indexterm>
<para><computeroutput>#define EnableNonClientDpiScaling   _glfw.win32.user32.EnableNonClientDpiScaling_</computeroutput></para><para>
Definition at line 288 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1adf20e6297613c960933d70196939049d"/>    <section>
    <title>ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB</title>
<indexterm><primary>ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB</secondary></indexterm>
<para><computeroutput>#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB   0x2054</computeroutput></para><para>
Definition at line 267 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a685e9dcd28f13baaa254a1c41a796a5a"/>    <section>
    <title>ERROR_INVALID_PROFILE_ARB</title>
<indexterm><primary>ERROR_INVALID_PROFILE_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>ERROR_INVALID_PROFILE_ARB</secondary></indexterm>
<para><computeroutput>#define ERROR_INVALID_PROFILE_ARB   0x2096</computeroutput></para><para>
Definition at line 266 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa711b7b414242207d8f58d9e9a8feb73"/>    <section>
    <title>ERROR_INVALID_VERSION_ARB</title>
<indexterm><primary>ERROR_INVALID_VERSION_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>ERROR_INVALID_VERSION_ARB</secondary></indexterm>
<para><computeroutput>#define ERROR_INVALID_VERSION_ARB   0x2095</computeroutput></para><para>
Definition at line 265 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa566dc24d4ca89efb0f714c7db67bc9c"/>    <section>
    <title>GET_XBUTTON_WPARAM</title>
<indexterm><primary>GET_XBUTTON_WPARAM</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GET_XBUTTON_WPARAM</secondary></indexterm>
<para><computeroutput>#define GET_XBUTTON_WPARAM( <link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>)   (HIWORD(<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>))</computeroutput></para><para>
Definition at line 96 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a0a09db022c26f82f539c0e925feae84a"/>    <section>
    <title>GetDpiForMonitor</title>
<indexterm><primary>GetDpiForMonitor</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GetDpiForMonitor</secondary></indexterm>
<para><computeroutput>#define GetDpiForMonitor   _glfw.win32.shcore.GetDpiForMonitor_</computeroutput></para><para>
Definition at line 307 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1adbb79683794601577be49f6ebe606dd0"/>    <section>
    <title>GetDpiForWindow</title>
<indexterm><primary>GetDpiForWindow</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GetDpiForWindow</secondary></indexterm>
<para><computeroutput>#define GetDpiForWindow   _glfw.win32.user32.GetDpiForWindow_</computeroutput></para><para>
Definition at line 290 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a42cbcf5bbaffc75bf3fc25a67d10fd49"/>    <section>
    <title>GLFW_WGL_CONTEXT_STATE</title>
<indexterm><primary>GLFW_WGL_CONTEXT_STATE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GLFW_WGL_CONTEXT_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WGL_CONTEXT_STATE   <link linkend="_struct___g_l_f_wcontext_w_g_l">_GLFWcontextWGL</link> wgl;</computeroutput></para><para>
Definition at line 364 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ab24918430d19f38297bd784685991aed"/>    <section>
    <title>GLFW_WGL_LIBRARY_CONTEXT_STATE</title>
<indexterm><primary>GLFW_WGL_LIBRARY_CONTEXT_STATE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GLFW_WGL_LIBRARY_CONTEXT_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WGL_LIBRARY_CONTEXT_STATE   <link linkend="_struct___g_l_f_wlibrary_w_g_l">_GLFWlibraryWGL</link> wgl;</computeroutput></para><para>
Definition at line 365 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a53b2ba18b1fd997caeeb63b52b915bad"/>    <section>
    <title>GLFW_WIN32_CURSOR_STATE</title>
<indexterm><primary>GLFW_WIN32_CURSOR_STATE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GLFW_WIN32_CURSOR_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WIN32_CURSOR_STATE   <link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link>  win32;</computeroutput></para><para>
Definition at line 362 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a526b2749de71a7f953b62995c0866bdd"/>    <section>
    <title>GLFW_WIN32_LIBRARY_WINDOW_STATE</title>
<indexterm><primary>GLFW_WIN32_LIBRARY_WINDOW_STATE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GLFW_WIN32_LIBRARY_WINDOW_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WIN32_LIBRARY_WINDOW_STATE   <link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link> win32;</computeroutput></para><para>
Definition at line 360 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa0f8e2d880036b2b2d701a9404ad4ee8"/>    <section>
    <title>GLFW_WIN32_MONITOR_STATE</title>
<indexterm><primary>GLFW_WIN32_MONITOR_STATE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GLFW_WIN32_MONITOR_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WIN32_MONITOR_STATE   <link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link> win32;</computeroutput></para><para>
Definition at line 361 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ae013c301a079d96c5fce953c5513b367"/>    <section>
    <title>GLFW_WIN32_WINDOW_STATE</title>
<indexterm><primary>GLFW_WIN32_WINDOW_STATE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>GLFW_WIN32_WINDOW_STATE</secondary></indexterm>
<para><computeroutput>#define GLFW_WIN32_WINDOW_STATE   <link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link>  win32;</computeroutput></para><para>
Definition at line 359 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8bf1e311ab66df42fbbb524166279d03"/>    <section>
    <title>IsWindows7OrGreater</title>
<indexterm><primary>IsWindows7OrGreater</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>IsWindows7OrGreater</secondary></indexterm>
<para><computeroutput>#define IsWindows7OrGreater( )</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a78f377571872189aa6e46ef54afae7a4">_glfwIsWindowsVersionOrGreaterWin32</link>(HIBYTE(_WIN32_WINNT_WIN7),&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(_WIN32_WINNT_WIN7),&#32;0)
</programlisting><para>
Definition at line 169 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a1da7a817f596b4db22524e67ff16aea6"/>    <section>
    <title>IsWindows8OrGreater</title>
<indexterm><primary>IsWindows8OrGreater</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>IsWindows8OrGreater</secondary></indexterm>
<para><computeroutput>#define IsWindows8OrGreater( )</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a78f377571872189aa6e46ef54afae7a4">_glfwIsWindowsVersionOrGreaterWin32</link>(HIBYTE(<link linkend="_win32__platform_8h_1a5464d3c7dccb650c7900dd408f6c96b3">_WIN32_WINNT_WIN8</link>),&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(<link linkend="_win32__platform_8h_1a5464d3c7dccb650c7900dd408f6c96b3">_WIN32_WINNT_WIN8</link>),&#32;0)
</programlisting><para>
Definition at line 172 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a5e26976cd63d69f6ff83f646e6a6f27f"/>    <section>
    <title>IsWindows8Point1OrGreater</title>
<indexterm><primary>IsWindows8Point1OrGreater</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>IsWindows8Point1OrGreater</secondary></indexterm>
<para><computeroutput>#define IsWindows8Point1OrGreater( )</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a78f377571872189aa6e46ef54afae7a4">_glfwIsWindowsVersionOrGreaterWin32</link>(HIBYTE(<link linkend="_win32__platform_8h_1a40cc721e8dd42feab7e40baef74b2315">_WIN32_WINNT_WINBLUE</link>),&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(<link linkend="_win32__platform_8h_1a40cc721e8dd42feab7e40baef74b2315">_WIN32_WINNT_WINBLUE</link>),&#32;0)
</programlisting><para>
Definition at line 175 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a4bcb1405eb8c8c83bcb5b3089e6d2547"/>    <section>
    <title>IsWindowsVistaOrGreater</title>
<indexterm><primary>IsWindowsVistaOrGreater</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>IsWindowsVistaOrGreater</secondary></indexterm>
<para><computeroutput>#define IsWindowsVistaOrGreater( )</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting>&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a78f377571872189aa6e46ef54afae7a4">_glfwIsWindowsVersionOrGreaterWin32</link>(HIBYTE(_WIN32_WINNT_VISTA),&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LOBYTE(_WIN32_WINNT_VISTA),&#32;0)
</programlisting><para>
Definition at line 166 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a5b38c2aa851a188b58fd168cd18eadf3"/>    <section>
    <title>MSGFLT_ALLOW</title>
<indexterm><primary>MSGFLT_ALLOW</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>MSGFLT_ALLOW</secondary></indexterm>
<para><computeroutput>#define MSGFLT_ALLOW   1</computeroutput></para><para>
Definition at line 127 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a9a96efea829ad3f6577700fd829c8e26"/>    <section>
    <title>OCR_HAND</title>
<indexterm><primary>OCR_HAND</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>OCR_HAND</secondary></indexterm>
<para><computeroutput>#define OCR_HAND   32649</computeroutput></para><para>
Definition at line 117 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a3a75770af38d05856eb2e9d1867b471c"/>    <section>
    <title>OEMRESOURCE</title>
<indexterm><primary>OEMRESOURCE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>OEMRESOURCE</secondary></indexterm>
<para><computeroutput>#define OEMRESOURCE</computeroutput></para><para>
Definition at line 65 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1abfd9f0bf7f4fe1da260cc3a694d6228f"/>    <section>
    <title>RtlVerifyVersionInfo</title>
<indexterm><primary>RtlVerifyVersionInfo</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>RtlVerifyVersionInfo</secondary></indexterm>
<para><computeroutput>#define RtlVerifyVersionInfo   _glfw.win32.ntdll.RtlVerifyVersionInfo_</computeroutput></para><para>
Definition at line 311 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a33bdd095adc0364c3ffd9ef077ea2f5b"/>    <section>
    <title>SetProcessDPIAware</title>
<indexterm><primary>SetProcessDPIAware</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>SetProcessDPIAware</secondary></indexterm>
<para><computeroutput>#define SetProcessDPIAware   _glfw.win32.user32.SetProcessDPIAware_</computeroutput></para><para>
Definition at line 286 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa2f8c4cf133af6bf2fb63a09d5cb9451"/>    <section>
    <title>SetProcessDpiAwareness</title>
<indexterm><primary>SetProcessDpiAwareness</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>SetProcessDpiAwareness</secondary></indexterm>
<para><computeroutput>#define SetProcessDpiAwareness   _glfw.win32.shcore.SetProcessDpiAwareness_</computeroutput></para><para>
Definition at line 306 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a067e1d6f40e35ce50c89b3df937f8bbe"/>    <section>
    <title>SetProcessDpiAwarenessContext</title>
<indexterm><primary>SetProcessDpiAwarenessContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>SetProcessDpiAwarenessContext</secondary></indexterm>
<para><computeroutput>#define SetProcessDpiAwarenessContext   _glfw.win32.user32.SetProcessDpiAwarenessContext_</computeroutput></para><para>
Definition at line 289 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a09ecca53f2cd1b8d1c566bedb245e141"/>    <section>
    <title>UNICODE</title>
<indexterm><primary>UNICODE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>UNICODE</secondary></indexterm>
<para><computeroutput>#define UNICODE</computeroutput></para><para>
Definition at line 48 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a587e15f5cad43acf6eb43214dadbefc8"/>    <section>
    <title>UNICODE_NOCHAR</title>
<indexterm><primary>UNICODE_NOCHAR</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>UNICODE_NOCHAR</secondary></indexterm>
<para><computeroutput>#define UNICODE_NOCHAR   0xFFFF</computeroutput></para><para>
Definition at line 90 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ad7cf236b9f6824d4924c8397b9478e0c"/>    <section>
    <title>USER_DEFAULT_SCREEN_DPI</title>
<indexterm><primary>USER_DEFAULT_SCREEN_DPI</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>USER_DEFAULT_SCREEN_DPI</secondary></indexterm>
<para><computeroutput>#define USER_DEFAULT_SCREEN_DPI   96</computeroutput></para><para>
Definition at line 114 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a0172fbace36625330d5f0f163a1ddc1a"/>    <section>
    <title>VC_EXTRALEAN</title>
<indexterm><primary>VC_EXTRALEAN</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>VC_EXTRALEAN</secondary></indexterm>
<para><computeroutput>#define VC_EXTRALEAN</computeroutput></para><para>
Definition at line 34 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a131f3cc56b5489a6fd8f7efa556634ea"/>    <section>
    <title>WGL_ACCELERATION_ARB</title>
<indexterm><primary>WGL_ACCELERATION_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ACCELERATION_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ACCELERATION_ARB   0x2003</computeroutput></para><para>
Definition at line 223 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aeb27a625f80aaa587b86c28ea44fbe65"/>    <section>
    <title>WGL_ACCUM_ALPHA_BITS_ARB</title>
<indexterm><primary>WGL_ACCUM_ALPHA_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ACCUM_ALPHA_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ACCUM_ALPHA_BITS_ARB   0x2021</computeroutput></para><para>
Definition at line 237 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ae70e59419a58e3c6c1951cad5e78c055"/>    <section>
    <title>WGL_ACCUM_BITS_ARB</title>
<indexterm><primary>WGL_ACCUM_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ACCUM_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ACCUM_BITS_ARB   0x201d</computeroutput></para><para>
Definition at line 233 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a0044e12ada2c0cee252e1205400413a1"/>    <section>
    <title>WGL_ACCUM_BLUE_BITS_ARB</title>
<indexterm><primary>WGL_ACCUM_BLUE_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ACCUM_BLUE_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ACCUM_BLUE_BITS_ARB   0x2020</computeroutput></para><para>
Definition at line 236 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a491952e52b2caad0be533c23b65b16e2"/>    <section>
    <title>WGL_ACCUM_GREEN_BITS_ARB</title>
<indexterm><primary>WGL_ACCUM_GREEN_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ACCUM_GREEN_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ACCUM_GREEN_BITS_ARB   0x201f</computeroutput></para><para>
Definition at line 235 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac457cdee636955daf428b8d5311f7870"/>    <section>
    <title>WGL_ACCUM_RED_BITS_ARB</title>
<indexterm><primary>WGL_ACCUM_RED_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ACCUM_RED_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ACCUM_RED_BITS_ARB   0x201e</computeroutput></para><para>
Definition at line 234 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a5d54c3606cc49e80cb6420b145a2119a"/>    <section>
    <title>WGL_ALPHA_BITS_ARB</title>
<indexterm><primary>WGL_ALPHA_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ALPHA_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ALPHA_BITS_ARB   0x201b</computeroutput></para><para>
Definition at line 231 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa5f833102cee048157f3c96a887d9922"/>    <section>
    <title>WGL_ALPHA_SHIFT_ARB</title>
<indexterm><primary>WGL_ALPHA_SHIFT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_ALPHA_SHIFT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_ALPHA_SHIFT_ARB   0x201c</computeroutput></para><para>
Definition at line 232 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ade9ba085a4a1ad9db1fea0ede7139948"/>    <section>
    <title>WGL_AUX_BUFFERS_ARB</title>
<indexterm><primary>WGL_AUX_BUFFERS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_AUX_BUFFERS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_AUX_BUFFERS_ARB   0x2024</computeroutput></para><para>
Definition at line 240 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a25743041a05d4564428d28a2e0e35e09"/>    <section>
    <title>WGL_BLUE_BITS_ARB</title>
<indexterm><primary>WGL_BLUE_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_BLUE_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_BLUE_BITS_ARB   0x2019</computeroutput></para><para>
Definition at line 229 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a33128dba5304ec64ed26475722828a9b"/>    <section>
    <title>WGL_BLUE_SHIFT_ARB</title>
<indexterm><primary>WGL_BLUE_SHIFT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_BLUE_SHIFT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_BLUE_SHIFT_ARB   0x201a</computeroutput></para><para>
Definition at line 230 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a58bd6eb67d94bcb21f147ed7871dcfde"/>    <section>
    <title>WGL_COLORSPACE_EXT</title>
<indexterm><primary>WGL_COLORSPACE_EXT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_COLORSPACE_EXT</secondary></indexterm>
<para><computeroutput>#define WGL_COLORSPACE_EXT   0x309d</computeroutput></para><para>
Definition at line 262 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1af36ba6a6ad397b80748706a1c377ceca"/>    <section>
    <title>WGL_COLORSPACE_SRGB_EXT</title>
<indexterm><primary>WGL_COLORSPACE_SRGB_EXT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_COLORSPACE_SRGB_EXT</secondary></indexterm>
<para><computeroutput>#define WGL_COLORSPACE_SRGB_EXT   0x3089</computeroutput></para><para>
Definition at line 263 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac0e0f83037fd693f85a0a382245cded4"/>    <section>
    <title>WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB</title>
<indexterm><primary>WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB   0x00000002</computeroutput></para><para>
Definition at line 249 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a956f8c0391ca8b3076aacdd11123ab23"/>    <section>
    <title>WGL_CONTEXT_CORE_PROFILE_BIT_ARB</title>
<indexterm><primary>WGL_CONTEXT_CORE_PROFILE_BIT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_CORE_PROFILE_BIT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB   0x00000001</computeroutput></para><para>
Definition at line 248 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8a600cc66dbc5a788e7b16dd9c116055"/>    <section>
    <title>WGL_CONTEXT_DEBUG_BIT_ARB</title>
<indexterm><primary>WGL_CONTEXT_DEBUG_BIT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_DEBUG_BIT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_DEBUG_BIT_ARB   0x00000001</computeroutput></para><para>
Definition at line 245 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a5eb4392eceedc35a06f15bba687daff4"/>    <section>
    <title>WGL_CONTEXT_ES2_PROFILE_BIT_EXT</title>
<indexterm><primary>WGL_CONTEXT_ES2_PROFILE_BIT_EXT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_ES2_PROFILE_BIT_EXT</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT   0x00000004</computeroutput></para><para>
Definition at line 253 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa9b5de1c7cb84a809ad79296192a76d3"/>    <section>
    <title>WGL_CONTEXT_FLAGS_ARB</title>
<indexterm><primary>WGL_CONTEXT_FLAGS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_FLAGS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_FLAGS_ARB   0x2094</computeroutput></para><para>
Definition at line 252 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aaec3bbb2c9fb813e229ad64f25130da6"/>    <section>
    <title>WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB</title>
<indexterm><primary>WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB   0x00000002</computeroutput></para><para>
Definition at line 246 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a64d5f1fa63a1979e33aee2949f6f21ad"/>    <section>
    <title>WGL_CONTEXT_MAJOR_VERSION_ARB</title>
<indexterm><primary>WGL_CONTEXT_MAJOR_VERSION_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_MAJOR_VERSION_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_MAJOR_VERSION_ARB   0x2091</computeroutput></para><para>
Definition at line 250 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a043b9ae0e73a1ff853339c02a3026096"/>    <section>
    <title>WGL_CONTEXT_MINOR_VERSION_ARB</title>
<indexterm><primary>WGL_CONTEXT_MINOR_VERSION_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_MINOR_VERSION_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_MINOR_VERSION_ARB   0x2092</computeroutput></para><para>
Definition at line 251 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a396878906cfef21a6b43de8c238f6a40"/>    <section>
    <title>WGL_CONTEXT_OPENGL_NO_ERROR_ARB</title>
<indexterm><primary>WGL_CONTEXT_OPENGL_NO_ERROR_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_OPENGL_NO_ERROR_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_OPENGL_NO_ERROR_ARB   0x31b3</computeroutput></para><para>
Definition at line 261 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a6847a02f9b4e6e9712a4b32250337dc1"/>    <section>
    <title>WGL_CONTEXT_PROFILE_MASK_ARB</title>
<indexterm><primary>WGL_CONTEXT_PROFILE_MASK_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_PROFILE_MASK_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_PROFILE_MASK_ARB   0x9126</computeroutput></para><para>
Definition at line 247 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a82a475adf314346fe8a5375edfa0560d"/>    <section>
    <title>WGL_CONTEXT_RELEASE_BEHAVIOR_ARB</title>
<indexterm><primary>WGL_CONTEXT_RELEASE_BEHAVIOR_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_RELEASE_BEHAVIOR_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_RELEASE_BEHAVIOR_ARB   0x2097</computeroutput></para><para>
Definition at line 258 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a0fbf2bf72421745143dd3505d18cb53c"/>    <section>
    <title>WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB</title>
<indexterm><primary>WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB   0x2098</computeroutput></para><para>
Definition at line 260 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a1c52f05f8e71f0ad70cc196e390b8d9f"/>    <section>
    <title>WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB</title>
<indexterm><primary>WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB   0</computeroutput></para><para>
Definition at line 259 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a276501381fad6637056ecc04c5439e31"/>    <section>
    <title>WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB</title>
<indexterm><primary>WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB   0x8256</computeroutput></para><para>
Definition at line 256 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa003e5620fa6d66c356ede014cdf1648"/>    <section>
    <title>WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB</title>
<indexterm><primary>WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB   0x00000004</computeroutput></para><para>
Definition at line 254 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a75b1340d23a385c2b1ce88a303930820"/>    <section>
    <title>WGL_DEPTH_BITS_ARB</title>
<indexterm><primary>WGL_DEPTH_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_DEPTH_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_DEPTH_BITS_ARB   0x2022</computeroutput></para><para>
Definition at line 238 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8acd69a2be1c4ed51226145c520ecbe5"/>    <section>
    <title>WGL_DOUBLE_BUFFER_ARB</title>
<indexterm><primary>WGL_DOUBLE_BUFFER_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_DOUBLE_BUFFER_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_DOUBLE_BUFFER_ARB   0x2011</computeroutput></para><para>
Definition at line 242 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a9b0723a3d7c302c78c2c225a142e6e84"/>    <section>
    <title>WGL_DRAW_TO_WINDOW_ARB</title>
<indexterm><primary>WGL_DRAW_TO_WINDOW_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_DRAW_TO_WINDOW_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_DRAW_TO_WINDOW_ARB   0x2001</computeroutput></para><para>
Definition at line 220 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a18ba4b32abb0962574805c320cc6e00a"/>    <section>
    <title>WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB</title>
<indexterm><primary>WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB   0x20a9</computeroutput></para><para>
Definition at line 244 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a4b67d94c2dbd3c5ad5235eeac10749db"/>    <section>
    <title>WGL_GREEN_BITS_ARB</title>
<indexterm><primary>WGL_GREEN_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_GREEN_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_GREEN_BITS_ARB   0x2017</computeroutput></para><para>
Definition at line 227 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a6d6fd2424c846bcd2800ea296e76113f"/>    <section>
    <title>WGL_GREEN_SHIFT_ARB</title>
<indexterm><primary>WGL_GREEN_SHIFT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_GREEN_SHIFT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_GREEN_SHIFT_ARB   0x2018</computeroutput></para><para>
Definition at line 228 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aba383b9c347928b3ba1d1f749763f697"/>    <section>
    <title>WGL_LOSE_CONTEXT_ON_RESET_ARB</title>
<indexterm><primary>WGL_LOSE_CONTEXT_ON_RESET_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_LOSE_CONTEXT_ON_RESET_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_LOSE_CONTEXT_ON_RESET_ARB   0x8252</computeroutput></para><para>
Definition at line 255 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a6e99b85ae842730daef27353a9e3d434"/>    <section>
    <title>WGL_NO_ACCELERATION_ARB</title>
<indexterm><primary>WGL_NO_ACCELERATION_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_NO_ACCELERATION_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_NO_ACCELERATION_ARB   0x2025</computeroutput></para><para>
Definition at line 224 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac2884bc3b423afa8ef44d4426370b7bf"/>    <section>
    <title>WGL_NO_RESET_NOTIFICATION_ARB</title>
<indexterm><primary>WGL_NO_RESET_NOTIFICATION_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_NO_RESET_NOTIFICATION_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_NO_RESET_NOTIFICATION_ARB   0x8261</computeroutput></para><para>
Definition at line 257 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac08792306c4cb9c9f258979cebd7895d"/>    <section>
    <title>WGL_NUMBER_PIXEL_FORMATS_ARB</title>
<indexterm><primary>WGL_NUMBER_PIXEL_FORMATS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_NUMBER_PIXEL_FORMATS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_NUMBER_PIXEL_FORMATS_ARB   0x2000</computeroutput></para><para>
Definition at line 218 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a74709fd85aae5b059d39dd4b51694249"/>    <section>
    <title>WGL_PIXEL_TYPE_ARB</title>
<indexterm><primary>WGL_PIXEL_TYPE_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_PIXEL_TYPE_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_PIXEL_TYPE_ARB   0x2013</computeroutput></para><para>
Definition at line 221 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1acf6d0dc14bd58ab03b10d4cf1534625a"/>    <section>
    <title>WGL_RED_BITS_ARB</title>
<indexterm><primary>WGL_RED_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_RED_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_RED_BITS_ARB   0x2015</computeroutput></para><para>
Definition at line 225 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a266ab3ccd927f4caf9df1f426c960c1b"/>    <section>
    <title>WGL_RED_SHIFT_ARB</title>
<indexterm><primary>WGL_RED_SHIFT_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_RED_SHIFT_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_RED_SHIFT_ARB   0x2016</computeroutput></para><para>
Definition at line 226 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a99289a023da8e683eb7de95543e22c87"/>    <section>
    <title>WGL_SAMPLES_ARB</title>
<indexterm><primary>WGL_SAMPLES_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_SAMPLES_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_SAMPLES_ARB   0x2042</computeroutput></para><para>
Definition at line 243 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a0adda3bf0bcae1b1f66094f4331570bd"/>    <section>
    <title>WGL_STENCIL_BITS_ARB</title>
<indexterm><primary>WGL_STENCIL_BITS_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_STENCIL_BITS_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_STENCIL_BITS_ARB   0x2023</computeroutput></para><para>
Definition at line 239 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a2aa289efbc19a76be9dc0ac303f01689"/>    <section>
    <title>WGL_STEREO_ARB</title>
<indexterm><primary>WGL_STEREO_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_STEREO_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_STEREO_ARB   0x2012</computeroutput></para><para>
Definition at line 241 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1afddc80fbff35c1f270613b83090eca85"/>    <section>
    <title>WGL_SUPPORT_OPENGL_ARB</title>
<indexterm><primary>WGL_SUPPORT_OPENGL_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_SUPPORT_OPENGL_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_SUPPORT_OPENGL_ARB   0x2010</computeroutput></para><para>
Definition at line 219 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a9ef316350bc3d0261a55e22242da3573"/>    <section>
    <title>WGL_TYPE_RGBA_ARB</title>
<indexterm><primary>WGL_TYPE_RGBA_ARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WGL_TYPE_RGBA_ARB</secondary></indexterm>
<para><computeroutput>#define WGL_TYPE_RGBA_ARB   0x202b</computeroutput></para><para>
Definition at line 222 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a750f042435b05950e7739cbc3e0b2bd1"/>    <section>
    <title>wglCreateContext</title>
<indexterm><primary>wglCreateContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglCreateContext</secondary></indexterm>
<para><computeroutput>#define wglCreateContext   _glfw.wgl.CreateContext</computeroutput></para><para>
Definition at line 333 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1acdca080586c894bbe2244900e8dfa24c"/>    <section>
    <title>wglCreateContextAttribsARB</title>
<indexterm><primary>wglCreateContextAttribsARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglCreateContextAttribsARB</secondary></indexterm>
<para><computeroutput>#define wglCreateContextAttribsARB   _glfw.wgl.CreateContextAttribsARB</computeroutput></para><para>
Definition at line 323 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aab1f95aa242eec7e28d7bc559b7e1d3b"/>    <section>
    <title>wglDeleteContext</title>
<indexterm><primary>wglDeleteContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglDeleteContext</secondary></indexterm>
<para><computeroutput>#define wglDeleteContext   _glfw.wgl.DeleteContext</computeroutput></para><para>
Definition at line 334 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1af28a48d6d098fef9e6e79cbe9df8c87d"/>    <section>
    <title>wglGetCurrentContext</title>
<indexterm><primary>wglGetCurrentContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglGetCurrentContext</secondary></indexterm>
<para><computeroutput>#define wglGetCurrentContext   _glfw.wgl.GetCurrentContext</computeroutput></para><para>
Definition at line 337 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8d5248de079ec0afe7a9ccaccfc0bfce"/>    <section>
    <title>wglGetCurrentDC</title>
<indexterm><primary>wglGetCurrentDC</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglGetCurrentDC</secondary></indexterm>
<para><computeroutput>#define wglGetCurrentDC   _glfw.wgl.GetCurrentDC</computeroutput></para><para>
Definition at line 336 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1adee3b196f14083e02d4e6f8222fd3791"/>    <section>
    <title>wglGetExtensionsStringARB</title>
<indexterm><primary>wglGetExtensionsStringARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglGetExtensionsStringARB</secondary></indexterm>
<para><computeroutput>#define wglGetExtensionsStringARB   _glfw.wgl.GetExtensionsStringARB</computeroutput></para><para>
Definition at line 322 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a134614db3b57ba3660b3bc2e01b6c886"/>    <section>
    <title>wglGetExtensionsStringEXT</title>
<indexterm><primary>wglGetExtensionsStringEXT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglGetExtensionsStringEXT</secondary></indexterm>
<para><computeroutput>#define wglGetExtensionsStringEXT   _glfw.wgl.GetExtensionsStringEXT</computeroutput></para><para>
Definition at line 321 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8edcc08abf2e74d0331fdfe925e98199"/>    <section>
    <title>wglGetPixelFormatAttribivARB</title>
<indexterm><primary>wglGetPixelFormatAttribivARB</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglGetPixelFormatAttribivARB</secondary></indexterm>
<para><computeroutput>#define wglGetPixelFormatAttribivARB   _glfw.wgl.GetPixelFormatAttribivARB</computeroutput></para><para>
Definition at line 320 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a1ac6c8ffa0b1d53fc4fc812f471d6524"/>    <section>
    <title>wglGetProcAddress</title>
<indexterm><primary>wglGetProcAddress</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglGetProcAddress</secondary></indexterm>
<para><computeroutput>#define wglGetProcAddress   _glfw.wgl.GetProcAddress</computeroutput></para><para>
Definition at line 335 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a2aa491735fbf4ee7df91c6a7cef32d5d"/>    <section>
    <title>wglMakeCurrent</title>
<indexterm><primary>wglMakeCurrent</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglMakeCurrent</secondary></indexterm>
<para><computeroutput>#define wglMakeCurrent   _glfw.wgl.MakeCurrent</computeroutput></para><para>
Definition at line 338 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a6658a50ceb506c7b2cbdf85d06cfb495"/>    <section>
    <title>wglShareLists</title>
<indexterm><primary>wglShareLists</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglShareLists</secondary></indexterm>
<para><computeroutput>#define wglShareLists   _glfw.wgl.ShareLists</computeroutput></para><para>
Definition at line 339 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8a2877f5187c2bbcaab779c518e4bb1a"/>    <section>
    <title>wglSwapIntervalEXT</title>
<indexterm><primary>wglSwapIntervalEXT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>wglSwapIntervalEXT</secondary></indexterm>
<para><computeroutput>#define wglSwapIntervalEXT   _glfw.wgl.SwapIntervalEXT</computeroutput></para><para>
Definition at line 319 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac7bef5d85e3dcd73eef56ad39ffc84a9"/>    <section>
    <title>WIN32_LEAN_AND_MEAN</title>
<indexterm><primary>WIN32_LEAN_AND_MEAN</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WIN32_LEAN_AND_MEAN</secondary></indexterm>
<para><computeroutput>#define WIN32_LEAN_AND_MEAN</computeroutput></para><para>
Definition at line 38 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a966cd377b9f3fdeb1432460c33352af1"/>    <section>
    <title>WINVER</title>
<indexterm><primary>WINVER</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WINVER</secondary></indexterm>
<para><computeroutput>#define WINVER   0x0501</computeroutput></para><para>
Definition at line 54 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a0d35b9c78d456ccb46152c4fc9126d5c"/>    <section>
    <title>WM_COPYGLOBALDATA</title>
<indexterm><primary>WM_COPYGLOBALDATA</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WM_COPYGLOBALDATA</secondary></indexterm>
<para><computeroutput>#define WM_COPYGLOBALDATA   0x0049</computeroutput></para><para>
Definition at line 84 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a53e033000a66015712a3ddceea09ac5c"/>    <section>
    <title>WM_DPICHANGED</title>
<indexterm><primary>WM_DPICHANGED</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WM_DPICHANGED</secondary></indexterm>
<para><computeroutput>#define WM_DPICHANGED   0x02E0</computeroutput></para><para>
Definition at line 93 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ae905d8e1f553108e163a295c4869e026"/>    <section>
    <title>WM_DWMCOLORIZATIONCOLORCHANGED</title>
<indexterm><primary>WM_DWMCOLORIZATIONCOLORCHANGED</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WM_DWMCOLORIZATIONCOLORCHANGED</secondary></indexterm>
<para><computeroutput>#define WM_DWMCOLORIZATIONCOLORCHANGED   0x0320</computeroutput></para><para>
Definition at line 81 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a799c22638393cccf5b4f8c2f9702f2b8"/>    <section>
    <title>WM_DWMCOMPOSITIONCHANGED</title>
<indexterm><primary>WM_DWMCOMPOSITIONCHANGED</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WM_DWMCOMPOSITIONCHANGED</secondary></indexterm>
<para><computeroutput>#define WM_DWMCOMPOSITIONCHANGED   0x031E</computeroutput></para><para>
Definition at line 78 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a3bcea7117c9fe385a2b760614aca8123"/>    <section>
    <title>WM_GETDPISCALEDSIZE</title>
<indexterm><primary>WM_GETDPISCALEDSIZE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WM_GETDPISCALEDSIZE</secondary></indexterm>
<para><computeroutput>#define WM_GETDPISCALEDSIZE   0x02e4</computeroutput></para><para>
Definition at line 111 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a7b2918d422b3a1fe86a641f74818bb55"/>    <section>
    <title>WM_MOUSEHWHEEL</title>
<indexterm><primary>WM_MOUSEHWHEEL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WM_MOUSEHWHEEL</secondary></indexterm>
<para><computeroutput>#define WM_MOUSEHWHEEL   0x020E</computeroutput></para><para>
Definition at line 75 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a3e39d5f7fe13772b34a4ad42907084d6"/>    <section>
    <title>WM_UNICHAR</title>
<indexterm><primary>WM_UNICHAR</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>WM_UNICHAR</secondary></indexterm>
<para><computeroutput>#define WM_UNICHAR   0x0109</computeroutput></para><para>
Definition at line 87 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aaac2c967002577279cf5e5a0942d71ab"/>    <section>
    <title>XINPUT_CAPS_WIRELESS</title>
<indexterm><primary>XINPUT_CAPS_WIRELESS</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_CAPS_WIRELESS</secondary></indexterm>
<para><computeroutput>#define XINPUT_CAPS_WIRELESS   0x0002</computeroutput></para><para>
Definition at line 186 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a2135fc9a25e0728fcaa9506974212e31"/>    <section>
    <title>XINPUT_DEVSUBTYPE_ARCADE_PAD</title>
<indexterm><primary>XINPUT_DEVSUBTYPE_ARCADE_PAD</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_DEVSUBTYPE_ARCADE_PAD</secondary></indexterm>
<para><computeroutput>#define XINPUT_DEVSUBTYPE_ARCADE_PAD   0x13</computeroutput></para><para>
Definition at line 207 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a7a765e1be63dbaadb2ed6df4b9fa5503"/>    <section>
    <title>XINPUT_DEVSUBTYPE_ARCADE_STICK</title>
<indexterm><primary>XINPUT_DEVSUBTYPE_ARCADE_STICK</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_DEVSUBTYPE_ARCADE_STICK</secondary></indexterm>
<para><computeroutput>#define XINPUT_DEVSUBTYPE_ARCADE_STICK   0x03</computeroutput></para><para>
Definition at line 192 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a13fcb4b8a7a3adba1c372147e80ca41a"/>    <section>
    <title>XINPUT_DEVSUBTYPE_DANCE_PAD</title>
<indexterm><primary>XINPUT_DEVSUBTYPE_DANCE_PAD</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_DEVSUBTYPE_DANCE_PAD</secondary></indexterm>
<para><computeroutput>#define XINPUT_DEVSUBTYPE_DANCE_PAD   0x05</computeroutput></para><para>
Definition at line 198 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1afb3627c28993723c5c9170e9e13e53f3"/>    <section>
    <title>XINPUT_DEVSUBTYPE_DRUM_KIT</title>
<indexterm><primary>XINPUT_DEVSUBTYPE_DRUM_KIT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_DEVSUBTYPE_DRUM_KIT</secondary></indexterm>
<para><computeroutput>#define XINPUT_DEVSUBTYPE_DRUM_KIT   0x08</computeroutput></para><para>
Definition at line 204 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a9668d9770d61b974cd15bcc087da7a72"/>    <section>
    <title>XINPUT_DEVSUBTYPE_FLIGHT_STICK</title>
<indexterm><primary>XINPUT_DEVSUBTYPE_FLIGHT_STICK</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_DEVSUBTYPE_FLIGHT_STICK</secondary></indexterm>
<para><computeroutput>#define XINPUT_DEVSUBTYPE_FLIGHT_STICK   0x04</computeroutput></para><para>
Definition at line 195 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aa2054f7815848e93143eda442d9e5d63"/>    <section>
    <title>XINPUT_DEVSUBTYPE_GUITAR</title>
<indexterm><primary>XINPUT_DEVSUBTYPE_GUITAR</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_DEVSUBTYPE_GUITAR</secondary></indexterm>
<para><computeroutput>#define XINPUT_DEVSUBTYPE_GUITAR   0x06</computeroutput></para><para>
Definition at line 201 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a69a9e716aeb3e2b4b1f4a952fa7dd258"/>    <section>
    <title>XINPUT_DEVSUBTYPE_WHEEL</title>
<indexterm><primary>XINPUT_DEVSUBTYPE_WHEEL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XINPUT_DEVSUBTYPE_WHEEL</secondary></indexterm>
<para><computeroutput>#define XINPUT_DEVSUBTYPE_WHEEL   0x02</computeroutput></para><para>
Definition at line 189 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1af9394dae29c2b796b68e4746e8a30064"/>    <section>
    <title>XInputGetCapabilities</title>
<indexterm><primary>XInputGetCapabilities</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XInputGetCapabilities</secondary></indexterm>
<para><computeroutput>#define XInputGetCapabilities   _glfw.win32.xinput.GetCapabilities</computeroutput></para><para>
Definition at line 272 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a3ae78a5ed579475a7cce56af08fb4b51"/>    <section>
    <title>XInputGetState</title>
<indexterm><primary>XInputGetState</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XInputGetState</secondary></indexterm>
<para><computeroutput>#define XInputGetState   _glfw.win32.xinput.GetState</computeroutput></para><para>
Definition at line 273 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a1ed62c09d395884159e802440e233a94"/>    <section>
    <title>XUSER_MAX_COUNT</title>
<indexterm><primary>XUSER_MAX_COUNT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>XUSER_MAX_COUNT</secondary></indexterm>
<para><computeroutput>#define XUSER_MAX_COUNT   4</computeroutput></para><para>
Definition at line 210 of file win32_platform.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_win32__platform_8h_1a5a3234465bb7e264821cadb19bc5a312"/>    <section>
    <title>_GLFWcontextWGL</title>
<indexterm><primary>_GLFWcontextWGL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_GLFWcontextWGL</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wcontext_w_g_l">_GLFWcontextWGL</link> <link linkend="_struct___g_l_f_wcontext_w_g_l">_GLFWcontextWGL</link></computeroutput></para>    </section><anchor xml:id="_win32__platform_8h_1a9fd275bb321a21611f3d07cf610a0bee"/>    <section>
    <title>_GLFWcursorWin32</title>
<indexterm><primary>_GLFWcursorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_GLFWcursorWin32</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link> <link linkend="_struct___g_l_f_wcursor_win32">_GLFWcursorWin32</link></computeroutput></para>    </section><anchor xml:id="_win32__platform_8h_1ab650ea7dbcbbda029445f3c7a31f3754"/>    <section>
    <title>_GLFWlibraryWGL</title>
<indexterm><primary>_GLFWlibraryWGL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_GLFWlibraryWGL</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wlibrary_w_g_l">_GLFWlibraryWGL</link> <link linkend="_struct___g_l_f_wlibrary_w_g_l">_GLFWlibraryWGL</link></computeroutput></para>    </section><anchor xml:id="_win32__platform_8h_1a407d34356f6555d6cfc3cbdeb5b1bb7a"/>    <section>
    <title>_GLFWlibraryWin32</title>
<indexterm><primary>_GLFWlibraryWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_GLFWlibraryWin32</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link> <link linkend="_struct___g_l_f_wlibrary_win32">_GLFWlibraryWin32</link></computeroutput></para>    </section><anchor xml:id="_win32__platform_8h_1a2bc910cef485c288b92c1ebae1c33092"/>    <section>
    <title>_GLFWmonitorWin32</title>
<indexterm><primary>_GLFWmonitorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_GLFWmonitorWin32</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link> <link linkend="_struct___g_l_f_wmonitor_win32">_GLFWmonitorWin32</link></computeroutput></para>    </section><anchor xml:id="_win32__platform_8h_1ab5efcddf006814cfe6ae2adc0657607f"/>    <section>
    <title>_GLFWwindowWin32</title>
<indexterm><primary>_GLFWwindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_GLFWwindowWin32</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link> <link linkend="_struct___g_l_f_wwindow_win32">_GLFWwindowWin32</link></computeroutput></para>    </section><anchor xml:id="_win32__platform_8h_1a193a4995605a686091c2ad135f2ebbd4"/>    <section>
    <title>PFN_AdjustWindowRectExForDpi</title>
<indexterm><primary>PFN_AdjustWindowRectExForDpi</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_AdjustWindowRectExForDpi</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_AdjustWindowRectExForDpi) (LPRECT, DWORD, BOOL, DWORD, UINT)</computeroutput></para><para>
Definition at line 285 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ac5444b0c65734773cf49c70a4e69abc4"/>    <section>
    <title>PFN_ChangeWindowMessageFilterEx</title>
<indexterm><primary>PFN_ChangeWindowMessageFilterEx</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_ChangeWindowMessageFilterEx</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_ChangeWindowMessageFilterEx) (HWND, UINT, DWORD, <link linkend="_struct_c_h_a_n_g_e_f_i_l_t_e_r_s_t_r_u_c_t">CHANGEFILTERSTRUCT</link> *)</computeroutput></para><para>
Definition at line 281 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a21e6e94714ccc6d706bfc1697bd9f71b"/>    <section>
    <title>PFN_DirectInput8Create</title>
<indexterm><primary>PFN_DirectInput8Create</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_DirectInput8Create</secondary></indexterm>
<para><computeroutput>typedef HRESULT(WINAPI * PFN_DirectInput8Create) (HINSTANCE, DWORD, REFIID, LPVOID *, LPUNKNOWN)</computeroutput></para><para>
Definition at line 276 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a2670fd07424d67591b26e0a36857c727"/>    <section>
    <title>PFN_DwmEnableBlurBehindWindow</title>
<indexterm><primary>PFN_DwmEnableBlurBehindWindow</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_DwmEnableBlurBehindWindow</secondary></indexterm>
<para><computeroutput>typedef HRESULT(WINAPI * PFN_DwmEnableBlurBehindWindow) (HWND, const <link linkend="_struct_d_w_m___b_l_u_r_b_e_h_i_n_d">DWM_BLURBEHIND</link> *)</computeroutput></para><para>
Definition at line 296 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a376123548a7bd8202932f6e95ff4d785"/>    <section>
    <title>PFN_DwmFlush</title>
<indexterm><primary>PFN_DwmFlush</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_DwmFlush</secondary></indexterm>
<para><computeroutput>typedef HRESULT(WINAPI * PFN_DwmFlush) (VOID)</computeroutput></para><para>
Definition at line 295 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8fe0ef023e70b6dc0a253000f3337eef"/>    <section>
    <title>PFN_DwmGetColorizationColor</title>
<indexterm><primary>PFN_DwmGetColorizationColor</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_DwmGetColorizationColor</secondary></indexterm>
<para><computeroutput>typedef HRESULT(WINAPI * PFN_DwmGetColorizationColor) (DWORD *, BOOL *)</computeroutput></para><para>
Definition at line 297 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a531129c30409599eee72da5fcf2b38f6"/>    <section>
    <title>PFN_DwmIsCompositionEnabled</title>
<indexterm><primary>PFN_DwmIsCompositionEnabled</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_DwmIsCompositionEnabled</secondary></indexterm>
<para><computeroutput>typedef HRESULT(WINAPI * PFN_DwmIsCompositionEnabled) (BOOL *)</computeroutput></para><para>
Definition at line 294 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a8a5c41e21d30070c8cd14a1621c3e5fb"/>    <section>
    <title>PFN_EnableNonClientDpiScaling</title>
<indexterm><primary>PFN_EnableNonClientDpiScaling</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_EnableNonClientDpiScaling</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_EnableNonClientDpiScaling) (HWND)</computeroutput></para><para>
Definition at line 282 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a411247e61a6621babce2d06bb8a434db"/>    <section>
    <title>PFN_GetDpiForMonitor</title>
<indexterm><primary>PFN_GetDpiForMonitor</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_GetDpiForMonitor</secondary></indexterm>
<para><computeroutput>typedef HRESULT(WINAPI * PFN_GetDpiForMonitor) (HMONITOR, <link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf">MONITOR_DPI_TYPE</link>, UINT *, UINT *)</computeroutput></para><para>
Definition at line 305 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aeffd71949cc91f9620f80af4c8c9aec6"/>    <section>
    <title>PFN_GetDpiForWindow</title>
<indexterm><primary>PFN_GetDpiForWindow</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_GetDpiForWindow</secondary></indexterm>
<para><computeroutput>typedef UINT(WINAPI * PFN_GetDpiForWindow) (HWND)</computeroutput></para><para>
Definition at line 284 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ae84ddc48e418de3da946b1ca744f44af"/>    <section>
    <title>PFN_RtlVerifyVersionInfo</title>
<indexterm><primary>PFN_RtlVerifyVersionInfo</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_RtlVerifyVersionInfo</secondary></indexterm>
<para><computeroutput>typedef LONG(WINAPI * PFN_RtlVerifyVersionInfo) (OSVERSIONINFOEXW *, ULONG, ULONGLONG)</computeroutput></para><para>
Definition at line 310 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a3b0088e74a9d3c97e116d080cbf93176"/>    <section>
    <title>PFN_SetProcessDPIAware</title>
<indexterm><primary>PFN_SetProcessDPIAware</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_SetProcessDPIAware</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_SetProcessDPIAware) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</computeroutput></para><para>
Definition at line 280 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a36d30a5f5f7942a50b272fa13058cf96"/>    <section>
    <title>PFN_SetProcessDpiAwareness</title>
<indexterm><primary>PFN_SetProcessDpiAwareness</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_SetProcessDpiAwareness</secondary></indexterm>
<para><computeroutput>typedef HRESULT(WINAPI * PFN_SetProcessDpiAwareness) (<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0">PROCESS_DPI_AWARENESS</link>)</computeroutput></para><para>
Definition at line 304 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a23bae644f21a2c242a3e3589d5279350"/>    <section>
    <title>PFN_SetProcessDpiAwarenessContext</title>
<indexterm><primary>PFN_SetProcessDpiAwarenessContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_SetProcessDpiAwarenessContext</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_SetProcessDpiAwarenessContext) (HANDLE)</computeroutput></para><para>
Definition at line 283 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1aae09ac436e491e590770b5585cd57874"/>    <section>
    <title>PFN_vkCreateWin32SurfaceKHR</title>
<indexterm><primary>PFN_vkCreateWin32SurfaceKHR</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_vkCreateWin32SurfaceKHR</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * PFN_vkCreateWin32SurfaceKHR) (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link>, const <link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link> *, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *)</computeroutput></para><para>
Definition at line 352 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a91754c61c45a61e9b0858bca669ccf63"/>    <section>
    <title>PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR</title>
<indexterm><primary>PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_vulkan_8h_1ae5d9faf75f583010e32ee49087a15326">VkBool32</link>(<link linkend="_oversample_2main_8c_1a428a91acf2c2439dc1a257708ee1f805">APIENTRY</link> * PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR) (<link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link>, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>)</computeroutput></para><para>
Definition at line 353 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1acd4ffae7f53c6e3df2f1bd1feae206a1"/>    <section>
    <title>PFN_wglCreateContext</title>
<indexterm><primary>PFN_wglCreateContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_wglCreateContext</secondary></indexterm>
<para><computeroutput>typedef HGLRC(WINAPI * PFN_wglCreateContext) (HDC)</computeroutput></para><para>
Definition at line 326 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a680be7b362dea206756ecf78046ec568"/>    <section>
    <title>PFN_wglDeleteContext</title>
<indexterm><primary>PFN_wglDeleteContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_wglDeleteContext</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_wglDeleteContext) (HGLRC)</computeroutput></para><para>
Definition at line 327 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ab67fa4ec6b012531a46090e0b6c73543"/>    <section>
    <title>PFN_wglGetCurrentContext</title>
<indexterm><primary>PFN_wglGetCurrentContext</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_wglGetCurrentContext</secondary></indexterm>
<para><computeroutput>typedef HGLRC(WINAPI * PFN_wglGetCurrentContext) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</computeroutput></para><para>
Definition at line 330 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ab7fdfe541f5de8218150ec71991b5e1a"/>    <section>
    <title>PFN_wglGetCurrentDC</title>
<indexterm><primary>PFN_wglGetCurrentDC</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_wglGetCurrentDC</secondary></indexterm>
<para><computeroutput>typedef HDC(WINAPI * PFN_wglGetCurrentDC) (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</computeroutput></para><para>
Definition at line 329 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1afe938f6abc996c782668b4830fd49844"/>    <section>
    <title>PFN_wglGetProcAddress</title>
<indexterm><primary>PFN_wglGetProcAddress</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_wglGetProcAddress</secondary></indexterm>
<para><computeroutput>typedef PROC(WINAPI * PFN_wglGetProcAddress) (LPCSTR)</computeroutput></para><para>
Definition at line 328 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a01b96444528ae07c30f644ad3b75dd79"/>    <section>
    <title>PFN_wglMakeCurrent</title>
<indexterm><primary>PFN_wglMakeCurrent</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_wglMakeCurrent</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_wglMakeCurrent) (HDC, HGLRC)</computeroutput></para><para>
Definition at line 331 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a4282d885859a70343d72b80af9380b27"/>    <section>
    <title>PFN_wglShareLists</title>
<indexterm><primary>PFN_wglShareLists</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_wglShareLists</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFN_wglShareLists) (HGLRC, HGLRC)</computeroutput></para><para>
Definition at line 332 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ab894020cfaceec8e0a7e24a2b8cf003a"/>    <section>
    <title>PFN_XInputGetCapabilities</title>
<indexterm><primary>PFN_XInputGetCapabilities</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_XInputGetCapabilities</secondary></indexterm>
<para><computeroutput>typedef DWORD(WINAPI * PFN_XInputGetCapabilities) (DWORD, DWORD, <link linkend="_xinput_8h_1acf54f59fb9d30352c7016615d997ee42">XINPUT_CAPABILITIES</link> *)</computeroutput></para><para>
Definition at line 270 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a0554b333dae0845c369b9d7234c695e9"/>    <section>
    <title>PFN_XInputGetState</title>
<indexterm><primary>PFN_XInputGetState</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFN_XInputGetState</secondary></indexterm>
<para><computeroutput>typedef DWORD(WINAPI * PFN_XInputGetState) (DWORD, <link linkend="_xinput_8h_1a0627b327913f1bc398ae904fc980e74c">XINPUT_STATE</link> *)</computeroutput></para><para>
Definition at line 271 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ada319dc3b2d571bc9f4d242e5cb9a543"/>    <section>
    <title>PFNWGLCREATECONTEXTATTRIBSARBPROC</title>
<indexterm><primary>PFNWGLCREATECONTEXTATTRIBSARBPROC</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFNWGLCREATECONTEXTATTRIBSARBPROC</secondary></indexterm>
<para><computeroutput>typedef HGLRC(WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC, HGLRC, const int *)</computeroutput></para><para>
Definition at line 318 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a39931f248131b270558f144f21b3c2af"/>    <section>
    <title>PFNWGLGETPIXELFORMATATTRIBIVARBPROC</title>
<indexterm><primary>PFNWGLGETPIXELFORMATATTRIBIVARBPROC</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFNWGLGETPIXELFORMATATTRIBIVARBPROC</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC, int, int, UINT, const int *, int *)</computeroutput></para><para>
Definition at line 315 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a9157176fda95d4db49f3a552978c43e6"/>    <section>
    <title>PFNWGLSWAPINTERVALEXTPROC</title>
<indexterm><primary>PFNWGLSWAPINTERVALEXTPROC</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFNWGLSWAPINTERVALEXTPROC</secondary></indexterm>
<para><computeroutput>typedef BOOL(WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int)</computeroutput></para><para>
Definition at line 314 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1ab89ca237e210dcda06c93ef3acc5caaa"/>    <section>
    <title>VkWin32SurfaceCreateFlagsKHR</title>
<indexterm><primary>VkWin32SurfaceCreateFlagsKHR</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>VkWin32SurfaceCreateFlagsKHR</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_vulkan_8h_1abb605a7700670dd8420cc3841b939444">VkFlags</link> <link linkend="_win32__platform_8h_1ab89ca237e210dcda06c93ef3acc5caaa">VkWin32SurfaceCreateFlagsKHR</link></computeroutput></para><para>
Definition at line 341 of file win32_platform.h.</para>
    </section><anchor xml:id="_win32__platform_8h_1a020658817e5a625228e410cc2e1b57a0"/>    <section>
    <title>VkWin32SurfaceCreateInfoKHR</title>
<indexterm><primary>VkWin32SurfaceCreateInfoKHR</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>VkWin32SurfaceCreateInfoKHR</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link> <link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link></computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf"/>    <section>
    <title>MONITOR_DPI_TYPE</title>
<indexterm><primary>MONITOR_DPI_TYPE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>MONITOR_DPI_TYPE</secondary></indexterm>
<para><computeroutput>enum <link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf">MONITOR_DPI_TYPE</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>MDT_EFFECTIVE_DPI</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>MDT_EFFECTIVE_DPI</secondary></indexterm>
<anchor xml:id="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162"/>MDT_EFFECTIVE_DPI</entry><entry></entry></row><row><entry><indexterm><primary>MDT_ANGULAR_DPI</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>MDT_ANGULAR_DPI</secondary></indexterm>
<anchor xml:id="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3"/>MDT_ANGULAR_DPI</entry><entry></entry></row><row><entry><indexterm><primary>MDT_RAW_DPI</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>MDT_RAW_DPI</secondary></indexterm>
<anchor xml:id="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851"/>MDT_RAW_DPI</entry><entry></entry></row><row><entry><indexterm><primary>MDT_DEFAULT</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>MDT_DEFAULT</secondary></indexterm>
<anchor xml:id="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f"/>MDT_DEFAULT</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 152 of file win32_platform.h.</para>
<programlisting>153 {
154 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162">MDT_EFFECTIVE_DPI</link>&#32;=&#32;0,
155 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa7c555ba8472b1bcc44a2b8b7da7bc1c3">MDT_ANGULAR_DPI</link>&#32;=&#32;1,
156 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa3a8c01568cf5b17569b53587783e9851">MDT_RAW_DPI</link>&#32;=&#32;2,
157 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfacf96ef9f03d6fbbef385b67cfbe2578f">MDT_DEFAULT</link>&#32;=&#32;<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162">MDT_EFFECTIVE_DPI</link>
158 }&#32;<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcf">MONITOR_DPI_TYPE</link>;
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0"/>    <section>
    <title>PROCESS_DPI_AWARENESS</title>
<indexterm><primary>PROCESS_DPI_AWARENESS</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PROCESS_DPI_AWARENESS</secondary></indexterm>
<para><computeroutput>enum <link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0">PROCESS_DPI_AWARENESS</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>PROCESS_DPI_UNAWARE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PROCESS_DPI_UNAWARE</secondary></indexterm>
<anchor xml:id="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019"/>PROCESS_DPI_UNAWARE</entry><entry></entry></row><row><entry><indexterm><primary>PROCESS_SYSTEM_DPI_AWARE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PROCESS_SYSTEM_DPI_AWARE</secondary></indexterm>
<anchor xml:id="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b"/>PROCESS_SYSTEM_DPI_AWARE</entry><entry></entry></row><row><entry><indexterm><primary>PROCESS_PER_MONITOR_DPI_AWARE</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PROCESS_PER_MONITOR_DPI_AWARE</secondary></indexterm>
<anchor xml:id="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097"/>PROCESS_PER_MONITOR_DPI_AWARE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 146 of file win32_platform.h.</para>
<programlisting>147 {
148 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0ab42f9fa8bef80716253ff5732f98d019">PROCESS_DPI_UNAWARE</link>&#32;=&#32;0,
149 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0a2690b1d0f73cd71a24c38dbccc99be8b">PROCESS_SYSTEM_DPI_AWARE</link>&#32;=&#32;1,
150 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097">PROCESS_PER_MONITOR_DPI_AWARE</link>&#32;=&#32;2
151 }&#32;<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0">PROCESS_DPI_AWARENESS</link>;
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_win32__platform_8h_1a3c83872580850a72c3cde2861fdc229f"/>    <section>
    <title>_glfwConnectWin32()</title>
<indexterm><primary>_glfwConnectWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwConnectWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwConnectWin32 (int platformID, <link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link> * platform)</computeroutput></para><para>
Definition at line 539 of file win32_init.c.</para>
<programlisting>540 {
541 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link>&#32;win32&#32;=
542 &#32;&#32;&#32;&#32;{
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__init_1ga8d3d17df2ab57492cef665da52c603a1">GLFW_PLATFORM_WIN32</link>,
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1af4042dcaff3b650d19d2052ea5778bbf">_glfwInitWin32</link>,
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1ae5fd5e0d48189d6a1ea0e11418e9a236">_glfwTerminateWin32</link>,
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a731aa16e1109aa6963a7902af9b1e290">_glfwGetCursorPosWin32</link>,
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a7adc955bc72784fdf854cfd6e32ba287">_glfwSetCursorPosWin32</link>,
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0e6560aa1f1fc5f556543bd1dbc954f3">_glfwSetCursorModeWin32</link>,
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ad52b5863f16d0498407bbb612ea6f378">_glfwSetRawMouseMotionWin32</link>,
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a87187d130a267838b8565c44603151e5">_glfwRawMouseMotionSupportedWin32</link>,
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5b60a1c1d42c9f51b6681afca63a154a">_glfwCreateCursorWin32</link>,
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ab83aeb5b11824c61a09ee83ca90d22e3">_glfwCreateStandardCursorWin32</link>,
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a17e1a4d5ad34e0e6c9bfd31e78460618">_glfwDestroyCursorWin32</link>,
554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ab5d21e2433ee1d512ae83b39549e49fc">_glfwSetCursorWin32</link>,
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a7e6687a8499d9bf866660ad394b19750">_glfwGetScancodeNameWin32</link>,
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a2083a2b904b8909ef96ebe7e34f373c3">_glfwGetKeyScancodeWin32</link>,
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1abf1a0ba92102516bdbc00c164edf5017">_glfwSetClipboardStringWin32</link>,
558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1af195ff960b1b462d052bfee6c8e64ea6">_glfwGetClipboardStringWin32</link>,
559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a3e920595135793177be13d7ad39d20b7">_glfwInitJoysticksWin32</link>,
560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a219b355c48800354e45f6091d7b2e564">_glfwTerminateJoysticksWin32</link>,
561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a031cd959c74b03ac0523bbe77f3b117e">_glfwPollJoystickWin32</link>,
562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1ab4f284ba366d4134e9fb38c4f76c10a3">_glfwGetMappingNameWin32</link>,
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a148681c996ee9d03ca7be51de6360ee4">_glfwUpdateGamepadGUIDWin32</link>,
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a9df387b074c350e1cca8dbd26a375243">_glfwFreeMonitorWin32</link>,
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a4261cca207894705081bbe41a912529b">_glfwGetMonitorPosWin32</link>,
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a3fe7a2258a3ce26e3a8257c3d0ea1ca0">_glfwGetMonitorContentScaleWin32</link>,
567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a844e706059e08613de692291969111d2">_glfwGetMonitorWorkareaWin32</link>,
568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1ab4ce13c23c2b2bc9635e36ee5387375e">_glfwGetVideoModesWin32</link>,
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a7b43d8548648f7a49903525cda10e09c">_glfwGetVideoModeWin32</link>,
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1afb31cbafed71b1ea3fd13f1110d44af8">_glfwGetGammaRampWin32</link>,
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a605f08f68a28c0bde60a12a0a399938e">_glfwSetGammaRampWin32</link>,
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a37cb0ccc0788efd9a66af8f32bf5518c">_glfwCreateWindowWin32</link>,
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa152206c5c520bd0dece9b837b143fa0">_glfwDestroyWindowWin32</link>,
574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a86d6e8b4e6609cfeba7691e466b21184">_glfwSetWindowTitleWin32</link>,
575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a36bc130cc992e12d40e25a6a48e5a53b">_glfwSetWindowIconWin32</link>,
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a11dbd52d555826a65ab903f5967a6c0d">_glfwGetWindowPosWin32</link>,
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a497c96018316ca28c83a6ef2f1461a19">_glfwSetWindowPosWin32</link>,
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa7047fda835205edd1f16fe265829654">_glfwGetWindowSizeWin32</link>,
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a658f42d345f10d3ab52613b030d801c6">_glfwSetWindowSizeWin32</link>,
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ada7a6afa85a12d7a6ff3efe78e6abe0c">_glfwSetWindowSizeLimitsWin32</link>,
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ab5e4af472645ebb89e26d1e9c6366aa4">_glfwSetWindowAspectRatioWin32</link>,
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5f58eba94e456b57b09b2cc1841ce4c8">_glfwGetFramebufferSizeWin32</link>,
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a4d10fcc47127623f35696d95b5a14f05">_glfwGetWindowFrameSizeWin32</link>,
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5c8171151c6daa5a7b1f22f45e1c4827">_glfwGetWindowContentScaleWin32</link>,
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a4608d975b87d98c03adbf753b4ff6976">_glfwIconifyWindowWin32</link>,
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a7c516bd818882391fdaeabe7a13eba52">_glfwRestoreWindowWin32</link>,
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1cf6741c3f061de6500770ce5116d14d">_glfwMaximizeWindowWin32</link>,
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a02bfef52e9e9352b7cf691434d01ec70">_glfwShowWindowWin32</link>,
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a41ff01be90f8280a68455451b1d5cd64">_glfwHideWindowWin32</link>,
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a072d8e8fc92daf82e56bf4d615d2cda5">_glfwRequestWindowAttentionWin32</link>,
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5e136a8b748e12c555e0c044c337358f">_glfwFocusWindowWin32</link>,
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a20e0a994ae4879caedde480b1dddf948">_glfwSetWindowMonitorWin32</link>,
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a9b069dba7d331d2cae0ecb3e975b027e">_glfwWindowFocusedWin32</link>,
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1ef31772bba9bbbb70966126a08778d0">_glfwWindowIconifiedWin32</link>,
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a08f4731441f2215f589dc641eb015bb4">_glfwWindowVisibleWin32</link>,
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a4640f26608b837f9793ef0ee923036eb">_glfwWindowMaximizedWin32</link>,
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6e0135d2fd5538719c900c41424caa8b">_glfwWindowHoveredWin32</link>,
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5a02f919a9134279e0d46ce430986dbe">_glfwFramebufferTransparentWin32</link>,
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1abfdc4284feacb8b35eb527b81b630731">_glfwGetWindowOpacityWin32</link>,
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa9ba9944e5152d29f1aa551f14d75b2d">_glfwSetWindowResizableWin32</link>,
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0d35deb7d39352e99fba8fa96013d969">_glfwSetWindowDecoratedWin32</link>,
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a9da5d6290cad503b221e73482b67218e">_glfwSetWindowFloatingWin32</link>,
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a9428adda957ce508e3041119d670de0f">_glfwSetWindowOpacityWin32</link>,
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a08fda6580fcceccb5465cdb1fe770d7f">_glfwSetWindowMousePassthroughWin32</link>,
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a8de69356bacf2073a7d4903d2d6ec741">_glfwPollEventsWin32</link>,
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a482c57b8e130d21ad68ddf965f74e1a0">_glfwWaitEventsWin32</link>,
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a62c585e2432977fa2b9fa4757a0d4cf9">_glfwWaitEventsTimeoutWin32</link>,
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aaef33130746d9bb932ba1d7d7b51dabd">_glfwPostEmptyEventWin32</link>,
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1afdce1538a8e79a96033a8899db6e09c2">_glfwGetEGLPlatformWin32</link>,
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a142f59c1c4c9897efbecad74e02698f1">_glfwGetEGLNativeDisplayWin32</link>,
611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6c9791d77eda997cb697a353fc77d065">_glfwGetEGLNativeWindowWin32</link>,
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a42b3c1869e809150cfd5c661cf291108">_glfwGetRequiredInstanceExtensionsWin32</link>,
613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a80c3e9913415584c38f9af75ba2838a5">_glfwGetPhysicalDevicePresentationSupportWin32</link>,
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ae332c39d7d375053b5c56d340fb8acd9">_glfwCreateWindowSurfaceWin32</link>,
615 &#32;&#32;&#32;&#32;};
616 
617 &#32;&#32;&#32;&#32;*platform&#32;=&#32;win32;
618 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
619 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a3a91c3b275d47f0fbe923cca11194502"/>    <section>
    <title>_glfwCreateContextWGL()</title>
<indexterm><primary>_glfwCreateContextWGL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwCreateContextWGL</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwCreateContextWGL (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> * ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> * fbconfig)</computeroutput></para><para>
Definition at line 535 of file wgl_context.c.</para>
<programlisting>538 {
539 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>[40];
540 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pixelFormat;
541 &#32;&#32;&#32;&#32;PIXELFORMATDESCRIPTOR&#32;pfd;
542 &#32;&#32;&#32;&#32;HGLRC&#32;share&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
543 
544 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1ae2de5454bfc052ffa9c27f300fcc0425">share</link>)
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;share&#32;=&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1ae2de5454bfc052ffa9c27f300fcc0425">share</link>-&gt;<link linkend="_struct___g_l_f_wwindow_1af46919bccfa19f04aa11a3b9900f2ce0">context</link>.wgl.<link linkend="_struct___g_l_f_wcontext_1a6dfe395af278c63cd5efb05e84fb74c7">handle</link>;
546 
547 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.dc&#32;=&#32;GetDC(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
548 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.dc)
549 &#32;&#32;&#32;&#32;{
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;retrieve&#32;DC&#32;for&#32;window&quot;</emphasis>);
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
553 &#32;&#32;&#32;&#32;}
554 
555 &#32;&#32;&#32;&#32;pixelFormat&#32;=&#32;choosePixelFormatWGL(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig);
556 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!pixelFormat)
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
558 
559 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!DescribePixelFormat(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.dc,
560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pixelFormat,&#32;<emphasis role="keyword">sizeof</emphasis>(pfd),&#32;&amp;pfd))
561 &#32;&#32;&#32;&#32;{
562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;retrieve&#32;PFD&#32;for&#32;selected&#32;pixel&#32;format&quot;</emphasis>);
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
565 &#32;&#32;&#32;&#32;}
566 
567 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!SetPixelFormat(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.dc,&#32;pixelFormat,&#32;&amp;pfd))
568 &#32;&#32;&#32;&#32;{
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;set&#32;selected&#32;pixel&#32;format&quot;</emphasis>);
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
572 &#32;&#32;&#32;&#32;}
573 
574 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;==&#32;<link linkend="_glfw3_8h_1a01b3f66db266341425e9abee6b257db2">GLFW_OPENGL_API</link>)
575 &#32;&#32;&#32;&#32;{
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1ae7a2859b35b0bf3692abd6bf076ef4c7">forward</link>)
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context)
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;A&#32;forward&#32;compatible&#32;OpenGL&#32;context&#32;requested&#32;but&#32;WGL_ARB_create_context&#32;is&#32;unavailable&quot;</emphasis>);
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
585 
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a0c56aeafa0f85b1b0ba3e9371a737770">profile</link>)
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context_profile)
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;OpenGL&#32;profile&#32;requested&#32;but&#32;WGL_ARB_create_context_profile&#32;is&#32;unavailable&quot;</emphasis>);
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
595 &#32;&#32;&#32;&#32;}
596 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
597 &#32;&#32;&#32;&#32;{
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context&#32;||
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context_profile&#32;||
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.EXT_create_context_es2_profile)
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;OpenGL&#32;ES&#32;requested&#32;but&#32;WGL_ARB_create_context_es2_profile&#32;is&#32;unavailable&quot;</emphasis>);
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
606 &#32;&#32;&#32;&#32;}
607 
608 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context)
609 &#32;&#32;&#32;&#32;{
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>&#32;=&#32;0,&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;=&#32;0,&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;=&#32;0;
611 
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;==&#32;<link linkend="_glfw3_8h_1a01b3f66db266341425e9abee6b257db2">GLFW_OPENGL_API</link>)
613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1ae7a2859b35b0bf3692abd6bf076ef4c7">forward</link>)
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;|=&#32;<link linkend="_win32__platform_8h_1aaec3bbb2c9fb813e229ad64f25130da6">WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB</link>;
616 
617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a0c56aeafa0f85b1b0ba3e9371a737770">profile</link>&#32;==&#32;<link linkend="_glfw3_8h_1af094bb16da76f66ebceb19ee213b3de8">GLFW_OPENGL_CORE_PROFILE</link>)
618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;|=&#32;<link linkend="_win32__platform_8h_1a956f8c0391ca8b3076aacdd11123ab23">WGL_CONTEXT_CORE_PROFILE_BIT_ARB</link>;
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a0c56aeafa0f85b1b0ba3e9371a737770">profile</link>&#32;==&#32;<link linkend="_glfw3_8h_1ac06b663d79c8fcf04669cc8fcc0b7670">GLFW_OPENGL_COMPAT_PROFILE</link>)
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;|=&#32;<link linkend="_win32__platform_8h_1ac0e0f83037fd693f85a0a382245cded4">WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB</link>;
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;|=&#32;<link linkend="_win32__platform_8h_1a5eb4392eceedc35a06f15bba687daff4">WGL_CONTEXT_ES2_PROFILE_BIT_EXT</link>;
624 
625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a694b0434791f532ddf39bca57b94042e">debug</link>)
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;|=&#32;<link linkend="_win32__platform_8h_1a8a600cc66dbc5a788e7b16dd9c116055">WGL_CONTEXT_DEBUG_BIT_ARB</link>;
627 
628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a5aaf92358c6be9ac0dac61cc916b968f">robustness</link>)
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context_robustness)
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a5aaf92358c6be9ac0dac61cc916b968f">robustness</link>&#32;==&#32;<link linkend="_glfw3_8h_1aee84a679230d205005e22487ff678a85">GLFW_NO_RESET_NOTIFICATION</link>)
633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a276501381fad6637056ecc04c5439e31">WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB</link>,
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ac2884bc3b423afa8ef44d4426370b7bf">WGL_NO_RESET_NOTIFICATION_ARB</link>);
636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a5aaf92358c6be9ac0dac61cc916b968f">robustness</link>&#32;==&#32;<link linkend="_glfw3_8h_1aec1132f245143fc915b2f0995228564c">GLFW_LOSE_CONTEXT_ON_RESET</link>)
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a276501381fad6637056ecc04c5439e31">WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB</link>,
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aba383b9c347928b3ba1d1f749763f697">WGL_LOSE_CONTEXT_ON_RESET_ARB</link>);
641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
642 
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;|=&#32;<link linkend="_win32__platform_8h_1aa003e5620fa6d66c356ede014cdf1648">WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB</link>;
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
646 
647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a70db828a89fe653b4efd5ec03419b46d">release</link>)
648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_context_flush_control)
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a70db828a89fe653b4efd5ec03419b46d">release</link>&#32;==&#32;<link linkend="_glfw3_8h_1afca09088eccacdce4b59036cfae349c5">GLFW_RELEASE_BEHAVIOR_NONE</link>)
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a82a475adf314346fe8a5375edfa0560d">WGL_CONTEXT_RELEASE_BEHAVIOR_ARB</link>,
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1c52f05f8e71f0ad70cc196e390b8d9f">WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB</link>);
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a70db828a89fe653b4efd5ec03419b46d">release</link>&#32;==&#32;<link linkend="_glfw3_8h_1a999961d391db49cb4f949c1dece0e13b">GLFW_RELEASE_BEHAVIOR_FLUSH</link>)
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a82a475adf314346fe8a5375edfa0560d">WGL_CONTEXT_RELEASE_BEHAVIOR_ARB</link>,
659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0fbf2bf72421745143dd3505d18cb53c">WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB</link>);
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
663 
664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a7c97fb74d89b1666d0de89222551a2ee">noerror</link>)
665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context_no_error)
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a396878906cfef21a6b43de8c238f6a40">WGL_CONTEXT_OPENGL_NO_ERROR_ARB</link>,&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
669 
670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Only&#32;request&#32;an&#32;explicitly&#32;versioned&#32;context&#32;when&#32;necessary,&#32;as</emphasis>
671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;explicitly&#32;requesting&#32;version&#32;1.0&#32;does&#32;not&#32;always&#32;return&#32;the</emphasis>
672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest&#32;version&#32;supported&#32;by&#32;the&#32;driver</emphasis>
673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a51a8fa315dccf7f6217098cf0413a7a9">major</link>&#32;!=&#32;1&#32;||&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a250a475c8d778778bb8fb4ab942eddd9">minor</link>&#32;!=&#32;0)
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a64d5f1fa63a1979e33aee2949f6f21ad">WGL_CONTEXT_MAJOR_VERSION_ARB</link>,&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a51a8fa315dccf7f6217098cf0413a7a9">major</link>);
676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a043b9ae0e73a1ff853339c02a3026096">WGL_CONTEXT_MINOR_VERSION_ARB</link>,&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a250a475c8d778778bb8fb4ab942eddd9">minor</link>);
677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
678 
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>)
680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1aa9b5de1c7cb84a809ad79296192a76d3">WGL_CONTEXT_FLAGS_ARB</link>,&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>);
681 
682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>)
683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(<link linkend="_win32__platform_8h_1a6847a02f9b4e6e9712a4b32250337dc1">WGL_CONTEXT_PROFILE_MASK_ARB</link>,&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>);
684 
685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a8f427f7949c0cb386b5632aa88cb30c7">setAttrib</link>(0,&#32;0);
686 
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.handle&#32;=
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1acdca080586c894bbe2244900e8dfa24c">wglCreateContextAttribsARB</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.dc,&#32;share,&#32;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>);
689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.handle)
690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;DWORD&#32;<link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>&#32;=&#32;GetLastError();
692 
693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>&#32;==&#32;(0xc0070000&#32;|&#32;<link linkend="_win32__platform_8h_1aa711b7b414242207d8f58d9e9a8feb73">ERROR_INVALID_VERSION_ARB</link>))
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;==&#32;<link linkend="_glfw3_8h_1a01b3f66db266341425e9abee6b257db2">GLFW_OPENGL_API</link>)
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Driver&#32;does&#32;not&#32;support&#32;OpenGL&#32;version&#32;%i.%i&quot;</emphasis>,
699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a51a8fa315dccf7f6217098cf0413a7a9">major</link>,
700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a250a475c8d778778bb8fb4ab942eddd9">minor</link>);
701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Driver&#32;does&#32;not&#32;support&#32;OpenGL&#32;ES&#32;version&#32;%i.%i&quot;</emphasis>,
706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a51a8fa315dccf7f6217098cf0413a7a9">major</link>,
707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a250a475c8d778778bb8fb4ab942eddd9">minor</link>);
708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>&#32;==&#32;(0xc0070000&#32;|&#32;<link linkend="_win32__platform_8h_1a685e9dcd28f13baaa254a1c41a796a5a">ERROR_INVALID_PROFILE_ARB</link>))
711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Driver&#32;does&#32;not&#32;support&#32;the&#32;requested&#32;OpenGL&#32;profile&quot;</emphasis>);
714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>&#32;==&#32;(0xc0070000&#32;|&#32;<link linkend="_win32__platform_8h_1adf20e6297613c960933d70196939049d">ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB</link>))
716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>,
718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;The&#32;share&#32;context&#32;is&#32;not&#32;compatible&#32;with&#32;the&#32;requested&#32;context&quot;</emphasis>);
719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;==&#32;<link linkend="_glfw3_8h_1a01b3f66db266341425e9abee6b257db2">GLFW_OPENGL_API</link>)
723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;create&#32;OpenGL&#32;context&quot;</emphasis>);
726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;create&#32;OpenGL&#32;ES&#32;context&quot;</emphasis>);
731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
733 
734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
736 &#32;&#32;&#32;&#32;}
737 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
738 &#32;&#32;&#32;&#32;{
739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.handle&#32;=&#32;<link linkend="_win32__platform_8h_1a750f042435b05950e7739cbc3e0b2bd1">wglCreateContext</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.dc);
740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.handle)
741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad16c5565b4a69f9c2a9ac2c0dbc89462">GLFW_VERSION_UNAVAILABLE</link>,
743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;create&#32;OpenGL&#32;context&quot;</emphasis>);
744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
746 
747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(share)
748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_win32__platform_8h_1a6658a50ceb506c7b2cbdf85d06cfb495">wglShareLists</link>(share,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.wgl.handle))
750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;enable&#32;sharing&#32;with&#32;specified&#32;OpenGL&#32;context&quot;</emphasis>);
753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
756 &#32;&#32;&#32;&#32;}
757 
758 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.makeCurrent&#32;=&#32;makeContextCurrentWGL;
759 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.swapBuffers&#32;=&#32;swapBuffersWGL;
760 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.swapInterval&#32;=&#32;swapIntervalWGL;
761 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.extensionSupported&#32;=&#32;extensionSupportedWGL;
762 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.getProcAddress&#32;=&#32;getProcAddressWGL;
763 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy&#32;=&#32;destroyContextWGL;
764 
765 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
766 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a5b60a1c1d42c9f51b6681afca63a154a"/>    <section>
    <title>_glfwCreateCursorWin32()</title>
<indexterm><primary>_glfwCreateCursorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwCreateCursorWin32</secondary></indexterm>
<para><computeroutput>int _glfwCreateCursorWin32 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * image, int xhot, int yhot)</computeroutput></para><para>
Definition at line 2115 of file win32_window.c.</para>
<programlisting>2118 {
2119 &#32;&#32;&#32;&#32;cursor-&gt;win32.handle&#32;=&#32;(HCURSOR)&#32;createIcon(<link linkend="_structimage">image</link>,&#32;xhot,&#32;yhot,&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>);
2120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;win32.handle)
2121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2122 
2123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
2124 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ab83aeb5b11824c61a09ee83ca90d22e3"/>    <section>
    <title>_glfwCreateStandardCursorWin32()</title>
<indexterm><primary>_glfwCreateStandardCursorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwCreateStandardCursorWin32</secondary></indexterm>
<para><computeroutput>int _glfwCreateStandardCursorWin32 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, int shape)</computeroutput></para><para>
Definition at line 2126 of file win32_window.c.</para>
<programlisting>2127 {
2128 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;0;
2129 
2130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(shape)
2131 &#32;&#32;&#32;&#32;{
2132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a">GLFW_ARROW_CURSOR</link>:
2133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_NORMAL;
2134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga36185f4375eaada1b04e431244774c86">GLFW_IBEAM_CURSOR</link>:
2136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_IBEAM;
2137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22">GLFW_CROSSHAIR_CURSOR</link>:
2139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_CROSS;
2140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0">GLFW_POINTING_HAND_CURSOR</link>:
2142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;<link linkend="_win32__platform_8h_1a9a96efea829ad3f6577700fd829c8e26">OCR_HAND</link>;
2143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad">GLFW_RESIZE_EW_CURSOR</link>:
2145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_SIZEWE;
2146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388">GLFW_RESIZE_NS_CURSOR</link>:
2148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_SIZENS;
2149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da">GLFW_RESIZE_NWSE_CURSOR</link>:
2151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_SIZENWSE;
2152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gab06bba3b407f92807ba9b48de667a323">GLFW_RESIZE_NESW_CURSOR</link>:
2154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_SIZENESW;
2155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d">GLFW_RESIZE_ALL_CURSOR</link>:
2157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_SIZEALL;
2158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga297c503095b034bc8891393b637844b1">GLFW_NOT_ALLOWED_CURSOR</link>:
2160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;OCR_NO;
2161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
2163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Unknown&#32;standard&#32;cursor&quot;</emphasis>);
2164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2165 &#32;&#32;&#32;&#32;}
2166 
2167 &#32;&#32;&#32;&#32;cursor-&gt;win32.handle&#32;=&#32;LoadImageW(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,
2168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MAKEINTRESOURCEW(<emphasis role="keywordtype">id</emphasis>),&#32;IMAGE_CURSOR,&#32;0,&#32;0,
2169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LR_DEFAULTSIZE&#32;|&#32;LR_SHARED);
2170 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;win32.handle)
2171 &#32;&#32;&#32;&#32;{
2172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;create&#32;standard&#32;cursor&quot;</emphasis>);
2174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2175 &#32;&#32;&#32;&#32;}
2176 
2177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
2178 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a17207e4093e353bc490b8c23fef40e3e"/>    <section>
    <title>_glfwCreateUTF8FromWideStringWin32()</title>
<indexterm><primary>_glfwCreateUTF8FromWideStringWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwCreateUTF8FromWideStringWin32</secondary></indexterm>
<para><computeroutput>char* _glfwCreateUTF8FromWideStringWin32 (const WCHAR * source)</computeroutput></para><para>
Definition at line 408 of file win32_init.c.</para>
<programlisting>409 {
410 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
411 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
412 
413 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;=&#32;WideCharToMultiByte(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
415 &#32;&#32;&#32;&#32;{
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;to&#32;UTF-8&quot;</emphasis>);
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
419 &#32;&#32;&#32;&#32;}
420 
421 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;1);
422 
423 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!WideCharToMultiByte(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>,&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))
424 &#32;&#32;&#32;&#32;{
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;to&#32;UTF-8&quot;</emphasis>);
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>);
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
429 &#32;&#32;&#32;&#32;}
430 
431 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
432 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1afcf517cf44f0f8a87489860bc9373a54"/>    <section>
    <title>_glfwCreateWideStringFromUTF8Win32()</title>
<indexterm><primary>_glfwCreateWideStringFromUTF8Win32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwCreateWideStringFromUTF8Win32</secondary></indexterm>
<para><computeroutput>WCHAR* _glfwCreateWideStringFromUTF8Win32 (const char * source)</computeroutput></para><para>
Definition at line 380 of file win32_init.c.</para>
<programlisting>381 {
382 &#32;&#32;&#32;&#32;WCHAR*&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
383 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;
384 
385 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=&#32;MultiByteToWideChar(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
387 &#32;&#32;&#32;&#32;{
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;from&#32;UTF-8&quot;</emphasis>);
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
391 &#32;&#32;&#32;&#32;}
392 
393 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR));
394 
395 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!MultiByteToWideChar(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>,&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>))
396 &#32;&#32;&#32;&#32;{
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;from&#32;UTF-8&quot;</emphasis>);
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>);
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
401 &#32;&#32;&#32;&#32;}
402 
403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
404 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ae332c39d7d375053b5c56d340fb8acd9"/>    <section>
    <title>_glfwCreateWindowSurfaceWin32()</title>
<indexterm><primary>_glfwCreateWindowSurfaceWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwCreateWindowSurfaceWin32</secondary></indexterm>
<para><computeroutput><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> _glfwCreateWindowSurfaceWin32 (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> * allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> * surface)</computeroutput></para><para>
Definition at line 2352 of file win32_window.c.</para>
<programlisting>2356 {
2357 &#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>&#32;err;
2358 &#32;&#32;&#32;&#32;<link linkend="_struct_vk_win32_surface_create_info_k_h_r">VkWin32SurfaceCreateInfoKHR</link>&#32;sci;
2359 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aae09ac436e491e590770b5585cd57874">PFN_vkCreateWin32SurfaceKHR</link>&#32;vkCreateWin32SurfaceKHR;
2360 
2361 &#32;&#32;&#32;&#32;vkCreateWin32SurfaceKHR&#32;=&#32;(<link linkend="_win32__platform_8h_1aae09ac436e491e590770b5585cd57874">PFN_vkCreateWin32SurfaceKHR</link>)
2362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkCreateWin32SurfaceKHR&quot;</emphasis>);
2363 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkCreateWin32SurfaceKHR)
2364 &#32;&#32;&#32;&#32;{
2365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
2366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_win32_surface&#32;extension&quot;</emphasis>);
2367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
2368 &#32;&#32;&#32;&#32;}
2369 
2370 &#32;&#32;&#32;&#32;memset(&amp;sci,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(sci));
2371 &#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1a84412cd00fdce3a59f9fef14d32e2419">sType</link>&#32;=&#32;<link linkend="_internal_8h_1aff9f2b99398eb80a2b5a146bc5534ce8a14b3050f6b4f27771fee5bd2e5e552fe">VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR</link>;
2372 &#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1a4931b55db25c4ab97f3efc60d5cb764c">hinstance</link>&#32;=&#32;GetModuleHandle(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2373 &#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_win32_surface_create_info_k_h_r_1a5633124f624ab7bbb2bb42ceb65d45dc">hwnd</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle;
2374 
2375 &#32;&#32;&#32;&#32;err&#32;=&#32;vkCreateWin32SurfaceKHR(instance,&#32;&amp;sci,&#32;allocator,&#32;surface);
2376 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err)
2377 &#32;&#32;&#32;&#32;{
2378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;create&#32;Vulkan&#32;surface:&#32;%s&quot;</emphasis>,
2380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a512b47c0edcaaf41a4f70bfc8d4d78a7">_glfwGetVulkanResultString</link>(err));
2381 &#32;&#32;&#32;&#32;}
2382 
2383 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
2384 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a37cb0ccc0788efd9a66af8f32bf5518c"/>    <section>
    <title>_glfwCreateWindowWin32()</title>
<indexterm><primary>_glfwCreateWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwCreateWindowWin32</secondary></indexterm>
<para><computeroutput>int _glfwCreateWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> * wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> * ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> * fbconfig)</computeroutput></para><para>
Definition at line 1389 of file win32_window.c.</para>
<programlisting>1393 {
1394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!createNativeWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;wndconfig,&#32;fbconfig))
1395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1396 
1397 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;!=&#32;<link linkend="_glfw3_8h_1a8f6dcdc968d214ff14779564f1389264">GLFW_NO_API</link>)
1398 &#32;&#32;&#32;&#32;{
1399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a0494c9bfd3f584ab41e6dbeeaa0e6a19">GLFW_NATIVE_CONTEXT_API</link>)
1400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_wgl__context_8c_1ac60452e7fb9f2b0fdc2050999a889fe1">_glfwInitWGL</link>())
1402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_wgl__context_8c_1a3a91c3b275d47f0fbe923cca11194502">_glfwCreateContextWGL</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
1404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a03cf65c9ab01fc8b872ba58842c531c9">GLFW_EGL_CONTEXT_API</link>)
1407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1ad83def5c7af30c3bfcc9371712ba96ac">_glfwInitEGL</link>())
1409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1adfb1d7aa925810c45a2ef4efc268c2fe">_glfwCreateContextEGL</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
1411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1afd34a473af9fa81f317910ea371b19e3">GLFW_OSMESA_CONTEXT_API</link>)
1414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a9dd1594b1f8991f90844fbeb4a664163">_glfwInitOSMesa</link>())
1416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a59950232b3b545e1fa750f6bd7d46201">_glfwCreateContextOSMesa</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
1418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1420 &#32;&#32;&#32;&#32;}
1421 
1422 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1423 &#32;&#32;&#32;&#32;{
1424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1a02bfef52e9e9352b7cf691434d01ec70">_glfwShowWindowWin32</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1a5e136a8b748e12c555e0c044c337358f">_glfwFocusWindowWin32</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitToMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1428 &#32;&#32;&#32;&#32;}
1429 
1430 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1431 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a17e1a4d5ad34e0e6c9bfd31e78460618"/>    <section>
    <title>_glfwDestroyCursorWin32()</title>
<indexterm><primary>_glfwDestroyCursorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwDestroyCursorWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyCursorWin32 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 2180 of file win32_window.c.</para>
<programlisting>2181 {
2182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor-&gt;win32.handle)
2183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyIcon((HICON)&#32;cursor-&gt;win32.handle);
2184 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1aa152206c5c520bd0dece9b837b143fa0"/>    <section>
    <title>_glfwDestroyWindowWin32()</title>
<indexterm><primary>_glfwDestroyWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwDestroyWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1433 of file win32_window.c.</para>
<programlisting>1434 {
1435 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releaseMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1437 
1438 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy)
1439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1440 
1441 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.disabledCursorWindow&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.disabledCursorWindow&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1443 
1444 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle)
1445 &#32;&#32;&#32;&#32;{
1446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemovePropW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;<link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;GLFW&quot;</emphasis>);
1447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
1448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1449 &#32;&#32;&#32;&#32;}
1450 
1451 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.bigIcon)
1452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyIcon(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.bigIcon);
1453 
1454 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.smallIcon)
1455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyIcon(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.smallIcon);
1456 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a5e136a8b748e12c555e0c044c337358f"/>    <section>
    <title>_glfwFocusWindowWin32()</title>
<indexterm><primary>_glfwFocusWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwFocusWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwFocusWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1689 of file win32_window.c.</para>
<programlisting>1690 {
1691 &#32;&#32;&#32;&#32;BringWindowToTop(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
1692 &#32;&#32;&#32;&#32;SetForegroundWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
1693 &#32;&#32;&#32;&#32;SetFocus(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
1694 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a5a02f919a9134279e0d46ce430986dbe"/>    <section>
    <title>_glfwFramebufferTransparentWin32()</title>
<indexterm><primary>_glfwFramebufferTransparentWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwFramebufferTransparentWin32</secondary></indexterm>
<para><computeroutput>int _glfwFramebufferTransparentWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1831 of file win32_window.c.</para>
<programlisting>1832 {
1833 &#32;&#32;&#32;&#32;BOOL&#32;composition,&#32;opaque;
1834 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glad_8h_1a3ea846f998d64f079b86052b6c4193a8">color</link>;
1835 
1836 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.transparent)
1837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1838 
1839 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_win32__platform_8h_1a4bcb1405eb8c8c83bcb5b3089e6d2547">IsWindowsVistaOrGreater</link>())
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1841 
1842 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(FAILED(<link linkend="_win32__platform_8h_1ae42cc8f67518bd76a8ea709b485b0831">DwmIsCompositionEnabled</link>(&amp;composition))&#32;||&#32;!composition)
1843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1844 
1845 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_win32__platform_8h_1a1da7a817f596b4db22524e67ff16aea6">IsWindows8OrGreater</link>())
1846 &#32;&#32;&#32;&#32;{
1847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Disable&#32;framebuffer&#32;transparency&#32;on&#32;Windows&#32;7&#32;when&#32;the</emphasis>
1848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;colorization&#32;color&#32;is&#32;opaque,&#32;because&#32;otherwise&#32;the&#32;window</emphasis>
1849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;contents&#32;is&#32;blended&#32;additively&#32;with&#32;the&#32;previous&#32;frame&#32;instead</emphasis>
1850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;replacing&#32;it</emphasis>
1851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(FAILED(<link linkend="_win32__platform_8h_1a5e9ecbf435db8026186482a6ec574bff">DwmGetColorizationColor</link>(&amp;<link linkend="_glad_8h_1a3ea846f998d64f079b86052b6c4193a8">color</link>,&#32;&amp;opaque))&#32;||&#32;opaque)
1852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1853 &#32;&#32;&#32;&#32;}
1854 
1855 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1856 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a9df387b074c350e1cca8dbd26a375243"/>    <section>
    <title>_glfwFreeMonitorWin32()</title>
<indexterm><primary>_glfwFreeMonitorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwFreeMonitorWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwFreeMonitorWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor)</computeroutput></para><para>
Definition at line 352 of file win32_monitor.c.</para>
<programlisting>353 {
354 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1af195ff960b1b462d052bfee6c8e64ea6"/>    <section>
    <title>_glfwGetClipboardStringWin32()</title>
<indexterm><primary>_glfwGetClipboardStringWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetClipboardStringWin32</secondary></indexterm>
<para><computeroutput>const char* _glfwGetClipboardStringWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2235 of file win32_window.c.</para>
<programlisting>2236 {
2237 &#32;&#32;&#32;&#32;HANDLE&#32;<link linkend="_glext_8h_1ab49790263c78300fbf05719e38246198">object</link>;
2238 &#32;&#32;&#32;&#32;WCHAR*&#32;<link linkend="_glad_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>;
2239 
2240 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!OpenClipboard(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle))
2241 &#32;&#32;&#32;&#32;{
2242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;open&#32;clipboard&quot;</emphasis>);
2244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2245 &#32;&#32;&#32;&#32;}
2246 
2247 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;=&#32;GetClipboardData(CF_UNICODETEXT);
2248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">object</emphasis>)
2249 &#32;&#32;&#32;&#32;{
2250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1ga196e125ef261d94184e2b55c05762f14">GLFW_FORMAT_UNAVAILABLE</link>,
2251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;clipboard&#32;to&#32;string&quot;</emphasis>);
2252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CloseClipboard();
2253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2254 &#32;&#32;&#32;&#32;}
2255 
2256 &#32;&#32;&#32;&#32;<link linkend="_structbuffer">buffer</link>&#32;=&#32;GlobalLock(<emphasis role="keywordtype">object</emphasis>);
2257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_structbuffer">buffer</link>)
2258 &#32;&#32;&#32;&#32;{
2259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;lock&#32;global&#32;handle&quot;</emphasis>);
2261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CloseClipboard();
2262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2263 &#32;&#32;&#32;&#32;}
2264 
2265 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.clipboardString);
2266 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.clipboardString&#32;=&#32;<link linkend="_win32__init_8c_1a17207e4093e353bc490b8c23fef40e3e">_glfwCreateUTF8FromWideStringWin32</link>(<link linkend="_structbuffer">buffer</link>);
2267 
2268 &#32;&#32;&#32;&#32;GlobalUnlock(<emphasis role="keywordtype">object</emphasis>);
2269 &#32;&#32;&#32;&#32;CloseClipboard();
2270 
2271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.clipboardString;
2272 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a731aa16e1109aa6963a7902af9b1e290"/>    <section>
    <title>_glfwGetCursorPosWin32()</title>
<indexterm><primary>_glfwGetCursorPosWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetCursorPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetCursorPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double * xpos, double * ypos)</computeroutput></para><para>
Definition at line 2058 of file win32_window.c.</para>
<programlisting>2059 {
2060 &#32;&#32;&#32;&#32;POINT&#32;pos;
2061 
2062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GetCursorPos(&amp;pos))
2063 &#32;&#32;&#32;&#32;{
2064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ScreenToClient(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;&amp;pos);
2065 
2066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
2067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;pos.x;
2068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
2069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;pos.y;
2070 &#32;&#32;&#32;&#32;}
2071 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a142f59c1c4c9897efbecad74e02698f1"/>    <section>
    <title>_glfwGetEGLNativeDisplayWin32()</title>
<indexterm><primary>_glfwGetEGLNativeDisplayWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetEGLNativeDisplayWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> _glfwGetEGLNativeDisplayWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2315 of file win32_window.c.</para>
<programlisting>2316 {
2317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetDC(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle);
2318 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a6c9791d77eda997cb697a353fc77d065"/>    <section>
    <title>_glfwGetEGLNativeWindowWin32()</title>
<indexterm><primary>_glfwGetEGLNativeWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetEGLNativeWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> _glfwGetEGLNativeWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2320 of file win32_window.c.</para>
<programlisting>2321 {
2322 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle;
2323 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1afdce1538a8e79a96033a8899db6e09c2"/>    <section>
    <title>_glfwGetEGLPlatformWin32()</title>
<indexterm><primary>_glfwGetEGLPlatformWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetEGLPlatformWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> _glfwGetEGLPlatformWin32 (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> ** attribs)</computeroutput></para><para>
Definition at line 2274 of file win32_window.c.</para>
<programlisting>2275 {
2276 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a9fca831c2886082570fa87e2b7a9267e">ANGLE_platform_angle</link>)
2277 &#32;&#32;&#32;&#32;{
2278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;0;
2279 
2280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1afc8f1d5be1e42ae0a8a1ddecd7482d7d">ANGLE_platform_angle_opengl</link>)
2281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1ad8d9e97ed7790811470366b338833623">GLFW_ANGLE_PLATFORM_TYPE_OPENGL</link>)
2283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a50a1085aadafafe8bae962043ed5003b">EGL_PLATFORM_ANGLE_TYPE_OPENGL_ANGLE</link>;
2284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1a0003c089da020cbf957218e70245bb65">GLFW_ANGLE_PLATFORM_TYPE_OPENGLES</link>)
2285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a531cd925c0aa5326aa3a361088cee03e">EGL_PLATFORM_ANGLE_TYPE_OPENGLES_ANGLE</link>;
2286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2287 
2288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a373fe47d0bde740c7febb8513d9baff9">ANGLE_platform_angle_d3d</link>)
2289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1a6e8fdc83113d247ad792bb5c4e82c894">GLFW_ANGLE_PLATFORM_TYPE_D3D9</link>)
2291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a093545b239ca9267c24b2607f3540f90">EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE</link>;
2292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1ad6eae659811a52a5cdc43c362aedfa33">GLFW_ANGLE_PLATFORM_TYPE_D3D11</link>)
2293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1ab28ef383cc2bf7d68abad243c4b1042a">EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE</link>;
2294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2295 
2296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1ab843671532e7d8d3fbce804e813b460a">ANGLE_platform_angle_vulkan</link>)
2297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1a579ac83506c7546709dad91960cc7ca1">GLFW_ANGLE_PLATFORM_TYPE_VULKAN</link>)
2299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a8b965b212dd1ad4c83e892377f14eab1">EGL_PLATFORM_ANGLE_TYPE_VULKAN_ANGLE</link>;
2300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2301 
2302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>)
2303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(3,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link>));
2305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[0]&#32;=&#32;<link linkend="_internal_8h_1a30fbd18d0e6ca218cb9b3a579f56972e">EGL_PLATFORM_ANGLE_TYPE_ANGLE</link>;
2306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[1]&#32;=&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>;
2307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[2]&#32;=&#32;<link linkend="_internal_8h_1a6ae1eb8c8ec07b6f5a68f9cd6551691a">EGL_NONE</link>;
2308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_internal_8h_1ae585501f87a1353f924098f26084bb7c">EGL_PLATFORM_ANGLE_ANGLE</link>;
2309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2310 &#32;&#32;&#32;&#32;}
2311 
2312 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
2313 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a5f58eba94e456b57b09b2cc1841ce4c8"/>    <section>
    <title>_glfwGetFramebufferSizeWin32()</title>
<indexterm><primary>_glfwGetFramebufferSizeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetFramebufferSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetFramebufferSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 1615 of file win32_window.c.</para>
<programlisting>1616 {
1617 &#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1aa7047fda835205edd1f16fe265829654">_glfwGetWindowSizeWin32</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
1618 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1afb31cbafed71b1ea3fd13f1110d44af8"/>    <section>
    <title>_glfwGetGammaRampWin32()</title>
<indexterm><primary>_glfwGetGammaRampWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetGammaRampWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwGetGammaRampWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp)</computeroutput></para><para>
Definition at line 490 of file win32_monitor.c.</para>
<programlisting>491 {
492 &#32;&#32;&#32;&#32;HDC&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>;
493 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[3][256];
494 
495 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>&#32;=&#32;CreateDCW(<link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;DISPLAY&quot;</emphasis>,&#32;monitor-&gt;win32.adapterName,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
496 &#32;&#32;&#32;&#32;GetDeviceGammaRamp(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>,&#32;<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>);
497 &#32;&#32;&#32;&#32;DeleteDC(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>);
498 
499 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1acb6a8b432b06fd0accdfc0e046785109">_glfwAllocGammaArrays</link>(ramp,&#32;256);
500 
501 &#32;&#32;&#32;&#32;memcpy(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1a2cce5d968734b685623eef913e635138">red</link>,&#32;&#32;&#32;<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[0],&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[0]));
502 &#32;&#32;&#32;&#32;memcpy(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1affccc6f5df47820b6562d709da3a5a3a">green</link>,&#32;<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[1],&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[1]));
503 &#32;&#32;&#32;&#32;memcpy(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1acf0c836d0efe29c392fe8d1a1042744b">blue</link>,&#32;&#32;<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[2],&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[2]));
504 
505 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
506 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a666ce7b96d7717b71d8086be7b4e9fb3"/>    <section>
    <title>_glfwGetHMONITORContentScaleWin32()</title>
<indexterm><primary>_glfwGetHMONITORContentScaleWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetHMONITORContentScaleWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetHMONITORContentScaleWin32 (HMONITOR handle, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 316 of file win32_monitor.c.</para>
<programlisting>317 {
318 &#32;&#32;&#32;&#32;UINT&#32;xdpi,&#32;ydpi;
319 
320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;0.f;
322 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yscale)
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;0.f;
324 
325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a5e26976cd63d69f6ff83f646e6a6f27f">IsWindows8Point1OrGreater</link>())
326 &#32;&#32;&#32;&#32;{
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a0a09db022c26f82f539c0e925feae84a">GetDpiForMonitor</link>(handle,&#32;<link linkend="_win32__platform_8h_1a6d3b6e6160452fd0315bf529461dadcfa75d3ba3b96559377e5cac23d6e380162">MDT_EFFECTIVE_DPI</link>,&#32;&amp;xdpi,&#32;&amp;ydpi)&#32;!=&#32;S_OK)
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;query&#32;monitor&#32;DPI&quot;</emphasis>);
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
332 &#32;&#32;&#32;&#32;}
333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
334 &#32;&#32;&#32;&#32;{
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;HDC&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>&#32;=&#32;GetDC(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xdpi&#32;=&#32;GetDeviceCaps(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>,&#32;LOGPIXELSX);
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ydpi&#32;=&#32;GetDeviceCaps(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>,&#32;LOGPIXELSY);
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReleaseDC(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>);
339 &#32;&#32;&#32;&#32;}
340 
341 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;xdpi&#32;/&#32;(float)&#32;<link linkend="_win32__platform_8h_1ad7cf236b9f6824d4924c8397b9478e0c">USER_DEFAULT_SCREEN_DPI</link>;
343 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yscale)
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;ydpi&#32;/&#32;(float)&#32;<link linkend="_win32__platform_8h_1ad7cf236b9f6824d4924c8397b9478e0c">USER_DEFAULT_SCREEN_DPI</link>;
345 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a2083a2b904b8909ef96ebe7e34f373c3"/>    <section>
    <title>_glfwGetKeyScancodeWin32()</title>
<indexterm><primary>_glfwGetKeyScancodeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetKeyScancodeWin32</secondary></indexterm>
<para><computeroutput>int _glfwGetKeyScancodeWin32 (int key)</computeroutput></para><para>
Definition at line 2110 of file win32_window.c.</para>
<programlisting>2111 {
2112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.scancodes[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
2113 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ab4f284ba366d4134e9fb38c4f76c10a3"/>    <section>
    <title>_glfwGetMappingNameWin32()</title>
<indexterm><primary>_glfwGetMappingNameWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetMappingNameWin32</secondary></indexterm>
<para><computeroutput>const char* _glfwGetMappingNameWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 743 of file win32_joystick.c.</para>
<programlisting>744 {
745 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Windows&quot;</emphasis>;
746 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a3fe7a2258a3ce26e3a8257c3d0ea1ca0"/>    <section>
    <title>_glfwGetMonitorContentScaleWin32()</title>
<indexterm><primary>_glfwGetMonitorContentScaleWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetMonitorContentScaleWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorContentScaleWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 373 of file win32_monitor.c.</para>
<programlisting>375 {
376 &#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a666ce7b96d7717b71d8086be7b4e9fb3">_glfwGetHMONITORContentScaleWin32</link>(monitor-&gt;win32.handle,&#32;xscale,&#32;yscale);
377 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a4261cca207894705081bbe41a912529b"/>    <section>
    <title>_glfwGetMonitorPosWin32()</title>
<indexterm><primary>_glfwGetMonitorPosWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetMonitorPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorPosWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * xpos, int * ypos)</computeroutput></para><para>
Definition at line 356 of file win32_monitor.c.</para>
<programlisting>357 {
358 &#32;&#32;&#32;&#32;DEVMODEW&#32;dm;
359 &#32;&#32;&#32;&#32;ZeroMemory(&amp;dm,&#32;<emphasis role="keyword">sizeof</emphasis>(dm));
360 &#32;&#32;&#32;&#32;dm.dmSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(dm);
361 
362 &#32;&#32;&#32;&#32;EnumDisplaySettingsExW(monitor-&gt;win32.adapterName,
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ENUM_CURRENT_SETTINGS,
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;dm,
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ae4a3f2aeae276c46f44d9d5c08452c12">EDS_ROTATEDMODE</link>);
366 
367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;dm.dmPosition.x;
369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;dm.dmPosition.y;
371 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a844e706059e08613de692291969111d2"/>    <section>
    <title>_glfwGetMonitorWorkareaWin32()</title>
<indexterm><primary>_glfwGetMonitorWorkareaWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetMonitorWorkareaWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetMonitorWorkareaWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * xpos, int * ypos, int * width, int * height)</computeroutput></para><para>
Definition at line 379 of file win32_monitor.c.</para>
<programlisting>382 {
383 &#32;&#32;&#32;&#32;MONITORINFO&#32;mi&#32;=&#32;{&#32;<emphasis role="keyword">sizeof</emphasis>(mi)&#32;};
384 &#32;&#32;&#32;&#32;GetMonitorInfo(monitor-&gt;win32.handle,&#32;&amp;mi);
385 
386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;mi.rcWork.left;
388 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;mi.rcWork.top;
390 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;mi.rcWork.right&#32;-&#32;mi.rcWork.left;
392 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;mi.rcWork.bottom&#32;-&#32;mi.rcWork.top;
394 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a80c3e9913415584c38f9af75ba2838a5"/>    <section>
    <title>_glfwGetPhysicalDevicePresentationSupportWin32()</title>
<indexterm><primary>_glfwGetPhysicalDevicePresentationSupportWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetPhysicalDevicePresentationSupportWin32</secondary></indexterm>
<para><computeroutput>int _glfwGetPhysicalDevicePresentationSupportWin32 (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</computeroutput></para><para>
Definition at line 2334 of file win32_window.c.</para>
<programlisting>2337 {
2338 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a91754c61c45a61e9b0858bca669ccf63">PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR</link>
2339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkGetPhysicalDeviceWin32PresentationSupportKHR&#32;=
2340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_win32__platform_8h_1a91754c61c45a61e9b0858bca669ccf63">PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR</link>)
2341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkGetPhysicalDeviceWin32PresentationSupportKHR&quot;</emphasis>);
2342 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkGetPhysicalDeviceWin32PresentationSupportKHR)
2343 &#32;&#32;&#32;&#32;{
2344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
2345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_win32_surface&#32;extension&quot;</emphasis>);
2346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2347 &#32;&#32;&#32;&#32;}
2348 
2349 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vkGetPhysicalDeviceWin32PresentationSupportKHR(device,&#32;queuefamily);
2350 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a42b3c1869e809150cfd5c661cf291108"/>    <section>
    <title>_glfwGetRequiredInstanceExtensionsWin32()</title>
<indexterm><primary>_glfwGetRequiredInstanceExtensionsWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetRequiredInstanceExtensionsWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetRequiredInstanceExtensionsWin32 (char ** extensions)</computeroutput></para><para>
Definition at line 2325 of file win32_window.c.</para>
<programlisting>2326 {
2327 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a5169664f24499b5b82dec093165ca166">KHR_surface</link>&#32;||&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1afdbf06087f8a6bc40f7fb687ee16b04c">KHR_win32_surface</link>)
2328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2329 
2330 &#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[0]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_surface&quot;</emphasis>;
2331 &#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[1]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_win32_surface&quot;</emphasis>;
2332 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a7e6687a8499d9bf866660ad394b19750"/>    <section>
    <title>_glfwGetScancodeNameWin32()</title>
<indexterm><primary>_glfwGetScancodeNameWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetScancodeNameWin32</secondary></indexterm>
<para><computeroutput>const char* _glfwGetScancodeNameWin32 (int scancode)</computeroutput></para><para>
Definition at line 2098 of file win32_window.c.</para>
<programlisting>2099 {
2100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;&lt;&#32;0&#32;||&#32;scancode&#32;&gt;&#32;(KF_EXTENDED&#32;|&#32;0xff)&#32;||
2101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keycodes[scancode]&#32;==&#32;<link linkend="_group__keys_1ga99aacc875b6b27a072552631e13775c7">GLFW_KEY_UNKNOWN</link>)
2102 &#32;&#32;&#32;&#32;{
2103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>,&#32;<emphasis role="stringliteral">&quot;Invalid&#32;scancode&#32;%i&quot;</emphasis>,&#32;scancode);
2104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2105 &#32;&#32;&#32;&#32;}
2106 
2107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames[<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keycodes[scancode]];
2108 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ab4ce13c23c2b2bc9635e36ee5387375e"/>    <section>
    <title>_glfwGetVideoModesWin32()</title>
<indexterm><primary>_glfwGetVideoModesWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetVideoModesWin32</secondary></indexterm>
<para><computeroutput><link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>* _glfwGetVideoModesWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int * count)</computeroutput></para><para>
Definition at line 396 of file win32_monitor.c.</para>
<programlisting>397 {
398 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;modeIndex&#32;=&#32;0,&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;=&#32;0;
399 &#32;&#32;&#32;&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
400 
401 &#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=&#32;0;
402 
403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)
404 &#32;&#32;&#32;&#32;{
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>;
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DEVMODEW&#32;dm;
408 
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZeroMemory(&amp;dm,&#32;<emphasis role="keyword">sizeof</emphasis>(dm));
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dm.dmSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(dm);
411 
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!EnumDisplaySettingsW(monitor-&gt;win32.adapterName,&#32;modeIndex,&#32;&amp;dm))
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
414 
415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modeIndex++;
416 
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;modes&#32;with&#32;less&#32;than&#32;15&#32;BPP</emphasis>
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dm.dmBitsPerPel&#32;&lt;&#32;15)
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
420 
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.width&#32;&#32;=&#32;dm.dmPelsWidth;
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.height&#32;=&#32;dm.dmPelsHeight;
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.refreshRate&#32;=&#32;dm.dmDisplayFrequency;
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a3f83dfd3a9beffeba9bac74ec15071a0">_glfwSplitBPP</link>(dm.dmBitsPerPel,
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.redBits,
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.greenBits,
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>.blueBits);
428 
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;*<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;&#32;&#32;i++)
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_internal_8h_1aaca82db2d0453cb2895b0aa5e495387f">_glfwCompareVideoModes</link>(<link linkend="_structresult">result</link>&#32;+&#32;i,&#32;&amp;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)&#32;==&#32;0)
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
434 
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;duplicate&#32;modes</emphasis>
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;*<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
438 
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;win32.modesPruned)
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;modes&#32;not&#32;supported&#32;by&#32;the&#32;connected&#32;displays</emphasis>
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ChangeDisplaySettingsExW(monitor-&gt;win32.adapterName,
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;dm,
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CDS_TEST,
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;!=&#32;DISP_CHANGE_SUCCESSFUL)
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
451 
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;==&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;+=&#32;128;
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;(<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*)&#32;<link linkend="_init_8c_1a428a65f03ddd87abacc7db0251b4e9af">_glfw_realloc</link>(<link linkend="_structresult">result</link>,&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>));
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
457 
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*count)++;
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>[*<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;-&#32;1]&#32;=&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>;
460 &#32;&#32;&#32;&#32;}
461 
462 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!*<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
463 &#32;&#32;&#32;&#32;{
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Report&#32;the&#32;current&#32;mode&#32;if&#32;no&#32;valid&#32;modes&#32;were&#32;found</emphasis>
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(1,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>));
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a7b43d8548648f7a49903525cda10e09c">_glfwGetVideoModeWin32</link>(monitor,&#32;<link linkend="_structresult">result</link>);
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=&#32;1;
468 &#32;&#32;&#32;&#32;}
469 
470 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
471 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a7b43d8548648f7a49903525cda10e09c"/>    <section>
    <title>_glfwGetVideoModeWin32()</title>
<indexterm><primary>_glfwGetVideoModeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetVideoModeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetVideoModeWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * mode)</computeroutput></para><para>
Definition at line 473 of file win32_monitor.c.</para>
<programlisting>474 {
475 &#32;&#32;&#32;&#32;DEVMODEW&#32;dm;
476 &#32;&#32;&#32;&#32;ZeroMemory(&amp;dm,&#32;<emphasis role="keyword">sizeof</emphasis>(dm));
477 &#32;&#32;&#32;&#32;dm.dmSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(dm);
478 
479 &#32;&#32;&#32;&#32;EnumDisplaySettingsW(monitor-&gt;win32.adapterName,&#32;ENUM_CURRENT_SETTINGS,&#32;&amp;dm);
480 
481 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;width&#32;&#32;=&#32;dm.dmPelsWidth;
482 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;height&#32;=&#32;dm.dmPelsHeight;
483 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;refreshRate&#32;=&#32;dm.dmDisplayFrequency;
484 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a3f83dfd3a9beffeba9bac74ec15071a0">_glfwSplitBPP</link>(dm.dmBitsPerPel,
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;redBits,
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;greenBits,
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;blueBits);
488 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a5c8171151c6daa5a7b1f22f45e1c4827"/>    <section>
    <title>_glfwGetWindowContentScaleWin32()</title>
<indexterm><primary>_glfwGetWindowContentScaleWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetWindowContentScaleWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowContentScaleWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 1652 of file win32_window.c.</para>
<programlisting>1653 {
1654 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;HANDLE&#32;handle&#32;=&#32;MonitorFromWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,
1655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MONITOR_DEFAULTTONEAREST);
1656 &#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a666ce7b96d7717b71d8086be7b4e9fb3">_glfwGetHMONITORContentScaleWin32</link>(handle,&#32;xscale,&#32;yscale);
1657 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a4d10fcc47127623f35696d95b5a14f05"/>    <section>
    <title>_glfwGetWindowFrameSizeWin32()</title>
<indexterm><primary>_glfwGetWindowFrameSizeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetWindowFrameSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowFrameSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * left, int * top, int * right, int * bottom)</computeroutput></para><para>
Definition at line 1620 of file win32_window.c.</para>
<programlisting>1623 {
1624 &#32;&#32;&#32;&#32;RECT&#32;rect;
1625 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
1626 
1627 &#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1aa7047fda835205edd1f16fe265829654">_glfwGetWindowSizeWin32</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
1628 &#32;&#32;&#32;&#32;SetRect(&amp;rect,&#32;0,&#32;0,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
1629 
1630 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a2beecf9b7d4233876e8c0b9214099146">_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</link>())
1631 &#32;&#32;&#32;&#32;{
1632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a13bab8e489d9ad05951150e27d3a6334">AdjustWindowRectExForDpi</link>(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1adbb79683794601577be49f6ebe606dd0">GetDpiForWindow</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle));
1635 &#32;&#32;&#32;&#32;}
1636 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1637 &#32;&#32;&#32;&#32;{
1638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AdjustWindowRectEx(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>));
1640 &#32;&#32;&#32;&#32;}
1641 
1642 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>)
1643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>&#32;=&#32;-rect.left;
1644 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>)
1645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>&#32;=&#32;-rect.top;
1646 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>)
1647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>&#32;=&#32;rect.right&#32;-&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>;
1648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)
1649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>&#32;=&#32;rect.bottom&#32;-&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
1650 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1abfdc4284feacb8b35eb527b81b630731"/>    <section>
    <title>_glfwGetWindowOpacityWin32()</title>
<indexterm><primary>_glfwGetWindowOpacityWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetWindowOpacityWin32</secondary></indexterm>
<para><computeroutput>float _glfwGetWindowOpacityWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1905 of file win32_window.c.</para>
<programlisting>1906 {
1907 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>;
1908 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>;
1909 
1910 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((GetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_EXSTYLE)&#32;&amp;&#32;WS_EX_LAYERED)&#32;&amp;&amp;
1911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetLayeredWindowAttributes(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;&amp;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>,&#32;&amp;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>))
1912 &#32;&#32;&#32;&#32;{
1913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;&amp;&#32;LWA_ALPHA)
1914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>&#32;/&#32;255.f;
1915 &#32;&#32;&#32;&#32;}
1916 
1917 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1.f;
1918 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a11dbd52d555826a65ab903f5967a6c0d"/>    <section>
    <title>_glfwGetWindowPosWin32()</title>
<indexterm><primary>_glfwGetWindowPosWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetWindowPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * xpos, int * ypos)</computeroutput></para><para>
Definition at line 1507 of file win32_window.c.</para>
<programlisting>1508 {
1509 &#32;&#32;&#32;&#32;POINT&#32;pos&#32;=&#32;{&#32;0,&#32;0&#32;};
1510 &#32;&#32;&#32;&#32;ClientToScreen(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;&amp;pos);
1511 
1512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
1513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;pos.x;
1514 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
1515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;pos.y;
1516 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1aa7047fda835205edd1f16fe265829654"/>    <section>
    <title>_glfwGetWindowSizeWin32()</title>
<indexterm><primary>_glfwGetWindowSizeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwGetWindowSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 1538 of file win32_window.c.</para>
<programlisting>1539 {
1540 &#32;&#32;&#32;&#32;RECT&#32;area;
1541 &#32;&#32;&#32;&#32;GetClientRect(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;&amp;area);
1542 
1543 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
1544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;area.right;
1545 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
1546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;area.bottom;
1547 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a41ff01be90f8280a68455451b1d5cd64"/>    <section>
    <title>_glfwHideWindowWin32()</title>
<indexterm><primary>_glfwHideWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwHideWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwHideWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1679 of file win32_window.c.</para>
<programlisting>1680 {
1681 &#32;&#32;&#32;&#32;ShowWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;SW_HIDE);
1682 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a4608d975b87d98c03adbf753b4ff6976"/>    <section>
    <title>_glfwIconifyWindowWin32()</title>
<indexterm><primary>_glfwIconifyWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwIconifyWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwIconifyWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1659 of file win32_window.c.</para>
<programlisting>1660 {
1661 &#32;&#32;&#32;&#32;ShowWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;SW_MINIMIZE);
1662 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a3e920595135793177be13d7ad39d20b7"/>    <section>
    <title>_glfwInitJoysticksWin32()</title>
<indexterm><primary>_glfwInitJoysticksWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwInitJoysticksWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwInitJoysticksWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 573 of file win32_joystick.c.</para>
<programlisting>574 {
575 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.dinput8.instance)
576 &#32;&#32;&#32;&#32;{
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(FAILED(<link linkend="_dinput_8h_1afa169e6e963eb705bb8458933a6dac16">DirectInput8Create</link>(GetModuleHandle(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>),
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_dinput_8h_1a1d7ab29fdefabdb4e7e7cd27ac4c9934">DIRECTINPUT_VERSION</link>,
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_win32__joystick_8c_1a4d04555ffcfbf4bec0bcda3d131213b1">IID_IDirectInput8W</link>,
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">void</emphasis>**)&#32;&amp;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.dinput8.api,
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)))
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;create&#32;interface&quot;</emphasis>);
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
587 &#32;&#32;&#32;&#32;}
588 
589 &#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a58cafa45ca625cc01aee93124c190b13">_glfwDetectJoystickConnectionWin32</link>();
590 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
591 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ac60452e7fb9f2b0fdc2050999a889fe1"/>    <section>
    <title>_glfwInitWGL()</title>
<indexterm><primary>_glfwInitWGL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwInitWGL</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwInitWGL (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 400 of file wgl_context.c.</para>
<programlisting>401 {
402 &#32;&#32;&#32;&#32;PIXELFORMATDESCRIPTOR&#32;pfd;
403 &#32;&#32;&#32;&#32;HGLRC&#32;prc,&#32;<link linkend="_truetype__test__win32_8c_1a474d98ad521f5aad6b7f75b8de66a1e0">rc</link>;
404 &#32;&#32;&#32;&#32;HDC&#32;pdc,&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>;
405 
406 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance)
407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
408 
409 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance&#32;=&#32;<link linkend="_internal_8h_1a0ca69d860ad190bdb5beab6de9160842">_glfwPlatformLoadModule</link>(<emphasis role="stringliteral">&quot;opengl32.dll&quot;</emphasis>);
410 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance)
411 &#32;&#32;&#32;&#32;{
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;load&#32;opengl32.dll&quot;</emphasis>);
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
415 &#32;&#32;&#32;&#32;}
416 
417 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.<link linkend="_struct___g_l_f_wlibrary_1ab54a110bc2f6c69907856d9375fa882c">CreateContext</link>&#32;=&#32;(<link linkend="_win32__platform_8h_1acd4ffae7f53c6e3df2f1bd1feae206a1">PFN_wglCreateContext</link>)
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance,&#32;<emphasis role="stringliteral">&quot;wglCreateContext&quot;</emphasis>);
419 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.DeleteContext&#32;=&#32;(<link linkend="_win32__platform_8h_1a680be7b362dea206756ecf78046ec568">PFN_wglDeleteContext</link>)
420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance,&#32;<emphasis role="stringliteral">&quot;wglDeleteContext&quot;</emphasis>);
421 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.<link linkend="_struct___g_l_f_wlibrary_1adcf8173be4e691390a0bc60540509c9e">GetProcAddress</link>&#32;=&#32;(<link linkend="_win32__platform_8h_1afe938f6abc996c782668b4830fd49844">PFN_wglGetProcAddress</link>)
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance,&#32;<emphasis role="stringliteral">&quot;wglGetProcAddress&quot;</emphasis>);
423 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.GetCurrentDC&#32;=&#32;(<link linkend="_win32__platform_8h_1ab7fdfe541f5de8218150ec71991b5e1a">PFN_wglGetCurrentDC</link>)
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance,&#32;<emphasis role="stringliteral">&quot;wglGetCurrentDC&quot;</emphasis>);
425 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.GetCurrentContext&#32;=&#32;(<link linkend="_win32__platform_8h_1ab67fa4ec6b012531a46090e0b6c73543">PFN_wglGetCurrentContext</link>)
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance,&#32;<emphasis role="stringliteral">&quot;wglGetCurrentContext&quot;</emphasis>);
427 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.<link linkend="_struct___g_l_f_wlibrary_1ab4b9194ec5fbc1114553f9665cb990c3">MakeCurrent</link>&#32;=&#32;(<link linkend="_win32__platform_8h_1a01b96444528ae07c30f644ad3b75dd79">PFN_wglMakeCurrent</link>)
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance,&#32;<emphasis role="stringliteral">&quot;wglMakeCurrent&quot;</emphasis>);
429 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ShareLists&#32;=&#32;(<link linkend="_win32__platform_8h_1a4282d885859a70343d72b80af9380b27">PFN_wglShareLists</link>)
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a370840ea8f3f1016d07030f7a06bf36e">_glfwPlatformGetModuleSymbol</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance,&#32;<emphasis role="stringliteral">&quot;wglShareLists&quot;</emphasis>);
431 
432 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;A&#32;dummy&#32;context&#32;has&#32;to&#32;be&#32;created&#32;for&#32;opengl32.dll&#32;to&#32;load&#32;the</emphasis>
433 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;OpenGL&#32;ICD,&#32;from&#32;which&#32;we&#32;can&#32;then&#32;query&#32;WGL&#32;extensions</emphasis>
434 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;This&#32;code&#32;will&#32;accept&#32;the&#32;Microsoft&#32;GDI&#32;ICD;&#32;accelerated&#32;context</emphasis>
435 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;creation&#32;failure&#32;occurs&#32;during&#32;manual&#32;pixel&#32;format&#32;enumeration</emphasis>
436 
437 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>&#32;=&#32;GetDC(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle);
438 
439 &#32;&#32;&#32;&#32;ZeroMemory(&amp;pfd,&#32;<emphasis role="keyword">sizeof</emphasis>(pfd));
440 &#32;&#32;&#32;&#32;pfd.nSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(pfd);
441 &#32;&#32;&#32;&#32;pfd.nVersion&#32;=&#32;1;
442 &#32;&#32;&#32;&#32;pfd.dwFlags&#32;=&#32;PFD_DRAW_TO_WINDOW&#32;|&#32;PFD_SUPPORT_OPENGL&#32;|&#32;PFD_DOUBLEBUFFER;
443 &#32;&#32;&#32;&#32;pfd.iPixelType&#32;=&#32;PFD_TYPE_RGBA;
444 &#32;&#32;&#32;&#32;pfd.cColorBits&#32;=&#32;24;
445 
446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!SetPixelFormat(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>,&#32;ChoosePixelFormat(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>,&#32;&amp;pfd),&#32;&amp;pfd))
447 &#32;&#32;&#32;&#32;{
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;set&#32;pixel&#32;format&#32;for&#32;dummy&#32;context&quot;</emphasis>);
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
451 &#32;&#32;&#32;&#32;}
452 
453 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a474d98ad521f5aad6b7f75b8de66a1e0">rc</link>&#32;=&#32;<link linkend="_win32__platform_8h_1a750f042435b05950e7739cbc3e0b2bd1">wglCreateContext</link>(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>);
454 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a474d98ad521f5aad6b7f75b8de66a1e0">rc</link>)
455 &#32;&#32;&#32;&#32;{
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;create&#32;dummy&#32;context&quot;</emphasis>);
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
459 &#32;&#32;&#32;&#32;}
460 
461 &#32;&#32;&#32;&#32;pdc&#32;=&#32;<link linkend="_win32__platform_8h_1a8d5248de079ec0afe7a9ccaccfc0bfce">wglGetCurrentDC</link>();
462 &#32;&#32;&#32;&#32;prc&#32;=&#32;<link linkend="_win32__platform_8h_1af28a48d6d098fef9e6e79cbe9df8c87d">wglGetCurrentContext</link>();
463 
464 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_win32__platform_8h_1a2aa491735fbf4ee7df91c6a7cef32d5d">wglMakeCurrent</link>(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>,&#32;<link linkend="_truetype__test__win32_8c_1a474d98ad521f5aad6b7f75b8de66a1e0">rc</link>))
465 &#32;&#32;&#32;&#32;{
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;WGL:&#32;Failed&#32;to&#32;make&#32;dummy&#32;context&#32;current&quot;</emphasis>);
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a2aa491735fbf4ee7df91c6a7cef32d5d">wglMakeCurrent</link>(pdc,&#32;prc);
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aab1f95aa242eec7e28d7bc559b7e1d3b">wglDeleteContext</link>(<link linkend="_truetype__test__win32_8c_1a474d98ad521f5aad6b7f75b8de66a1e0">rc</link>);
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
471 &#32;&#32;&#32;&#32;}
472 
473 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Functions&#32;must&#32;be&#32;loaded&#32;first&#32;as&#32;they&apos;re&#32;needed&#32;to&#32;retrieve&#32;the</emphasis>
474 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;extension&#32;string&#32;that&#32;tells&#32;us&#32;whether&#32;the&#32;functions&#32;are&#32;supported</emphasis>
475 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.GetExtensionsStringEXT&#32;=&#32;(<link linkend="_win32__platform_8h_1a7614b1a68db31fbed2cf336f2b74994b">PFNWGLGETEXTENSIONSSTRINGEXTPROC</link>)
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1ac6c8ffa0b1d53fc4fc812f471d6524">wglGetProcAddress</link>(<emphasis role="stringliteral">&quot;wglGetExtensionsStringEXT&quot;</emphasis>);
477 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.GetExtensionsStringARB&#32;=&#32;(<link linkend="_win32__platform_8h_1a3428606a981275d46b67922d5b97e498">PFNWGLGETEXTENSIONSSTRINGARBPROC</link>)
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1ac6c8ffa0b1d53fc4fc812f471d6524">wglGetProcAddress</link>(<emphasis role="stringliteral">&quot;wglGetExtensionsStringARB&quot;</emphasis>);
479 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.CreateContextAttribsARB&#32;=&#32;(<link linkend="_win32__platform_8h_1ada319dc3b2d571bc9f4d242e5cb9a543">PFNWGLCREATECONTEXTATTRIBSARBPROC</link>)
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1ac6c8ffa0b1d53fc4fc812f471d6524">wglGetProcAddress</link>(<emphasis role="stringliteral">&quot;wglCreateContextAttribsARB&quot;</emphasis>);
481 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.SwapIntervalEXT&#32;=&#32;(<link linkend="_win32__platform_8h_1a9157176fda95d4db49f3a552978c43e6">PFNWGLSWAPINTERVALEXTPROC</link>)
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1ac6c8ffa0b1d53fc4fc812f471d6524">wglGetProcAddress</link>(<emphasis role="stringliteral">&quot;wglSwapIntervalEXT&quot;</emphasis>);
483 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.GetPixelFormatAttribivARB&#32;=&#32;(<link linkend="_win32__platform_8h_1a39931f248131b270558f144f21b3c2af">PFNWGLGETPIXELFORMATATTRIBIVARBPROC</link>)
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1ac6c8ffa0b1d53fc4fc812f471d6524">wglGetProcAddress</link>(<emphasis role="stringliteral">&quot;wglGetPixelFormatAttribivARB&quot;</emphasis>);
485 
486 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;WGL_ARB_extensions_string&#32;and&#32;WGL_EXT_extensions_string&#32;are&#32;not</emphasis>
487 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;checked&#32;below&#32;as&#32;we&#32;are&#32;already&#32;using&#32;them</emphasis>
488 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_multisample&#32;=
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_multisample&quot;</emphasis>);
490 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_framebuffer_sRGB&#32;=
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_framebuffer_sRGB&quot;</emphasis>);
492 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.EXT_framebuffer_sRGB&#32;=
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_EXT_framebuffer_sRGB&quot;</emphasis>);
494 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context&#32;=
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_create_context&quot;</emphasis>);
496 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context_profile&#32;=
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_create_context_profile&quot;</emphasis>);
498 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.EXT_create_context_es2_profile&#32;=
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_EXT_create_context_es2_profile&quot;</emphasis>);
500 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context_robustness&#32;=
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_create_context_robustness&quot;</emphasis>);
502 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_create_context_no_error&#32;=
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_create_context_no_error&quot;</emphasis>);
504 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.EXT_swap_control&#32;=
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_EXT_swap_control&quot;</emphasis>);
506 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.EXT_colorspace&#32;=
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_EXT_colorspace&quot;</emphasis>);
508 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_pixel_format&#32;=
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_pixel_format&quot;</emphasis>);
510 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.ARB_context_flush_control&#32;=
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;extensionSupportedWGL(<emphasis role="stringliteral">&quot;WGL_ARB_context_flush_control&quot;</emphasis>);
512 
513 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a2aa491735fbf4ee7df91c6a7cef32d5d">wglMakeCurrent</link>(pdc,&#32;prc);
514 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aab1f95aa242eec7e28d7bc559b7e1d3b">wglDeleteContext</link>(<link linkend="_truetype__test__win32_8c_1a474d98ad521f5aad6b7f75b8de66a1e0">rc</link>);
515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
516 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1af4042dcaff3b650d19d2052ea5778bbf"/>    <section>
    <title>_glfwInitWin32()</title>
<indexterm><primary>_glfwInitWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwInitWin32</secondary></indexterm>
<para><computeroutput>int _glfwInitWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 621 of file win32_init.c.</para>
<programlisting>622 {
623 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!loadLibraries())
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
625 
626 &#32;&#32;&#32;&#32;createKeyTables();
627 &#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1afc4eeee5a7d5b62252466d3f6740c48b">_glfwUpdateKeyNamesWin32</link>();
628 
629 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a8889f30a5ad0faeff9dcfb915ac5cf27">_glfwIsWindows10CreatorsUpdateOrGreaterWin32</link>())
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a067e1d6f40e35ce50c89b3df937f8bbe">SetProcessDpiAwarenessContext</link>(<link linkend="_win32__platform_8h_1ac007743843b15f477f33dc5c3dd0507a">DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</link>);
631 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a5e26976cd63d69f6ff83f646e6a6f27f">IsWindows8Point1OrGreater</link>())
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa2f8c4cf133af6bf2fb63a09d5cb9451">SetProcessDpiAwareness</link>(<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097">PROCESS_PER_MONITOR_DPI_AWARE</link>);
633 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a4bcb1405eb8c8c83bcb5b3089e6d2547">IsWindowsVistaOrGreater</link>())
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a33bdd095adc0364c3ffd9ef077ea2f5b">SetProcessDPIAware</link>();
635 
636 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_win32__platform_8h_1a51e8da6667fce5464f07bc810fc780dc">_glfwRegisterWindowClassWin32</link>())
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
638 
639 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!createHelperWindow())
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
641 
642 &#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a345b11644c658a9a94b0eeb4ed4a0618">_glfwPollMonitorsWin32</link>();
643 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
644 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a596868de8858d6d69cc642152a319b24"/>    <section>
    <title>_glfwInputErrorWin32()</title>
<indexterm><primary>_glfwInputErrorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwInputErrorWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputErrorWin32 (int error, const char * description)</computeroutput></para><para>
Definition at line 436 of file win32_init.c.</para>
<programlisting>437 {
438 &#32;&#32;&#32;&#32;WCHAR&#32;<link linkend="_structbuffer">buffer</link>[<link linkend="_internal_8h_1af6333ef81718d365141bb1a64ed0c2e3">_GLFW_MESSAGE_SIZE</link>]&#32;=&#32;<link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;&quot;</emphasis>;
439 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>[<link linkend="_internal_8h_1af6333ef81718d365141bb1a64ed0c2e3">_GLFW_MESSAGE_SIZE</link>]&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
440 
441 &#32;&#32;&#32;&#32;FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM&#32;|
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FORMAT_MESSAGE_IGNORE_INSERTS&#32;|
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FORMAT_MESSAGE_MAX_WIDTH_MASK,
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetLastError()&#32;&amp;&#32;0xffff,
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MAKELANGID(LANG_NEUTRAL,&#32;SUBLANG_DEFAULT),
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structbuffer">buffer</link>,
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structbuffer">buffer</link>)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR),
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
450 &#32;&#32;&#32;&#32;WideCharToMultiByte(CP_UTF8,&#32;0,&#32;<link linkend="_structbuffer">buffer</link>,&#32;-1,&#32;<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>),&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
451 
452 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>,&#32;<emphasis role="stringliteral">&quot;%s:&#32;%s&quot;</emphasis>,&#32;description,&#32;<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>);
453 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a5ce4ee459a0874a32dc1b0e79c3a0619"/>    <section>
    <title>_glfwIsWindows10BuildOrGreaterWin32()</title>
<indexterm><primary>_glfwIsWindows10BuildOrGreaterWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwIsWindows10BuildOrGreaterWin32</secondary></indexterm>
<para><computeroutput>BOOL _glfwIsWindows10BuildOrGreaterWin32 (WORD build)</computeroutput></para><para>
Definition at line 526 of file win32_init.c.</para>
<programlisting>527 {
528 &#32;&#32;&#32;&#32;OSVERSIONINFOEXW&#32;osvi&#32;=&#32;{&#32;<emphasis role="keyword">sizeof</emphasis>(osvi),&#32;10,&#32;0,&#32;build&#32;};
529 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;=&#32;VER_MAJORVERSION&#32;|&#32;VER_MINORVERSION&#32;|&#32;VER_BUILDNUMBER;
530 &#32;&#32;&#32;&#32;ULONGLONG&#32;cond&#32;=&#32;VerSetConditionMask(0,&#32;VER_MAJORVERSION,&#32;VER_GREATER_EQUAL);
531 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_MINORVERSION,&#32;VER_GREATER_EQUAL);
532 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_BUILDNUMBER,&#32;VER_GREATER_EQUAL);
533 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Use&#32;RtlVerifyVersionInfo&#32;instead&#32;of&#32;VerifyVersionInfoW&#32;as&#32;the</emphasis>
534 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;latter&#32;lies&#32;unless&#32;the&#32;user&#32;knew&#32;to&#32;embed&#32;a&#32;non-default&#32;manifest</emphasis>
535 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;announcing&#32;support&#32;for&#32;Windows&#32;10&#32;via&#32;supportedOS&#32;GUID</emphasis>
536 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_win32__platform_8h_1abfd9f0bf7f4fe1da260cc3a694d6228f">RtlVerifyVersionInfo</link>(&amp;osvi,&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>,&#32;cond)&#32;==&#32;0;
537 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a78f377571872189aa6e46ef54afae7a4"/>    <section>
    <title>_glfwIsWindowsVersionOrGreaterWin32()</title>
<indexterm><primary>_glfwIsWindowsVersionOrGreaterWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwIsWindowsVersionOrGreaterWin32</secondary></indexterm>
<para><computeroutput>BOOL _glfwIsWindowsVersionOrGreaterWin32 (WORD major, WORD minor, WORD sp)</computeroutput></para><para>
Definition at line 511 of file win32_init.c.</para>
<programlisting>512 {
513 &#32;&#32;&#32;&#32;OSVERSIONINFOEXW&#32;osvi&#32;=&#32;{&#32;<emphasis role="keyword">sizeof</emphasis>(osvi),&#32;major,&#32;minor,&#32;0,&#32;0,&#32;{0},&#32;sp&#32;};
514 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;=&#32;VER_MAJORVERSION&#32;|&#32;VER_MINORVERSION&#32;|&#32;VER_SERVICEPACKMAJOR;
515 &#32;&#32;&#32;&#32;ULONGLONG&#32;cond&#32;=&#32;VerSetConditionMask(0,&#32;VER_MAJORVERSION,&#32;VER_GREATER_EQUAL);
516 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_MINORVERSION,&#32;VER_GREATER_EQUAL);
517 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_SERVICEPACKMAJOR,&#32;VER_GREATER_EQUAL);
518 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Use&#32;RtlVerifyVersionInfo&#32;instead&#32;of&#32;VerifyVersionInfoW&#32;as&#32;the</emphasis>
519 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;latter&#32;lies&#32;unless&#32;the&#32;user&#32;knew&#32;to&#32;embed&#32;a&#32;non-default&#32;manifest</emphasis>
520 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;announcing&#32;support&#32;for&#32;Windows&#32;10&#32;via&#32;supportedOS&#32;GUID</emphasis>
521 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_win32__platform_8h_1abfd9f0bf7f4fe1da260cc3a694d6228f">RtlVerifyVersionInfo</link>(&amp;osvi,&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>,&#32;cond)&#32;==&#32;0;
522 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a1cf6741c3f061de6500770ce5116d14d"/>    <section>
    <title>_glfwMaximizeWindowWin32()</title>
<indexterm><primary>_glfwMaximizeWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwMaximizeWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwMaximizeWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1669 of file win32_window.c.</para>
<programlisting>1670 {
1671 &#32;&#32;&#32;&#32;ShowWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;SW_MAXIMIZE);
1672 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a8de69356bacf2073a7d4903d2d6ec741"/>    <section>
    <title>_glfwPollEventsWin32()</title>
<indexterm><primary>_glfwPollEventsWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwPollEventsWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPollEventsWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1957 of file win32_window.c.</para>
<programlisting>1958 {
1959 &#32;&#32;&#32;&#32;MSG&#32;msg;
1960 &#32;&#32;&#32;&#32;HWND&#32;handle;
1961 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>;
1962 
1963 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(PeekMessageW(&amp;msg,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;0,&#32;PM_REMOVE))
1964 &#32;&#32;&#32;&#32;{
1965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(msg.message&#32;==&#32;WM_QUIT)
1966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;While&#32;GLFW&#32;does&#32;not&#32;itself&#32;post&#32;WM_QUIT,&#32;other&#32;processes</emphasis>
1968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;may&#32;post&#32;it&#32;to&#32;this&#32;one,&#32;for&#32;example&#32;Task&#32;Manager</emphasis>
1969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Treat&#32;WM_QUIT&#32;as&#32;a&#32;close&#32;on&#32;all&#32;windows</emphasis>
1970 
1971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7859e386c1ff4ed65e13e6ba1e189cfe">windowListHead</link>;
1972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ae47e309820934e21c92a3e60faeefe8e">_glfwInputWindowCloseRequest</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;next;
1976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TranslateMessage(&amp;msg);
1981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DispatchMessageW(&amp;msg);
1982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1983 &#32;&#32;&#32;&#32;}
1984 
1985 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Release&#32;modifier&#32;keys&#32;that&#32;the&#32;system&#32;did&#32;not&#32;emit&#32;KEYUP&#32;for</emphasis>
1986 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Shift&#32;keys&#32;on&#32;Windows&#32;tend&#32;to&#32;&quot;stick&quot;&#32;when&#32;both&#32;are&#32;pressed&#32;as</emphasis>
1987 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;no&#32;key&#32;up&#32;message&#32;is&#32;generated&#32;by&#32;the&#32;first&#32;key&#32;release</emphasis>
1988 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Windows&#32;key&#32;is&#32;not&#32;reported&#32;as&#32;released&#32;by&#32;the&#32;Win+V&#32;hotkey</emphasis>
1989 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Other&#32;Win&#32;hotkeys&#32;are&#32;handled&#32;implicitly&#32;by&#32;_glfwInputWindowFocus</emphasis>
1990 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;because&#32;they&#32;change&#32;the&#32;input&#32;focus</emphasis>
1991 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;The&#32;other&#32;half&#32;of&#32;this&#32;is&#32;in&#32;the&#32;WM_*KEY*&#32;handler&#32;in&#32;windowProc</emphasis>
1992 &#32;&#32;&#32;&#32;handle&#32;=&#32;GetActiveWindow();
1993 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(handle)
1994 &#32;&#32;&#32;&#32;{
1995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;GetPropW(handle,&#32;<link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;GLFW&quot;</emphasis>);
1996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
1999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;keys[4][2]&#32;=
2000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;VK_LSHIFT,&#32;<link linkend="_group__keys_1ga8a530a28a65c44ab5d00b759b756d3f6">GLFW_KEY_LEFT_SHIFT</link>&#32;},
2002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;VK_RSHIFT,&#32;<link linkend="_group__keys_1gaffca36b99c9dce1a19cb9befbadce691">GLFW_KEY_RIGHT_SHIFT</link>&#32;},
2003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;VK_LWIN,&#32;<link linkend="_group__keys_1gafb1207c91997fc295afd1835fbc5641a">GLFW_KEY_LEFT_SUPER</link>&#32;},
2004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;VK_RWIN,&#32;<link linkend="_group__keys_1gad4547a3e8e247594acb60423fe6502db">GLFW_KEY_RIGHT_SUPER</link>&#32;}
2005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2006 
2007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;4;&#32;&#32;i++)
2008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;vk&#32;=&#32;keys[i][0];
2010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;keys[i][1];
2011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;scancode&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.scancodes[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
2012 
2013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((GetKeyState(vk)&#32;&amp;&#32;0x8000))
2014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
2015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;keys[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>]&#32;!=&#32;<link linkend="_group__input_1ga2485743d0b59df3791c45951c4195265">GLFW_PRESS</link>)
2016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
2017 
2018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1aba4a5bf53c475cf2dc3e594c3c5034ab">_glfwInputKey</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>,&#32;scancode,&#32;<link linkend="_group__input_1gada11d965c4da13090ad336e030e4d11f">GLFW_RELEASE</link>,&#32;getKeyMods());
2019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2021 &#32;&#32;&#32;&#32;}
2022 
2023 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.disabledCursorWindow;
2024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2025 &#32;&#32;&#32;&#32;{
2026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
2027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1aa7047fda835205edd1f16fe265829654">_glfwGetWindowSizeWin32</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2028 
2029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Re-center&#32;the&#32;cursor&#32;only&#32;if&#32;it&#32;has&#32;moved&#32;since&#32;the&#32;last&#32;call,</emphasis>
2030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;avoid&#32;breaking&#32;glfwWaitEvents&#32;with&#32;WM_MOUSEMOVE</emphasis>
2031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.lastCursorPosX&#32;!=&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;/&#32;2&#32;||
2032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.lastCursorPosY&#32;!=&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;/&#32;2)
2033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1a7adc955bc72784fdf854cfd6e32ba287">_glfwSetCursorPosWin32</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;/&#32;2,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;/&#32;2);
2035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2036 &#32;&#32;&#32;&#32;}
2037 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a031cd959c74b03ac0523bbe77f3b117e"/>    <section>
    <title>_glfwPollJoystickWin32()</title>
<indexterm><primary>_glfwPollJoystickWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwPollJoystickWin32</secondary></indexterm>
<para><computeroutput>int _glfwPollJoystickWin32 (<link linkend="_struct___g_l_f_wjoystick">_GLFWjoystick</link> * js, int mode)</computeroutput></para><para>
Definition at line 604 of file win32_joystick.c.</para>
<programlisting>605 {
606 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(js-&gt;win32.device)
607 &#32;&#32;&#32;&#32;{
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;ai&#32;=&#32;0,&#32;bi&#32;=&#32;0,&#32;pi&#32;=&#32;0;
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HRESULT&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_d_i_j_o_y_s_t_a_t_e">DIJOYSTATE</link>&#32;state;
611 
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_dinput_8h_1ab18a02de299693772608441ee9100ac6">IDirectInputDevice8_Poll</link>(js-&gt;win32.device);
613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_dinput_8h_1a4bb2b89fae4c53e596e2c29ddafc53ba">IDirectInputDevice8_GetDeviceState</link>(js-&gt;win32.device,
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(state),
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;state);
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;<link linkend="_dinput_8h_1a744a5f6d4ca7882c0835e87a4cea2578">DIERR_NOTACQUIRED</link>&#32;||&#32;<link linkend="_structresult">result</link>&#32;==&#32;<link linkend="_dinput_8h_1aadd51bdf0e53047ab5d39f334ee3699f">DIERR_INPUTLOST</link>)
617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_dinput_8h_1ad58e96d0c42e9d49d22669d6b1b48dae">IDirectInputDevice8_Acquire</link>(js-&gt;win32.device);
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_dinput_8h_1ab18a02de299693772608441ee9100ac6">IDirectInputDevice8_Poll</link>(js-&gt;win32.device);
620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_dinput_8h_1a4bb2b89fae4c53e596e2c29ddafc53ba">IDirectInputDevice8_GetDeviceState</link>(js-&gt;win32.device,
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(state),
622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;state);
623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
624 
625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(FAILED(<link linkend="_structresult">result</link>))
626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closeJoystick(js);
628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
630 
631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="_internal_8h_1afacd50de7ce642cb201352bba9c73307">_GLFW_POLL_PRESENCE</link>)
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
633 
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;js-&gt;win32.objectCount;&#32;&#32;i++)
635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>*)&#32;&amp;state&#32;+&#32;js-&gt;win32.objects[i].offset;
637 
638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;switch&#32;(js-&gt;win32.objects[i].type)
639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_win32__joystick_8c_1a106797aadafb40536144108a327d7899">_GLFW_TYPE_AXIS</link>:
641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_win32__joystick_8c_1a3e46214f179e9569bbaaf7001c4a84cb">_GLFW_TYPE_SLIDER</link>:
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;(*((LONG*)&#32;<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>)&#32;+&#32;0.5f)&#32;/&#32;32767.5<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>;
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ab91e3f3a89daff3809c3817a57a4f523">_glfwInputJoystickAxis</link>(js,&#32;ai,&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ai++;
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
648 
649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_win32__joystick_8c_1a51c03f1b45c64281f526e735075248e1">_GLFW_TYPE_BUTTON</link>:
650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;(*((BYTE*)&#32;<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>)&#32;&amp;&#32;0x80)&#32;!=&#32;0;
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1af1048006805591e17cc431c016f539f5">_glfwInputJoystickButton</link>(js,&#32;bi,&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bi++;
654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
656 
657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_win32__joystick_8c_1a3af724408ec3bc4c86ecac8241cfa94d">_GLFW_TYPE_POV</link>:
658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;states[9]&#32;=
660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1ga8c9720c76cd1b912738159ed74c85b36">GLFW_HAT_UP</link>,
662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1ga94aea0ae241a8b902883536c592ee693">GLFW_HAT_RIGHT_UP</link>,
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1ga252586e3bbde75f4b0e07ad3124867f5">GLFW_HAT_RIGHT</link>,
664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1gad7f0e4f52fd68d734863aaeadab3a3f5">GLFW_HAT_RIGHT_DOWN</link>,
665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1gad60d1fd0dc85c18f2642cbae96d3deff">GLFW_HAT_DOWN</link>,
666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1ga76c02baf1ea345fcbe3e8ff176a73e19">GLFW_HAT_LEFT_DOWN</link>,
667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1gac775f4b3154fdf5db93eb432ba546dff">GLFW_HAT_LEFT</link>,
668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1ga638f0e20dc5de90de21a33564e8ce129">GLFW_HAT_LEFT_UP</link>,
669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__hat__state_1gae2c0bcb7aec609e4736437554f6638fd">GLFW_HAT_CENTERED</link>
670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
671 
672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Screams&#32;of&#32;horror&#32;are&#32;appropriate&#32;at&#32;this&#32;point</emphasis>
673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;stateIndex&#32;=&#32;LOWORD(*(DWORD*)&#32;<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>)&#32;/&#32;(45&#32;*&#32;<link linkend="_dinput_8h_1a63861314608667d0b1c02d6b5b672971">DI_DEGREES</link>);
674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stateIndex&#32;&lt;&#32;0&#32;||&#32;stateIndex&#32;&gt;&#32;8)
675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stateIndex&#32;=&#32;8;
676 
677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1aca3d4e257b8212cf2a713f9a1069ff08">_glfwInputJoystickHat</link>(js,&#32;pi,&#32;states[stateIndex]);
678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pi++;
679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
683 &#32;&#32;&#32;&#32;}
684 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
685 &#32;&#32;&#32;&#32;{
686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;dpad&#32;=&#32;0;
687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e">XINPUT_STATE</link>&#32;xis;
689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;WORD&#32;buttons[10]&#32;=
690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1abc16418681df26e5550d4b1cd0ee189f">XINPUT_GAMEPAD_A</link>,
692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1a2c8ca2ad832e581f82e020da9dc3df76">XINPUT_GAMEPAD_B</link>,
693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1a601cb8ab3003686dc9d62166323e1eae">XINPUT_GAMEPAD_X</link>,
694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1a1033c4b2e32e532f77c60ecaf42f94c6">XINPUT_GAMEPAD_Y</link>,
695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1ac4e92e3baf1077141925bd994a8df5e2">XINPUT_GAMEPAD_LEFT_SHOULDER</link>,
696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1aa8669aec44f097aa63bbee10cd95dcaa">XINPUT_GAMEPAD_RIGHT_SHOULDER</link>,
697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1a60a5564a9661ec8002f57aee5a036920">XINPUT_GAMEPAD_BACK</link>,
698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1a30f3024691937a5d40381da611eb53a5">XINPUT_GAMEPAD_START</link>,
699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1afa3822de8ee77924f74978908b026940">XINPUT_GAMEPAD_LEFT_THUMB</link>,
700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_xinput_8h_1af8df547f70dd2e60a9cf9693ff34d381">XINPUT_GAMEPAD_RIGHT_THUMB</link>
701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
702 
703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_xinput_8h_1aa72a1b166b2d99969df0a07446ffc875">XInputGetState</link>(js-&gt;win32.index,&#32;&amp;xis);
704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;!=&#32;ERROR_SUCCESS)
705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;ERROR_DEVICE_NOT_CONNECTED)
707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closeJoystick(js);
708 
709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
711 
712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="_internal_8h_1afacd50de7ce642cb201352bba9c73307">_GLFW_POLL_PRESENCE</link>)
713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
714 
715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ab91e3f3a89daff3809c3817a57a4f523">_glfwInputJoystickAxis</link>(js,&#32;0,&#32;(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1acab2d1e1bda5277f4cbd9abdf6b82066">sThumbLX</link>&#32;+&#32;0.5f)&#32;/&#32;32767.5f);
716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ab91e3f3a89daff3809c3817a57a4f523">_glfwInputJoystickAxis</link>(js,&#32;1,&#32;-(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1ad0c91ee8c26e828438bacb475f9c5ec3">sThumbLY</link>&#32;+&#32;0.5f)&#32;/&#32;32767.5f);
717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ab91e3f3a89daff3809c3817a57a4f523">_glfwInputJoystickAxis</link>(js,&#32;2,&#32;(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1ae6c4c141613af0574fc86a40fdf14405">sThumbRX</link>&#32;+&#32;0.5f)&#32;/&#32;32767.5f);
718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ab91e3f3a89daff3809c3817a57a4f523">_glfwInputJoystickAxis</link>(js,&#32;3,&#32;-(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1a89660a58eda7e822d44abbe1af7aea3b">sThumbRY</link>&#32;+&#32;0.5f)&#32;/&#32;32767.5f);
719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ab91e3f3a89daff3809c3817a57a4f523">_glfwInputJoystickAxis</link>(js,&#32;4,&#32;xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1a50480b9dd5f9d0f5db9d47358c66b0da">bLeftTrigger</link>&#32;/&#32;127.5f&#32;-&#32;1.f);
720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ab91e3f3a89daff3809c3817a57a4f523">_glfwInputJoystickAxis</link>(js,&#32;5,&#32;xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1a065347fca7403ff5c399b21af5a0e1f3">bRightTrigger</link>&#32;/&#32;127.5f&#32;-&#32;1.f);
721 
722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;10;&#32;&#32;i++)
723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1aa67905941abea0fac79e57b4fb8b5124">wButtons</link>&#32;&amp;&#32;buttons[i])&#32;?&#32;1&#32;:&#32;0;
725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1af1048006805591e17cc431c016f539f5">_glfwInputJoystickButton</link>(js,&#32;i,&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
727 
728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1aa67905941abea0fac79e57b4fb8b5124">wButtons</link>&#32;&amp;&#32;<link linkend="_xinput_8h_1a20b7a903ac4a045ddbf97f54c9b7fe43">XINPUT_GAMEPAD_DPAD_UP</link>)
729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dpad&#32;|=&#32;<link linkend="_group__hat__state_1ga8c9720c76cd1b912738159ed74c85b36">GLFW_HAT_UP</link>;
730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1aa67905941abea0fac79e57b4fb8b5124">wButtons</link>&#32;&amp;&#32;<link linkend="_xinput_8h_1a9f552fa69b963475330a38af68266989">XINPUT_GAMEPAD_DPAD_RIGHT</link>)
731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dpad&#32;|=&#32;<link linkend="_group__hat__state_1ga252586e3bbde75f4b0e07ad3124867f5">GLFW_HAT_RIGHT</link>;
732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1aa67905941abea0fac79e57b4fb8b5124">wButtons</link>&#32;&amp;&#32;<link linkend="_xinput_8h_1aa39a471445e0695725826ec3460dd15f">XINPUT_GAMEPAD_DPAD_DOWN</link>)
733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dpad&#32;|=&#32;<link linkend="_group__hat__state_1gad60d1fd0dc85c18f2642cbae96d3deff">GLFW_HAT_DOWN</link>;
734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xis.<link linkend="_struct___x_i_n_p_u_t___s_t_a_t_e_1a5eee32c04cc4419aa6ae2d24a53b56fa">Gamepad</link>.<link linkend="_struct___x_i_n_p_u_t___g_a_m_e_p_a_d_1aa67905941abea0fac79e57b4fb8b5124">wButtons</link>&#32;&amp;&#32;<link linkend="_xinput_8h_1a7bfc5bbdebf1a9ee61d9c127522bc333">XINPUT_GAMEPAD_DPAD_LEFT</link>)
735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dpad&#32;|=&#32;<link linkend="_group__hat__state_1gac775f4b3154fdf5db93eb432ba546dff">GLFW_HAT_LEFT</link>;
736 
737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1aca3d4e257b8212cf2a713f9a1069ff08">_glfwInputJoystickHat</link>(js,&#32;0,&#32;dpad);
738 &#32;&#32;&#32;&#32;}
739 
740 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
741 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a345b11644c658a9a94b0eeb4ed4a0618"/>    <section>
    <title>_glfwPollMonitorsWin32()</title>
<indexterm><primary>_glfwPollMonitorsWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwPollMonitorsWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPollMonitorsWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 136 of file win32_monitor.c.</para>
<programlisting>137 {
138 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;disconnectedCount;
139 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>**&#32;disconnected&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
140 &#32;&#32;&#32;&#32;DWORD&#32;adapterIndex,&#32;displayIndex;
141 &#32;&#32;&#32;&#32;DISPLAY_DEVICEW&#32;adapter,&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>;
142 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*&#32;monitor;
143 
144 &#32;&#32;&#32;&#32;disconnectedCount&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>;
145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(disconnectedCount)
146 &#32;&#32;&#32;&#32;{
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disconnected&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*));
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(disconnected,
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1acb84371972f4d704deb0cdc649a1f1da">monitors</link>,
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1ae3f408467579cb3fb517fcd39fa23568">monitorCount</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link>*));
151 &#32;&#32;&#32;&#32;}
152 
153 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(adapterIndex&#32;=&#32;0;&#32;&#32;;&#32;&#32;adapterIndex++)
154 &#32;&#32;&#32;&#32;{
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1abc25b1b7cd5fe7f2fe3d010f0d1867ba">_GLFW_INSERT_LAST</link>;
156 
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZeroMemory(&amp;adapter,&#32;<emphasis role="keyword">sizeof</emphasis>(adapter));
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adapter.cb&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(adapter);
159 
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!EnumDisplayDevicesW(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;adapterIndex,&#32;&amp;adapter,&#32;0))
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
162 
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(adapter.StateFlags&#32;&amp;&#32;<link linkend="_win32__platform_8h_1acfc9af5fc06a9d2336c4d876213a96f4">DISPLAY_DEVICE_ACTIVE</link>))
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
165 
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(adapter.StateFlags&#32;&amp;&#32;DISPLAY_DEVICE_PRIMARY_DEVICE)
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a9455a4c5815aa9184abd69811f939496">_GLFW_INSERT_FIRST</link>;
168 
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(displayIndex&#32;=&#32;0;&#32;&#32;;&#32;&#32;displayIndex++)
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ZeroMemory(&amp;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>));
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>.cb&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>);
173 
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!EnumDisplayDevicesW(adapter.DeviceName,&#32;displayIndex,&#32;&amp;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>,&#32;0))
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
176 
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>.StateFlags&#32;&amp;&#32;<link linkend="_win32__platform_8h_1acfc9af5fc06a9d2336c4d876213a96f4">DISPLAY_DEVICE_ACTIVE</link>))
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
179 
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;disconnectedCount;&#32;&#32;i++)
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(disconnected[i]&#32;&amp;&amp;
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wcscmp(disconnected[i]-&gt;win32.displayName,
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>.DeviceName)&#32;==&#32;0)
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disconnected[i]&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;handle&#32;may&#32;have&#32;changed,&#32;update</emphasis>
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EnumDisplayMonitors(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;monitorCallback,&#32;(LPARAM)&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1acb84371972f4d704deb0cdc649a1f1da">monitors</link>[i]);
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
192 
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;disconnectedCount)
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
195 
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor&#32;=&#32;createMonitor(&amp;adapter,&#32;&amp;<link linkend="_boing_8c_1a4ea013001a5fb47853d0fab8f8de35cd">display</link>);
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!monitor)
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(disconnected);
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
202 
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a2a45c0c0677b73011b7364e2cdd9760d">_glfwInputMonitor</link>(monitor,&#32;<link linkend="_glfw3_8h_1abe11513fd1ffbee5bb9b173f06028b9e">GLFW_CONNECTED</link>,&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>);
204 
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1abc25b1b7cd5fe7f2fe3d010f0d1867ba">_GLFW_INSERT_LAST</link>;
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
207 
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;If&#32;an&#32;active&#32;adapter&#32;does&#32;not&#32;have&#32;any&#32;display&#32;devices</emphasis>
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;(as&#32;sometimes&#32;happens),&#32;add&#32;it&#32;directly&#32;as&#32;a&#32;monitor</emphasis>
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(displayIndex&#32;==&#32;0)
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;disconnectedCount;&#32;&#32;i++)
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(disconnected[i]&#32;&amp;&amp;
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wcscmp(disconnected[i]-&gt;win32.adapterName,
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adapter.DeviceName)&#32;==&#32;0)
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disconnected[i]&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
222 
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;disconnectedCount)
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
225 
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor&#32;=&#32;createMonitor(&amp;adapter,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!monitor)
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(disconnected);
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
232 
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a2a45c0c0677b73011b7364e2cdd9760d">_glfwInputMonitor</link>(monitor,&#32;<link linkend="_glfw3_8h_1abe11513fd1ffbee5bb9b173f06028b9e">GLFW_CONNECTED</link>,&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>);
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
235 &#32;&#32;&#32;&#32;}
236 
237 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;disconnectedCount;&#32;&#32;i++)
238 &#32;&#32;&#32;&#32;{
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(disconnected[i])
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a2a45c0c0677b73011b7364e2cdd9760d">_glfwInputMonitor</link>(disconnected[i],&#32;<link linkend="_glfw3_8h_1aab64b25921ef21d89252d6f0a71bfc32">GLFW_DISCONNECTED</link>,&#32;0);
241 &#32;&#32;&#32;&#32;}
242 
243 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(disconnected);
244 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1aaef33130746d9bb932ba1d7d7b51dabd"/>    <section>
    <title>_glfwPostEmptyEventWin32()</title>
<indexterm><primary>_glfwPostEmptyEventWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwPostEmptyEventWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPostEmptyEventWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2053 of file win32_window.c.</para>
<programlisting>2054 {
2055 &#32;&#32;&#32;&#32;PostMessage(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle,&#32;WM_NULL,&#32;0,&#32;0);
2056 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a87187d130a267838b8565c44603151e5"/>    <section>
    <title>_glfwRawMouseMotionSupportedWin32()</title>
<indexterm><primary>_glfwRawMouseMotionSupportedWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwRawMouseMotionSupportedWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwRawMouseMotionSupportedWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1952 of file win32_window.c.</para>
<programlisting>1953 {
1954 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1955 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a51e8da6667fce5464f07bc810fc780dc"/>    <section>
    <title>_glfwRegisterWindowClassWin32()</title>
<indexterm><primary>_glfwRegisterWindowClassWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwRegisterWindowClassWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwRegisterWindowClassWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1348 of file win32_window.c.</para>
<programlisting>1349 {
1350 &#32;&#32;&#32;&#32;WNDCLASSEXW&#32;wc;
1351 
1352 &#32;&#32;&#32;&#32;ZeroMemory(&amp;wc,&#32;<emphasis role="keyword">sizeof</emphasis>(wc));
1353 &#32;&#32;&#32;&#32;wc.cbSize&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(wc);
1354 &#32;&#32;&#32;&#32;wc.style&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;CS_HREDRAW&#32;|&#32;CS_VREDRAW&#32;|&#32;CS_OWNDC;
1355 &#32;&#32;&#32;&#32;wc.lpfnWndProc&#32;&#32;&#32;=&#32;(WNDPROC)&#32;windowProc;
1356 &#32;&#32;&#32;&#32;wc.hInstance&#32;&#32;&#32;&#32;&#32;=&#32;GetModuleHandleW(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1357 &#32;&#32;&#32;&#32;wc.hCursor&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;LoadCursorW(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;IDC_ARROW);
1358 &#32;&#32;&#32;&#32;wc.lpszClassName&#32;=&#32;<link linkend="_win32__platform_8h_1afb084d3ede51d15e5e2ed59b06b61290">_GLFW_WNDCLASSNAME</link>;
1359 
1360 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Load&#32;user-provided&#32;icon&#32;if&#32;available</emphasis>
1361 &#32;&#32;&#32;&#32;wc.hIcon&#32;=&#32;LoadImageW(GetModuleHandleW(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>),
1362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;GLFW_ICON&quot;</emphasis>,&#32;IMAGE_ICON,
1363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,&#32;LR_DEFAULTSIZE&#32;|&#32;LR_SHARED);
1364 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!wc.hIcon)
1365 &#32;&#32;&#32;&#32;{
1366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;user-provided&#32;icon&#32;found,&#32;load&#32;default&#32;icon</emphasis>
1367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wc.hIcon&#32;=&#32;LoadImageW(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,
1368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IDI_APPLICATION,&#32;IMAGE_ICON,
1369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,&#32;LR_DEFAULTSIZE&#32;|&#32;LR_SHARED);
1370 &#32;&#32;&#32;&#32;}
1371 
1372 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!RegisterClassExW(&amp;wc))
1373 &#32;&#32;&#32;&#32;{
1374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
1375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;register&#32;window&#32;class&quot;</emphasis>);
1376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1377 &#32;&#32;&#32;&#32;}
1378 
1379 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
1380 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a072d8e8fc92daf82e56bf4d615d2cda5"/>    <section>
    <title>_glfwRequestWindowAttentionWin32()</title>
<indexterm><primary>_glfwRequestWindowAttentionWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwRequestWindowAttentionWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRequestWindowAttentionWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1684 of file win32_window.c.</para>
<programlisting>1685 {
1686 &#32;&#32;&#32;&#32;FlashWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;<link linkend="_include_2vally_2config_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
1687 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1af4b02765bc562c8265503bb97c0cd8e9"/>    <section>
    <title>_glfwRestoreVideoModeWin32()</title>
<indexterm><primary>_glfwRestoreVideoModeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwRestoreVideoModeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRestoreVideoModeWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor)</computeroutput></para><para>
Definition at line 306 of file win32_monitor.c.</para>
<programlisting>307 {
308 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;win32.modeChanged)
309 &#32;&#32;&#32;&#32;{
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChangeDisplaySettingsExW(monitor-&gt;win32.adapterName,
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;CDS_FULLSCREEN,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor-&gt;win32.modeChanged&#32;=&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
313 &#32;&#32;&#32;&#32;}
314 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a7c516bd818882391fdaeabe7a13eba52"/>    <section>
    <title>_glfwRestoreWindowWin32()</title>
<indexterm><primary>_glfwRestoreWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwRestoreWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRestoreWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1664 of file win32_window.c.</para>
<programlisting>1665 {
1666 &#32;&#32;&#32;&#32;ShowWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;SW_RESTORE);
1667 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1abf1a0ba92102516bdbc00c164edf5017"/>    <section>
    <title>_glfwSetClipboardStringWin32()</title>
<indexterm><primary>_glfwSetClipboardStringWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetClipboardStringWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetClipboardStringWin32 (const char * string)</computeroutput></para><para>
Definition at line 2192 of file win32_window.c.</para>
<programlisting>2193 {
2194 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;characterCount;
2195 &#32;&#32;&#32;&#32;HANDLE&#32;<link linkend="_glext_8h_1ab49790263c78300fbf05719e38246198">object</link>;
2196 &#32;&#32;&#32;&#32;WCHAR*&#32;<link linkend="_glad_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>;
2197 
2198 &#32;&#32;&#32;&#32;characterCount&#32;=&#32;MultiByteToWideChar(CP_UTF8,&#32;0,&#32;<emphasis role="keywordtype">string</emphasis>,&#32;-1,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
2199 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!characterCount)
2200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2201 
2202 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;=&#32;GlobalAlloc(GMEM_MOVEABLE,&#32;characterCount&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR));
2203 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">object</emphasis>)
2204 &#32;&#32;&#32;&#32;{
2205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;allocate&#32;global&#32;handle&#32;for&#32;clipboard&quot;</emphasis>);
2207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2208 &#32;&#32;&#32;&#32;}
2209 
2210 &#32;&#32;&#32;&#32;<link linkend="_structbuffer">buffer</link>&#32;=&#32;GlobalLock(<emphasis role="keywordtype">object</emphasis>);
2211 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_structbuffer">buffer</link>)
2212 &#32;&#32;&#32;&#32;{
2213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;lock&#32;global&#32;handle&quot;</emphasis>);
2215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GlobalFree(<emphasis role="keywordtype">object</emphasis>);
2216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2217 &#32;&#32;&#32;&#32;}
2218 
2219 &#32;&#32;&#32;&#32;MultiByteToWideChar(CP_UTF8,&#32;0,&#32;<emphasis role="keywordtype">string</emphasis>,&#32;-1,&#32;<link linkend="_structbuffer">buffer</link>,&#32;characterCount);
2220 &#32;&#32;&#32;&#32;GlobalUnlock(<emphasis role="keywordtype">object</emphasis>);
2221 
2222 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!OpenClipboard(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle))
2223 &#32;&#32;&#32;&#32;{
2224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;open&#32;clipboard&quot;</emphasis>);
2226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GlobalFree(<emphasis role="keywordtype">object</emphasis>);
2227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2228 &#32;&#32;&#32;&#32;}
2229 
2230 &#32;&#32;&#32;&#32;EmptyClipboard();
2231 &#32;&#32;&#32;&#32;SetClipboardData(CF_UNICODETEXT,&#32;<emphasis role="keywordtype">object</emphasis>);
2232 &#32;&#32;&#32;&#32;CloseClipboard();
2233 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a0e6560aa1f1fc5f556543bd1dbc954f3"/>    <section>
    <title>_glfwSetCursorModeWin32()</title>
<indexterm><primary>_glfwSetCursorModeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetCursorModeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorModeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int mode)</computeroutput></para><para>
Definition at line 2085 of file win32_window.c.</para>
<programlisting>2086 {
2087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="_glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88">GLFW_CURSOR_DISABLED</link>)
2088 &#32;&#32;&#32;&#32;{
2089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__window_8c_1a9b069dba7d331d2cae0ecb3e975b027e">_glfwWindowFocusedWin32</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disableCursor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2091 &#32;&#32;&#32;&#32;}
2092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.disabledCursorWindow&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enableCursor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursorInContentArea(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2096 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a7adc955bc72784fdf854cfd6e32ba287"/>    <section>
    <title>_glfwSetCursorPosWin32()</title>
<indexterm><primary>_glfwSetCursorPosWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetCursorPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double xpos, double ypos)</computeroutput></para><para>
Definition at line 2073 of file win32_window.c.</para>
<programlisting>2074 {
2075 &#32;&#32;&#32;&#32;POINT&#32;pos&#32;=&#32;{&#32;(int)&#32;xpos,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;ypos&#32;};
2076 
2077 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Store&#32;the&#32;new&#32;position&#32;so&#32;it&#32;can&#32;be&#32;recognized&#32;later</emphasis>
2078 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.lastCursorPosX&#32;=&#32;pos.x;
2079 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.lastCursorPosY&#32;=&#32;pos.y;
2080 
2081 &#32;&#32;&#32;&#32;ClientToScreen(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;&amp;pos);
2082 &#32;&#32;&#32;&#32;SetCursorPos(pos.x,&#32;pos.y);
2083 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ab5d21e2433ee1d512ae83b39549e49fc"/>    <section>
    <title>_glfwSetCursorWin32()</title>
<indexterm><primary>_glfwSetCursorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetCursorWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 2186 of file win32_window.c.</para>
<programlisting>2187 {
2188 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursorInContentArea(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2190 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a605f08f68a28c0bde60a12a0a399938e"/>    <section>
    <title>_glfwSetGammaRampWin32()</title>
<indexterm><primary>_glfwSetGammaRampWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetGammaRampWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetGammaRampWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, const <link linkend="_struct_g_l_f_wgammaramp">GLFWgammaramp</link> * ramp)</computeroutput></para><para>
Definition at line 508 of file win32_monitor.c.</para>
<programlisting>509 {
510 &#32;&#32;&#32;&#32;HDC&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>;
511 &#32;&#32;&#32;&#32;WORD&#32;<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[3][256];
512 
513 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1ad620e1cffbff9a32c51bca46301b59a5">size</link>&#32;!=&#32;256)
514 &#32;&#32;&#32;&#32;{
515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Gamma&#32;ramp&#32;size&#32;must&#32;be&#32;256&quot;</emphasis>);
517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
518 &#32;&#32;&#32;&#32;}
519 
520 &#32;&#32;&#32;&#32;memcpy(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[0],&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1a2cce5d968734b685623eef913e635138">red</link>,&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[0]));
521 &#32;&#32;&#32;&#32;memcpy(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[1],&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1affccc6f5df47820b6562d709da3a5a3a">green</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[1]));
522 &#32;&#32;&#32;&#32;memcpy(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[2],&#32;ramp-&gt;<link linkend="_struct_g_l_f_wgammaramp_1acf0c836d0efe29c392fe8d1a1042744b">blue</link>,&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>[2]));
523 
524 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>&#32;=&#32;CreateDCW(<link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;DISPLAY&quot;</emphasis>,&#32;monitor-&gt;win32.adapterName,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
525 &#32;&#32;&#32;&#32;SetDeviceGammaRamp(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>,&#32;<link linkend="_glad_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>);
526 &#32;&#32;&#32;&#32;DeleteDC(<link linkend="_truetype__test__win32_8c_1a107e8c958b2db614ef53259d777a5752">dc</link>);
527 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ad52b5863f16d0498407bbb612ea6f378"/>    <section>
    <title>_glfwSetRawMouseMotionWin32()</title>
<indexterm><primary>_glfwSetRawMouseMotionWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetRawMouseMotionWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetRawMouseMotionWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1941 of file win32_window.c.</para>
<programlisting>1942 {
1943 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.disabledCursorWindow&#32;!=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1945 
1946 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
1947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enableRawMouseMotion(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1948 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disableRawMouseMotion(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1950 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a52d8e36bf649dcb15198832d92206ce2"/>    <section>
    <title>_glfwSetVideoModeWin32()</title>
<indexterm><primary>_glfwSetVideoModeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetVideoModeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetVideoModeWin32 (<link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, const <link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link> * desired)</computeroutput></para><para>
Definition at line 248 of file win32_monitor.c.</para>
<programlisting>249 {
250 &#32;&#32;&#32;&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>&#32;current;
251 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;best;
252 &#32;&#32;&#32;&#32;DEVMODEW&#32;dm;
253 &#32;&#32;&#32;&#32;LONG&#32;<link linkend="_glext_8h_1a321ff419cd5252e54cf95e64dc6687ee">result</link>;
254 
255 &#32;&#32;&#32;&#32;best&#32;=&#32;<link linkend="_internal_8h_1acf6b57bbbf447209081a27abdc00465c">_glfwChooseVideoMode</link>(monitor,&#32;desired);
256 &#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a7b43d8548648f7a49903525cda10e09c">_glfwGetVideoModeWin32</link>(monitor,&#32;&amp;current);
257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_internal_8h_1aaca82db2d0453cb2895b0aa5e495387f">_glfwCompareVideoModes</link>(&amp;current,&#32;best)&#32;==&#32;0)
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
259 
260 &#32;&#32;&#32;&#32;ZeroMemory(&amp;dm,&#32;<emphasis role="keyword">sizeof</emphasis>(dm));
261 &#32;&#32;&#32;&#32;dm.dmSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(dm);
262 &#32;&#32;&#32;&#32;dm.dmFields&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;DM_PELSWIDTH&#32;|&#32;DM_PELSHEIGHT&#32;|&#32;DM_BITSPERPEL&#32;|
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DM_DISPLAYFREQUENCY;
264 &#32;&#32;&#32;&#32;dm.dmPelsWidth&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;best-&gt;<link linkend="_struct_g_l_f_wvidmode_1a698dcb200562051a7249cb6ae154c71d">width</link>;
265 &#32;&#32;&#32;&#32;dm.dmPelsHeight&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;best-&gt;<link linkend="_struct_g_l_f_wvidmode_1ac65942a5f6981695517437a9d571d03c">height</link>;
266 &#32;&#32;&#32;&#32;dm.dmBitsPerPel&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;best-&gt;<link linkend="_struct_g_l_f_wvidmode_1a6066c4ecd251098700062d3b735dba1b">redBits</link>&#32;+&#32;best-&gt;<link linkend="_struct_g_l_f_wvidmode_1a292fdd281f3485fb3ff102a5bda43faa">greenBits</link>&#32;+&#32;best-&gt;<link linkend="_struct_g_l_f_wvidmode_1af310977f58d2e3b188175b6e3d314047">blueBits</link>;
267 &#32;&#32;&#32;&#32;dm.dmDisplayFrequency&#32;=&#32;best-&gt;<link linkend="_struct_g_l_f_wvidmode_1a791bdd6c7697b09f7e9c97054bf05649">refreshRate</link>;
268 
269 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dm.dmBitsPerPel&#32;&lt;&#32;15&#32;||&#32;dm.dmBitsPerPel&#32;&gt;=&#32;24)
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dm.dmBitsPerPel&#32;=&#32;32;
271 
272 &#32;&#32;&#32;&#32;<link linkend="_structresult">result</link>&#32;=&#32;ChangeDisplaySettingsExW(monitor-&gt;win32.adapterName,
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;dm,
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CDS_FULLSCREEN,
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
277 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_SUCCESSFUL)
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor-&gt;win32.modeChanged&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
280 &#32;&#32;&#32;&#32;{
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;Unknown&#32;error&quot;</emphasis>;
282 
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_BADDUALVIEW)
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;The&#32;system&#32;uses&#32;DualView&quot;</emphasis>;
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_BADFLAGS)
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;Invalid&#32;flags&quot;</emphasis>;
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_BADMODE)
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;Graphics&#32;mode&#32;not&#32;supported&quot;</emphasis>;
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_BADPARAM)
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;Invalid&#32;parameter&quot;</emphasis>;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_FAILED)
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;Graphics&#32;mode&#32;failed&quot;</emphasis>;
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_NOTUPDATED)
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;Failed&#32;to&#32;write&#32;to&#32;registry&quot;</emphasis>;
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structresult">result</link>&#32;==&#32;DISP_CHANGE_RESTART)
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description&#32;=&#32;<emphasis role="stringliteral">&quot;Computer&#32;restart&#32;required&quot;</emphasis>;
297 
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;set&#32;video&#32;mode:&#32;%s&quot;</emphasis>,
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;description);
301 &#32;&#32;&#32;&#32;}
302 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ab5e4af472645ebb89e26d1e9c6366aa4"/>    <section>
    <title>_glfwSetWindowAspectRatioWin32()</title>
<indexterm><primary>_glfwSetWindowAspectRatioWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowAspectRatioWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowAspectRatioWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int numer, int denom)</computeroutput></para><para>
Definition at line 1600 of file win32_window.c.</para>
<programlisting>1601 {
1602 &#32;&#32;&#32;&#32;RECT&#32;area;
1603 
1604 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(numer&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;denom&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)
1605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1606 
1607 &#32;&#32;&#32;&#32;GetWindowRect(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;&amp;area);
1608 &#32;&#32;&#32;&#32;applyAspectRatio(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;WMSZ_BOTTOMRIGHT,&#32;&amp;area);
1609 &#32;&#32;&#32;&#32;MoveWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,
1610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area.left,&#32;area.top,
1611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area.right&#32;-&#32;area.left,
1612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area.bottom&#32;-&#32;area.top,&#32;<link linkend="_include_2vally_2config_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
1613 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a0d35deb7d39352e99fba8fa96013d969"/>    <section>
    <title>_glfwSetWindowDecoratedWin32()</title>
<indexterm><primary>_glfwSetWindowDecoratedWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowDecoratedWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowDecoratedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1863 of file win32_window.c.</para>
<programlisting>1864 {
1865 &#32;&#32;&#32;&#32;updateWindowStyles(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1866 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a9da5d6290cad503b221e73482b67218e"/>    <section>
    <title>_glfwSetWindowFloatingWin32()</title>
<indexterm><primary>_glfwSetWindowFloatingWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowFloatingWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowFloatingWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1868 of file win32_window.c.</para>
<programlisting>1869 {
1870 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;HWND&#32;after&#32;=&#32;<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>&#32;?&#32;HWND_TOPMOST&#32;:&#32;HWND_NOTOPMOST;
1871 &#32;&#32;&#32;&#32;SetWindowPos(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;after,&#32;0,&#32;0,&#32;0,&#32;0,
1872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SWP_NOACTIVATE&#32;|&#32;SWP_NOMOVE&#32;|&#32;SWP_NOSIZE);
1873 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a36bc130cc992e12d40e25a6a48e5a53b"/>    <section>
    <title>_glfwSetWindowIconWin32()</title>
<indexterm><primary>_glfwSetWindowIconWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowIconWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowIconWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int count, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * images)</computeroutput></para><para>
Definition at line 1468 of file win32_window.c.</para>
<programlisting>1470 {
1471 &#32;&#32;&#32;&#32;HICON&#32;bigIcon&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;smallIcon&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1472 
1473 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
1474 &#32;&#32;&#32;&#32;{
1475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wimage">GLFWimage</link>*&#32;bigImage&#32;=&#32;chooseImage(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>,&#32;images,
1476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetSystemMetrics(SM_CXICON),
1477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetSystemMetrics(SM_CYICON));
1478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wimage">GLFWimage</link>*&#32;smallImage&#32;=&#32;chooseImage(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>,&#32;images,
1479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetSystemMetrics(SM_CXSMICON),
1480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetSystemMetrics(SM_CYSMICON));
1481 
1482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bigIcon&#32;=&#32;createIcon(bigImage,&#32;0,&#32;0,&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
1483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;smallIcon&#32;=&#32;createIcon(smallImage,&#32;0,&#32;0,&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
1484 &#32;&#32;&#32;&#32;}
1485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1486 &#32;&#32;&#32;&#32;{
1487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bigIcon&#32;=&#32;(HICON)&#32;GetClassLongPtrW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GCLP_HICON);
1488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;smallIcon&#32;=&#32;(HICON)&#32;GetClassLongPtrW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GCLP_HICONSM);
1489 &#32;&#32;&#32;&#32;}
1490 
1491 &#32;&#32;&#32;&#32;SendMessage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;WM_SETICON,&#32;ICON_BIG,&#32;(LPARAM)&#32;bigIcon);
1492 &#32;&#32;&#32;&#32;SendMessage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;WM_SETICON,&#32;ICON_SMALL,&#32;(LPARAM)&#32;smallIcon);
1493 
1494 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.bigIcon)
1495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyIcon(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.bigIcon);
1496 
1497 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.smallIcon)
1498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyIcon(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.smallIcon);
1499 
1500 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
1501 &#32;&#32;&#32;&#32;{
1502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.bigIcon&#32;=&#32;bigIcon;
1503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.smallIcon&#32;=&#32;smallIcon;
1504 &#32;&#32;&#32;&#32;}
1505 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a20e0a994ae4879caedde480b1dddf948"/>    <section>
    <title>_glfwSetWindowMonitorWin32()</title>
<indexterm><primary>_glfwSetWindowMonitorWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowMonitorWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMonitorWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int xpos, int ypos, int width, int height, int refreshRate)</computeroutput></para><para>
Definition at line 1696 of file win32_window.c.</para>
<programlisting>1701 {
1702 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor&#32;==&#32;monitor)
1703 &#32;&#32;&#32;&#32;{
1704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor)
1705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1aa869aae87a7a75ba89211619ba103aa1">window</link>&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitToMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RECT&#32;rect&#32;=&#32;{&#32;xpos,&#32;ypos,&#32;xpos&#32;+&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;ypos&#32;+&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;};
1715 
1716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a2beecf9b7d4233876e8c0b9214099146">_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</link>())
1717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a13bab8e489d9ad05951150e27d3a6334">AdjustWindowRectExForDpi</link>(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1adbb79683794601577be49f6ebe606dd0">GetDpiForWindow</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle));
1721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AdjustWindowRectEx(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>));
1726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1727 
1728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowPos(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;HWND_TOP,
1729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.left,&#32;rect.top,
1730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.right&#32;-&#32;rect.left,&#32;rect.bottom&#32;-&#32;rect.top,
1731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SWP_NOCOPYBITS&#32;|&#32;SWP_NOACTIVATE&#32;|&#32;SWP_NOZORDER);
1732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1733 
1734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1735 &#32;&#32;&#32;&#32;}
1736 
1737 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releaseMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1739 
1740 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a5cfc56e9a5e1e8dd88862c9c7b8a6f7f">_glfwInputWindowMonitor</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;monitor);
1741 
1742 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1743 &#32;&#32;&#32;&#32;{
1744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MONITORINFO&#32;mi&#32;=&#32;{&#32;<emphasis role="keyword">sizeof</emphasis>(mi)&#32;};
1745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;=&#32;SWP_SHOWWINDOW&#32;|&#32;SWP_NOACTIVATE&#32;|&#32;SWP_NOCOPYBITS;
1746 
1747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;decorated)
1748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DWORD&#32;style&#32;=&#32;GetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_STYLE);
1750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;style&#32;&amp;=&#32;~WS_OVERLAPPEDWINDOW;
1751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;style&#32;|=&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_STYLE,&#32;style);
1753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;|=&#32;SWP_FRAMECHANGED;
1754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1755 
1756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1757 
1758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetMonitorInfo(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor-&gt;win32.handle,&#32;&amp;mi);
1759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowPos(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;HWND_TOPMOST,
1760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mi.rcMonitor.left,
1761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mi.rcMonitor.top,
1762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mi.rcMonitor.right&#32;-&#32;mi.rcMonitor.left,
1763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mi.rcMonitor.bottom&#32;-&#32;mi.rcMonitor.top,
1764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>);
1765 &#32;&#32;&#32;&#32;}
1766 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1767 &#32;&#32;&#32;&#32;{
1768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HWND&#32;after;
1769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RECT&#32;rect&#32;=&#32;{&#32;xpos,&#32;ypos,&#32;xpos&#32;+&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;ypos&#32;+&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;};
1770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DWORD&#32;style&#32;=&#32;GetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_STYLE);
1771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;=&#32;SWP_NOACTIVATE&#32;|&#32;SWP_NOCOPYBITS;
1772 
1773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;decorated)
1774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;style&#32;&amp;=&#32;~WS_POPUP;
1776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;style&#32;|=&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_STYLE,&#32;style);
1778 
1779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;|=&#32;SWP_FRAMECHANGED;
1780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1781 
1782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;floating)
1783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;after&#32;=&#32;HWND_TOPMOST;
1784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;after&#32;=&#32;HWND_NOTOPMOST;
1786 
1787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a2beecf9b7d4233876e8c0b9214099146">_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</link>())
1788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a13bab8e489d9ad05951150e27d3a6334">AdjustWindowRectExForDpi</link>(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1adbb79683794601577be49f6ebe606dd0">GetDpiForWindow</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle));
1792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AdjustWindowRectEx(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>));
1797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1798 
1799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowPos(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;after,
1800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.left,&#32;rect.top,
1801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.right&#32;-&#32;rect.left,&#32;rect.bottom&#32;-&#32;rect.top,
1802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>);
1803 &#32;&#32;&#32;&#32;}
1804 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a08fda6580fcceccb5465cdb1fe770d7f"/>    <section>
    <title>_glfwSetWindowMousePassthroughWin32()</title>
<indexterm><primary>_glfwSetWindowMousePassthroughWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowMousePassthroughWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMousePassthroughWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1875 of file win32_window.c.</para>
<programlisting>1876 {
1877 &#32;&#32;&#32;&#32;COLORREF&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;0;
1878 &#32;&#32;&#32;&#32;BYTE&#32;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>&#32;=&#32;0;
1879 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;=&#32;0;
1880 &#32;&#32;&#32;&#32;DWORD&#32;exStyle&#32;=&#32;GetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_EXSTYLE);
1881 
1882 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(exStyle&#32;&amp;&#32;WS_EX_LAYERED)
1883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetLayeredWindowAttributes(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;&amp;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>,&#32;&amp;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>,&#32;&amp;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>);
1884 
1885 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
1886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exStyle&#32;|=&#32;(WS_EX_TRANSPARENT&#32;|&#32;WS_EX_LAYERED);
1887 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1888 &#32;&#32;&#32;&#32;{
1889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exStyle&#32;&amp;=&#32;~WS_EX_TRANSPARENT;
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Window&#32;opacity&#32;also&#32;needs&#32;the&#32;layered&#32;window&#32;style&#32;so&#32;do&#32;not</emphasis>
1891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;remove&#32;it&#32;if&#32;the&#32;window&#32;is&#32;alpha&#32;blended</emphasis>
1892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(exStyle&#32;&amp;&#32;WS_EX_LAYERED)
1893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>&#32;&amp;&#32;LWA_ALPHA))
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exStyle&#32;&amp;=&#32;~WS_EX_LAYERED;
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1897 &#32;&#32;&#32;&#32;}
1898 
1899 &#32;&#32;&#32;&#32;SetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_EXSTYLE,&#32;exStyle);
1900 
1901 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
1902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetLayeredWindowAttributes(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>,&#32;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>,&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>);
1903 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a9428adda957ce508e3041119d670de0f"/>    <section>
    <title>_glfwSetWindowOpacityWin32()</title>
<indexterm><primary>_glfwSetWindowOpacityWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowOpacityWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowOpacityWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float opacity)</computeroutput></para><para>
Definition at line 1920 of file win32_window.c.</para>
<programlisting>1921 {
1922 &#32;&#32;&#32;&#32;LONG&#32;exStyle&#32;=&#32;GetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_EXSTYLE);
1923 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(opacity&#32;&lt;&#32;1.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;||&#32;(exStyle&#32;&amp;&#32;WS_EX_TRANSPARENT))
1924 &#32;&#32;&#32;&#32;{
1925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;BYTE&#32;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>&#32;=&#32;(BYTE)&#32;(255&#32;*&#32;opacity);
1926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exStyle&#32;|=&#32;WS_EX_LAYERED;
1927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_EXSTYLE,&#32;exStyle);
1928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetLayeredWindowAttributes(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;0,&#32;<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>,&#32;LWA_ALPHA);
1929 &#32;&#32;&#32;&#32;}
1930 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(exStyle&#32;&amp;&#32;WS_EX_TRANSPARENT)
1931 &#32;&#32;&#32;&#32;{
1932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetLayeredWindowAttributes(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;0,&#32;0,&#32;0);
1933 &#32;&#32;&#32;&#32;}
1934 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1935 &#32;&#32;&#32;&#32;{
1936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exStyle&#32;&amp;=&#32;~WS_EX_LAYERED;
1937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowLongW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;GWL_EXSTYLE,&#32;exStyle);
1938 &#32;&#32;&#32;&#32;}
1939 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a497c96018316ca28c83a6ef2f1461a19"/>    <section>
    <title>_glfwSetWindowPosWin32()</title>
<indexterm><primary>_glfwSetWindowPosWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowPosWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowPosWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int xpos, int ypos)</computeroutput></para><para>
Definition at line 1518 of file win32_window.c.</para>
<programlisting>1519 {
1520 &#32;&#32;&#32;&#32;RECT&#32;rect&#32;=&#32;{&#32;xpos,&#32;ypos,&#32;xpos,&#32;ypos&#32;};
1521 
1522 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a2beecf9b7d4233876e8c0b9214099146">_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</link>())
1523 &#32;&#32;&#32;&#32;{
1524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a13bab8e489d9ad05951150e27d3a6334">AdjustWindowRectExForDpi</link>(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1adbb79683794601577be49f6ebe606dd0">GetDpiForWindow</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle));
1527 &#32;&#32;&#32;&#32;}
1528 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1529 &#32;&#32;&#32;&#32;{
1530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AdjustWindowRectEx(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>));
1532 &#32;&#32;&#32;&#32;}
1533 
1534 &#32;&#32;&#32;&#32;SetWindowPos(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;rect.left,&#32;rect.top,&#32;0,&#32;0,
1535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SWP_NOACTIVATE&#32;|&#32;SWP_NOZORDER&#32;|&#32;SWP_NOSIZE);
1536 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1aa9ba9944e5152d29f1aa551f14d75b2d"/>    <section>
    <title>_glfwSetWindowResizableWin32()</title>
<indexterm><primary>_glfwSetWindowResizableWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowResizableWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowResizableWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 1858 of file win32_window.c.</para>
<programlisting>1859 {
1860 &#32;&#32;&#32;&#32;updateWindowStyles(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1861 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ada7a6afa85a12d7a6ff3efe78e6abe0c"/>    <section>
    <title>_glfwSetWindowSizeLimitsWin32()</title>
<indexterm><primary>_glfwSetWindowSizeLimitsWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowSizeLimitsWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeLimitsWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int minwidth, int minheight, int maxwidth, int maxheight)</computeroutput></para><para>
Definition at line 1581 of file win32_window.c.</para>
<programlisting>1584 {
1585 &#32;&#32;&#32;&#32;RECT&#32;area;
1586 
1587 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((minwidth&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;minheight&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>)&#32;&amp;&amp;
1588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(maxwidth&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>&#32;||&#32;maxheight&#32;==&#32;<link linkend="_glfw3_8h_1a7a2edf2c18446833d27d07f1b7f3d571">GLFW_DONT_CARE</link>))
1589 &#32;&#32;&#32;&#32;{
1590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1591 &#32;&#32;&#32;&#32;}
1592 
1593 &#32;&#32;&#32;&#32;GetWindowRect(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;&amp;area);
1594 &#32;&#32;&#32;&#32;MoveWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,
1595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area.left,&#32;area.top,
1596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area.right&#32;-&#32;area.left,
1597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area.bottom&#32;-&#32;area.top,&#32;<link linkend="_include_2vally_2config_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
1598 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a658f42d345f10d3ab52613b030d801c6"/>    <section>
    <title>_glfwSetWindowSizeWin32()</title>
<indexterm><primary>_glfwSetWindowSizeWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowSizeWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int width, int height)</computeroutput></para><para>
Definition at line 1549 of file win32_window.c.</para>
<programlisting>1550 {
1551 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
1552 &#32;&#32;&#32;&#32;{
1553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor-&gt;window&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
1554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fitToMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1558 &#32;&#32;&#32;&#32;}
1559 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1560 &#32;&#32;&#32;&#32;{
1561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RECT&#32;rect&#32;=&#32;{&#32;0,&#32;0,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;};
1562 
1563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a2beecf9b7d4233876e8c0b9214099146">_glfwIsWindows10AnniversaryUpdateOrGreaterWin32</link>())
1564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a13bab8e489d9ad05951150e27d3a6334">AdjustWindowRectExForDpi</link>(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1adbb79683794601577be49f6ebe606dd0">GetDpiForWindow</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle));
1568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
1570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AdjustWindowRectEx(&amp;rect,&#32;getWindowStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>),
1572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;getWindowExStyle(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>));
1573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1574 
1575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetWindowPos(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;HWND_TOP,
1576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,&#32;rect.right&#32;-&#32;rect.left,&#32;rect.bottom&#32;-&#32;rect.top,
1577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SWP_NOACTIVATE&#32;|&#32;SWP_NOOWNERZORDER&#32;|&#32;SWP_NOMOVE&#32;|&#32;SWP_NOZORDER);
1578 &#32;&#32;&#32;&#32;}
1579 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a86d6e8b4e6609cfeba7691e466b21184"/>    <section>
    <title>_glfwSetWindowTitleWin32()</title>
<indexterm><primary>_glfwSetWindowTitleWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwSetWindowTitleWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowTitleWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const char * title)</computeroutput></para><para>
Definition at line 1458 of file win32_window.c.</para>
<programlisting>1459 {
1460 &#32;&#32;&#32;&#32;WCHAR*&#32;wideTitle&#32;=&#32;<link linkend="_win32__init_8c_1afcf517cf44f0f8a87489860bc9373a54">_glfwCreateWideStringFromUTF8Win32</link>(title);
1461 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!wideTitle)
1462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1463 
1464 &#32;&#32;&#32;&#32;SetWindowTextW(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;wideTitle);
1465 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(wideTitle);
1466 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a02bfef52e9e9352b7cf691434d01ec70"/>    <section>
    <title>_glfwShowWindowWin32()</title>
<indexterm><primary>_glfwShowWindowWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwShowWindowWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwShowWindowWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1674 of file win32_window.c.</para>
<programlisting>1675 {
1676 &#32;&#32;&#32;&#32;ShowWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle,&#32;SW_SHOWNA);
1677 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a219b355c48800354e45f6091d7b2e564"/>    <section>
    <title>_glfwTerminateJoysticksWin32()</title>
<indexterm><primary>_glfwTerminateJoysticksWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwTerminateJoysticksWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwTerminateJoysticksWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 593 of file win32_joystick.c.</para>
<programlisting>594 {
595 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;jid;
596 
597 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(jid&#32;=&#32;<link linkend="_group__joysticks_1ga34a0443d059e9f22272cd4669073f73d">GLFW_JOYSTICK_1</link>;&#32;&#32;jid&#32;&lt;=&#32;<link linkend="_group__joysticks_1ga9ca13ebf24c331dd98df17d84a4b72c9">GLFW_JOYSTICK_LAST</link>;&#32;&#32;jid++)
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closeJoystick(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7f6b01642d8bc4965fd7b084a01bc401">joysticks</link>&#32;+&#32;jid);
599 
600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.dinput8.api)
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_dinput_8h_1a8cd6a8dd530a10d7c136e11243c91f69">IDirectInput8_Release</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.dinput8.api);
602 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a441ed61fa295e53fca605f2e00c51e83"/>    <section>
    <title>_glfwTerminateWGL()</title>
<indexterm><primary>_glfwTerminateWGL</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwTerminateWGL</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwTerminateWGL (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 520 of file wgl_context.c.</para>
<programlisting>521 {
522 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance)
523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ad4b9e48b150850f6ee00874f85036715">_glfwPlatformFreeModule</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.wgl.instance);
524 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1ae5fd5e0d48189d6a1ea0e11418e9a236"/>    <section>
    <title>_glfwTerminateWin32()</title>
<indexterm><primary>_glfwTerminateWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwTerminateWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwTerminateWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 646 of file win32_init.c.</para>
<programlisting>647 {
648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.deviceNotificationHandle)
649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnregisterDeviceNotification(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.deviceNotificationHandle);
650 
651 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle)
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyWindow(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle);
653 
654 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a85fb6be0a27d7f17a5d90eaec5320627">_glfwUnregisterWindowClassWin32</link>();
655 
656 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.clipboardString);
657 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.rawInput);
658 
659 &#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a441ed61fa295e53fca605f2e00c51e83">_glfwTerminateWGL</link>();
660 &#32;&#32;&#32;&#32;<link linkend="_egl__context_8c_1ab095be9ec2b3a40942da090ee7ab2960">_glfwTerminateEGL</link>();
661 
662 &#32;&#32;&#32;&#32;freeLibraries();
663 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a85fb6be0a27d7f17a5d90eaec5320627"/>    <section>
    <title>_glfwUnregisterWindowClassWin32()</title>
<indexterm><primary>_glfwUnregisterWindowClassWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwUnregisterWindowClassWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwUnregisterWindowClassWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1384 of file win32_window.c.</para>
<programlisting>1385 {
1386 &#32;&#32;&#32;&#32;UnregisterClassW(<link linkend="_win32__platform_8h_1afb084d3ede51d15e5e2ed59b06b61290">_GLFW_WNDCLASSNAME</link>,&#32;GetModuleHandleW(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>));
1387 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a148681c996ee9d03ca7be51de6360ee4"/>    <section>
    <title>_glfwUpdateGamepadGUIDWin32()</title>
<indexterm><primary>_glfwUpdateGamepadGUIDWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwUpdateGamepadGUIDWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwUpdateGamepadGUIDWin32 (char * guid)</computeroutput></para><para>
Definition at line 748 of file win32_joystick.c.</para>
<programlisting>749 {
750 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(guid&#32;+&#32;20,&#32;<emphasis role="stringliteral">&quot;504944564944&quot;</emphasis>)&#32;==&#32;0)
751 &#32;&#32;&#32;&#32;{
752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;original[33];
753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strncpy(original,&#32;guid,&#32;<emphasis role="keyword">sizeof</emphasis>(original)&#32;-&#32;1);
754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_rrsprintf_8h_1a9b1bcf2b847c7e2a9e4d06b7bb6fa018">sprintf</link>(guid,&#32;<emphasis role="stringliteral">&quot;03000000%.4s0000%.4s000000000000&quot;</emphasis>,
755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;original,&#32;original&#32;+&#32;4);
756 &#32;&#32;&#32;&#32;}
757 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1afc4eeee5a7d5b62252466d3f6740c48b"/>    <section>
    <title>_glfwUpdateKeyNamesWin32()</title>
<indexterm><primary>_glfwUpdateKeyNamesWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwUpdateKeyNamesWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwUpdateKeyNamesWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 457 of file win32_init.c.</para>
<programlisting>458 {
459 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>;
460 &#32;&#32;&#32;&#32;BYTE&#32;state[256]&#32;=&#32;{0};
461 
462 &#32;&#32;&#32;&#32;memset(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames));
463 
464 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;<link linkend="_group__keys_1gaddb2c23772b97fd7e26e8ee66f1ad014">GLFW_KEY_SPACE</link>;&#32;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;&lt;=&#32;<link linkend="_group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789">GLFW_KEY_LAST</link>;&#32;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>++)
465 &#32;&#32;&#32;&#32;{
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT&#32;vk;
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;scancode,&#32;<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>;
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WCHAR&#32;chars[16];
469 
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scancode&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.scancodes[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;==&#32;-1)
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
473 
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;&gt;=&#32;<link linkend="_group__keys_1ga10515dafc55b71e7683f5b4fedd1c70d">GLFW_KEY_KP_0</link>&#32;&amp;&amp;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;&lt;=&#32;<link linkend="_group__keys_1gad09c7c98acc79e89aa6a0a91275becac">GLFW_KEY_KP_ADD</link>)
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UINT&#32;vks[]&#32;=&#32;{
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_NUMPAD0,&#32;&#32;VK_NUMPAD1,&#32;&#32;VK_NUMPAD2,&#32;VK_NUMPAD3,
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_NUMPAD4,&#32;&#32;VK_NUMPAD5,&#32;&#32;VK_NUMPAD6,&#32;VK_NUMPAD7,
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_NUMPAD8,&#32;&#32;VK_NUMPAD9,&#32;&#32;VK_DECIMAL,&#32;VK_DIVIDE,
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_MULTIPLY,&#32;VK_SUBTRACT,&#32;VK_ADD
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
482 
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vk&#32;=&#32;vks[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;-&#32;<link linkend="_group__keys_1ga10515dafc55b71e7683f5b4fedd1c70d">GLFW_KEY_KP_0</link>];
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vk&#32;=&#32;MapVirtualKey(scancode,&#32;MAPVK_VSC_TO_VK);
487 
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;=&#32;ToUnicode(vk,&#32;scancode,&#32;state,
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chars,&#32;<emphasis role="keyword">sizeof</emphasis>(chars)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR),
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
491 
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;==&#32;-1)
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;=&#32;ToUnicode(vk,&#32;scancode,&#32;state,
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chars,&#32;<emphasis role="keyword">sizeof</emphasis>(chars)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR),
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
498 
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;&lt;&#32;1)
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
501 
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WideCharToMultiByte(CP_UTF8,&#32;0,&#32;chars,&#32;1,
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>],
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>]),
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
506 &#32;&#32;&#32;&#32;}
507 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a62c585e2432977fa2b9fa4757a0d4cf9"/>    <section>
    <title>_glfwWaitEventsTimeoutWin32()</title>
<indexterm><primary>_glfwWaitEventsTimeoutWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwWaitEventsTimeoutWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsTimeoutWin32 (double timeout)</computeroutput></para><para>
Definition at line 2046 of file win32_window.c.</para>
<programlisting>2047 {
2048 &#32;&#32;&#32;&#32;MsgWaitForMultipleObjects(0,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;(DWORD)&#32;(<link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>&#32;*&#32;1e3),&#32;QS_ALLEVENTS);
2049 
2050 &#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1a8de69356bacf2073a7d4903d2d6ec741">_glfwPollEventsWin32</link>();
2051 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a482c57b8e130d21ad68ddf965f74e1a0"/>    <section>
    <title>_glfwWaitEventsWin32()</title>
<indexterm><primary>_glfwWaitEventsWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwWaitEventsWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2039 of file win32_window.c.</para>
<programlisting>2040 {
2041 &#32;&#32;&#32;&#32;WaitMessage();
2042 
2043 &#32;&#32;&#32;&#32;<link linkend="_win32__window_8c_1a8de69356bacf2073a7d4903d2d6ec741">_glfwPollEventsWin32</link>();
2044 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a9b069dba7d331d2cae0ecb3e975b027e"/>    <section>
    <title>_glfwWindowFocusedWin32()</title>
<indexterm><primary>_glfwWindowFocusedWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwWindowFocusedWin32</secondary></indexterm>
<para><computeroutput>int _glfwWindowFocusedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1806 of file win32_window.c.</para>
<programlisting>1807 {
1808 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle&#32;==&#32;GetActiveWindow();
1809 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a6e0135d2fd5538719c900c41424caa8b"/>    <section>
    <title>_glfwWindowHoveredWin32()</title>
<indexterm><primary>_glfwWindowHoveredWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwWindowHoveredWin32</secondary></indexterm>
<para><computeroutput>int _glfwWindowHoveredWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1826 of file win32_window.c.</para>
<programlisting>1827 {
1828 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cursorInContentArea(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
1829 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a1ef31772bba9bbbb70966126a08778d0"/>    <section>
    <title>_glfwWindowIconifiedWin32()</title>
<indexterm><primary>_glfwWindowIconifiedWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwWindowIconifiedWin32</secondary></indexterm>
<para><computeroutput>int _glfwWindowIconifiedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1811 of file win32_window.c.</para>
<programlisting>1812 {
1813 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;IsIconic(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
1814 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a4640f26608b837f9793ef0ee923036eb"/>    <section>
    <title>_glfwWindowMaximizedWin32()</title>
<indexterm><primary>_glfwWindowMaximizedWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwWindowMaximizedWin32</secondary></indexterm>
<para><computeroutput>int _glfwWindowMaximizedWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1821 of file win32_window.c.</para>
<programlisting>1822 {
1823 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;IsZoomed(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
1824 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a08f4731441f2215f589dc641eb015bb4"/>    <section>
    <title>_glfwWindowVisibleWin32()</title>
<indexterm><primary>_glfwWindowVisibleWin32</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>_glfwWindowVisibleWin32</secondary></indexterm>
<para><computeroutput>int _glfwWindowVisibleWin32 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1816 of file win32_window.c.</para>
<programlisting>1817 {
1818 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;IsWindowVisible(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;win32.handle);
1819 }
</programlisting>    </section><anchor xml:id="_win32__platform_8h_1a3428606a981275d46b67922d5b97e498"/>    <section>
    <title>PFNWGLGETEXTENSIONSSTRINGARBPROC()</title>
<indexterm><primary>PFNWGLGETEXTENSIONSSTRINGARBPROC</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFNWGLGETEXTENSIONSSTRINGARBPROC</secondary></indexterm>
<para><computeroutput>const typedef char* WINAPI* PFNWGLGETEXTENSIONSSTRINGARBPROC (HDC )</computeroutput></para>    </section><anchor xml:id="_win32__platform_8h_1a7614b1a68db31fbed2cf336f2b74994b"/>    <section>
    <title>PFNWGLGETEXTENSIONSSTRINGEXTPROC()</title>
<indexterm><primary>PFNWGLGETEXTENSIONSSTRINGEXTPROC</primary><secondary>win32_platform.h</secondary></indexterm>
<indexterm><primary>win32_platform.h</primary><secondary>PFNWGLGETEXTENSIONSSTRINGEXTPROC</secondary></indexterm>
<para><computeroutput>const typedef char* WINAPI* PFNWGLGETEXTENSIONSSTRINGEXTPROC (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para></section>
</section>
</section>
