<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_triangle-opengl_8c">
<title>deps/glfw/examples/triangle-opengl.c File Reference</title>
<indexterm><primary>deps/glfw/examples/triangle-opengl.c</primary></indexterm>
<programlisting>#include &lt;glad/gl.h&gt;
#include &lt;GLFW/glfw3.h&gt;
#include &quot;linmath.h&quot;
#include &lt;stdlib.h&gt;
#include &lt;stddef.h&gt;
#include &lt;stdio.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_vertex">Vertex</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_triangle-opengl_8c_1a09f9c3bf094ecaf707c673924ffd615a">GLAD_GL_IMPLEMENTATION</link></para>

<para>[code] </para>
</listitem>
            <listitem><para>#define <link linkend="_triangle-opengl_8c_1a088324ad8995e3eb76024e3e79083d48">GLFW_INCLUDE_NONE</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_vertex">Vertex</link> <link linkend="_triangle-opengl_8c_1a2e1662af5233d0fe6a6f061445d2ff25">Vertex</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_triangle-opengl_8c_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_triangle-opengl_8c_1a09f9c3bf094ecaf707c673924ffd615a"/>    <section>
    <title>GLAD_GL_IMPLEMENTATION</title>
<indexterm><primary>GLAD_GL_IMPLEMENTATION</primary><secondary>triangle-opengl.c</secondary></indexterm>
<indexterm><primary>triangle-opengl.c</primary><secondary>GLAD_GL_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define GLAD_GL_IMPLEMENTATION</computeroutput></para><para>

<para>[code] </para>
</para>
<para>
Definition at line 27 of file triangle-opengl.c.</para>
    </section><anchor xml:id="_triangle-opengl_8c_1a088324ad8995e3eb76024e3e79083d48"/>    <section>
    <title>GLFW_INCLUDE_NONE</title>
<indexterm><primary>GLFW_INCLUDE_NONE</primary><secondary>triangle-opengl.c</secondary></indexterm>
<indexterm><primary>triangle-opengl.c</primary><secondary>GLFW_INCLUDE_NONE</secondary></indexterm>
<para><computeroutput>#define GLFW_INCLUDE_NONE</computeroutput></para><para>
Definition at line 29 of file triangle-opengl.c.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_triangle-opengl_8c_1a2e1662af5233d0fe6a6f061445d2ff25"/>    <section>
    <title>Vertex</title>
<indexterm><primary>Vertex</primary><secondary>triangle-opengl.c</secondary></indexterm>
<indexterm><primary>triangle-opengl.c</primary><secondary>Vertex</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_vertex">Vertex</link> <link linkend="_struct_vertex">Vertex</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_triangle-opengl_8c_1a840291bc02cba5474a4cb46a9b9566fe"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>triangle-opengl.c</secondary></indexterm>
<indexterm><primary>triangle-opengl.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 83 of file triangle-opengl.c.</para>
<programlisting>84 {
85 &#32;&#32;&#32;&#32;<link linkend="_group__init_1ga746e2757d069eaea423349aca6ae097a">glfwSetErrorCallback</link>(<link linkend="_inputlag_8c_1a4ee391c8bab624943c822faafb2c320e">error_callback</link>);
86 
87 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_group__init_1gab41771f0215a2e0afb4cf1cf98082d40">glfwInit</link>())
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
89 
90 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>,&#32;3);
91 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>,&#32;3);
92 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1ga44f3a6b4261fbe351e0b950b0f372e12">GLFW_OPENGL_PROFILE</link>,&#32;<link linkend="_glfw3_8h_1af094bb16da76f66ebceb19ee213b3de8">GLFW_OPENGL_CORE_PROFILE</link>);
93 
94 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_group__window_1ga680a02abe0e4494b6759d5703240713e">glfwCreateWindow</link>(640,&#32;480,&#32;<emphasis role="stringliteral">&quot;OpenGL&#32;Triangle&quot;</emphasis>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
95 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
96 &#32;&#32;&#32;&#32;{
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
99 &#32;&#32;&#32;&#32;}
100 
101 &#32;&#32;&#32;&#32;<link linkend="_group__input_1gaa4cbcb81b939b8800e44cea971ddae47">glfwSetKeyCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;key_callback);
102 
103 &#32;&#32;&#32;&#32;<link linkend="_group__context_1gafd76c93e15ec8b0b90506a9936a46185">glfwMakeContextCurrent</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
104 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a7e9e0ebe65864f5f2bcd289c5736041b">gladLoadGL</link>(<link linkend="_group__context_1ga0e8af175218929615c16e74938c10f2a">glfwGetProcAddress</link>);
105 &#32;&#32;&#32;&#32;<link linkend="_group__context_1ga12a595c06947cec4967c6e1f14210a8a">glfwSwapInterval</link>(1);
106 
107 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;OpenGL&#32;error&#32;checks&#32;have&#32;been&#32;omitted&#32;for&#32;brevity</emphasis>
108 
109 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;vertex_buffer;
110 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1b33d322b89d94ad4938461db0a0424a">glGenBuffers</link>(1,&#32;&amp;vertex_buffer);
111 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a3b3a3f8200f094b781e9f61e2f19fc50">glBindBuffer</link>(<link linkend="_glad_8h_1a7180045dcb52b22af2cd0366026bc3ed">GL_ARRAY_BUFFER</link>,&#32;vertex_buffer);
112 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a9419a03f5c46e2758f884e9c56d92b6a">glBufferData</link>(<link linkend="_glad_8h_1a7180045dcb52b22af2cd0366026bc3ed">GL_ARRAY_BUFFER</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(vertices),&#32;vertices,&#32;<link linkend="_glad_8h_1ab7dffdc215fbbe75b6ccacfecfc14648">GL_STATIC_DRAW</link>);
113 
114 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;vertex_shader&#32;=&#32;<link linkend="_glad_8h_1a4d3447ff3caf454bc686968fbe5f04bf">glCreateShader</link>(<link linkend="_glad_8h_1aceb29bc16e885f956eb9e351a7dd6276">GL_VERTEX_SHADER</link>);
115 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a369ec108462c247e3028edc9070117a0">glShaderSource</link>(vertex_shader,&#32;1,&#32;&amp;vertex_shader_text,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
116 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1acf7a528ef1ef237d2a7676dcb0f22473">glCompileShader</link>(vertex_shader);
117 
118 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;fragment_shader&#32;=&#32;<link linkend="_glad_8h_1a4d3447ff3caf454bc686968fbe5f04bf">glCreateShader</link>(<link linkend="_glad_8h_1a1a0294662b50921555cae95fb20740d4">GL_FRAGMENT_SHADER</link>);
119 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a369ec108462c247e3028edc9070117a0">glShaderSource</link>(fragment_shader,&#32;1,&#32;&amp;fragment_shader_text,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
120 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1acf7a528ef1ef237d2a7676dcb0f22473">glCompileShader</link>(fragment_shader);
121 
122 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>&#32;=&#32;<link linkend="_glad_8h_1acf9d728f2b2be42fbc2fe6dada8bcd2b">glCreateProgram</link>();
123 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a0cb06d612b3358bfaadbbefd7c51f1cc">glAttachShader</link>(<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>,&#32;vertex_shader);
124 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a0cb06d612b3358bfaadbbefd7c51f1cc">glAttachShader</link>(<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>,&#32;fragment_shader);
125 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad241352c6eee6e79f09942ef0771db47">glLinkProgram</link>(<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>);
126 
127 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_glad_8h_1acebcc1c5663f14ebde1d16831e5fed94">GLint</link>&#32;mvp_location&#32;=&#32;<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>,&#32;<emphasis role="stringliteral">&quot;MVP&quot;</emphasis>);
128 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_glad_8h_1acebcc1c5663f14ebde1d16831e5fed94">GLint</link>&#32;vpos_location&#32;=&#32;<link linkend="_glad_8h_1a20f33502cbda8885498352fcdbf71fe8">glGetAttribLocation</link>(<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>,&#32;<emphasis role="stringliteral">&quot;vPos&quot;</emphasis>);
129 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_glad_8h_1acebcc1c5663f14ebde1d16831e5fed94">GLint</link>&#32;vcol_location&#32;=&#32;<link linkend="_glad_8h_1a20f33502cbda8885498352fcdbf71fe8">glGetAttribLocation</link>(<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>,&#32;<emphasis role="stringliteral">&quot;vCol&quot;</emphasis>);
130 
131 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;vertex_array;
132 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a71a2d01a12606fc26c1a28dba23dfce2">glGenVertexArrays</link>(1,&#32;&amp;vertex_array);
133 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a4c13098a615d32e7f04aa4105149564f">glBindVertexArray</link>(vertex_array);
134 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a6e8ee482001ee8fb9b3d4851116779b4">glEnableVertexAttribArray</link>(vpos_location);
135 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a8afadc1fe36886688a02097cc63a17cb">glVertexAttribPointer</link>(vpos_location,&#32;2,&#32;<link linkend="_glad_8h_1a6d19915d4237cb559505bd3e5dcfcf3c">GL_FLOAT</link>,&#32;<link linkend="_glad_8h_1abca6d43f43fae31f49dcb883b2f301f6">GL_FALSE</link>,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_vertex">Vertex</link>),&#32;(<emphasis role="keywordtype">void</emphasis>*)&#32;offsetof(<link linkend="_struct_vertex">Vertex</link>,&#32;pos));
137 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a6e8ee482001ee8fb9b3d4851116779b4">glEnableVertexAttribArray</link>(vcol_location);
138 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a8afadc1fe36886688a02097cc63a17cb">glVertexAttribPointer</link>(vcol_location,&#32;3,&#32;<link linkend="_glad_8h_1a6d19915d4237cb559505bd3e5dcfcf3c">GL_FLOAT</link>,&#32;<link linkend="_glad_8h_1abca6d43f43fae31f49dcb883b2f301f6">GL_FALSE</link>,
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_vertex">Vertex</link>),&#32;(<emphasis role="keywordtype">void</emphasis>*)&#32;offsetof(<link linkend="_struct_vertex">Vertex</link>,&#32;col));
140 
141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_group__window_1gaa6162f67dfa38b8beda2fea623649332">glfwWindowShouldClose</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
142 &#32;&#32;&#32;&#32;{
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e">glfwGetFramebufferSize</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;ratio&#32;=&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;/&#32;(float)&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab54b002beb984f066acd0dd7fff469dc">glViewport</link>(0,&#32;0,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1afc250a2b6bf11f24bb73534a2f053c0d">glClear</link>(<link linkend="_glad_8h_1a947db9ff944c4b78e652144c3dd1060c">GL_COLOR_BUFFER_BIT</link>);
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linmath_8h_1aea448460b62175f89ed5760877496434">mat4x4</link>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>,&#32;mvp;
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linmath_8h_1aad0e22fd1665595210c79fb825273381">mat4x4_identity</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linmath_8h_1aac10514a034a5e6dc90ae5911141fb78">mat4x4_rotate_Z</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;<link linkend="_group__input_1ga03d4a1039b8662c71eeb40beea8cb622">glfwGetTime</link>());
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linmath_8h_1a9d5fe21cb49e77776d3100a0d2e0ce31">mat4x4_ortho</link>(<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>,&#32;-ratio,&#32;ratio,&#32;-1.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;1.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;1.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;-1.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>);
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linmath_8h_1a62186c7d2461116c23967d35cf437e00">mat4x4_mul</link>(mvp,&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
155 
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad8e40c882d63c4671dea2ca2dfcf3046">glUseProgram</link>(<link linkend="_glad_8h_1ab55c179cd6c84b3f5ddc11d9da0f55b4">program</link>);
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1cd4c6b9e1fb6b4eb927ab0997de48ef">glUniformMatrix4fv</link>(mvp_location,&#32;1,&#32;<link linkend="_glad_8h_1abca6d43f43fae31f49dcb883b2f301f6">GL_FALSE</link>,&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_glad_8h_1a836cf6377099e88abf24c255b5b0ac52">GLfloat</link>*)&#32;&amp;mvp);
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a4c13098a615d32e7f04aa4105149564f">glBindVertexArray</link>(vertex_array);
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a89377449aceadc060b577926b5413bd2">glDrawArrays</link>(<link linkend="_glad_8h_1a6079e7a02a59adad65eb953d9482b1ed">GL_TRIANGLES</link>,&#32;0,&#32;3);
160 
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1gafb827800eedbfcbc97b1e5408df668d7">glfwSwapBuffers</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link>();
163 &#32;&#32;&#32;&#32;}
164 
165 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga806747476b7247d292be3711c323ea10">glfwDestroyWindow</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
166 
167 &#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
168 &#32;&#32;&#32;&#32;exit(EXIT_SUCCESS);
169 }
</programlisting></section>
</section>
</section>
