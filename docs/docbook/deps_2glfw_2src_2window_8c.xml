<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_deps_2glfw_2src_2window_8c">
<title>deps/glfw/src/window.c File Reference</title>
<indexterm><primary>deps/glfw/src/window.c</primary></indexterm>
<programlisting>#include &quot;internal.h&quot;
#include &lt;assert.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;float.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1afb9ff9f75dd4d2dade4600dc38e8715e">_glfwInputWindowFocus</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> focused)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1a782217003a0393ccd8bfba049cced9f6">_glfwInputWindowPos</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1a4becb396bda8c2a525a3d08d86354c6b">_glfwInputWindowSize</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1a2efc58babb5479443430b2a084786c62">_glfwInputWindowIconify</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> iconified)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1a3225b80b591337bcaa855c00da6ceb8f">_glfwInputWindowMaximize</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> maximized)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1a1f8385157e99fea8cc960c0fb2f2fc47">_glfwInputFramebufferSize</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1ab44396b5037d1a39f77bf9e70a954ad3">_glfwInputWindowContentScale</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float xscale, float yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1ad9d5a996eef8fe1afcacc325f4510d1b">_glfwInputWindowDamage</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1ae47e309820934e21c92a3e60faeefe8e">_glfwInputWindowCloseRequest</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_deps_2glfw_2src_2window_8c_1a5cfc56e9a5e1e8dd88862c9c7b8a6f7f">_glfwInputWindowMonitor</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor)</para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * <link linkend="_group__window_1ga680a02abe0e4494b6759d5703240713e">glfwCreateWindow</link> (int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, const char *title, <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *monitor, <link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *share)</para>

<para>Creates a window and its associated context. </para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga8050ddceed9dc6bd9d3aa35666195cd4">glfwDefaultWindowHints</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>

<para>Resets all window hints to their default values. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link> (int hint, int <link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>

<para>Sets the specified window hint to the desired value. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga3c2270562d7ba13d92680ba1090adafe">glfwWindowHintString</link> (int hint, const char *<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>

<para>Sets the specified window hint to the desired value. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga806747476b7247d292be3711c323ea10">glfwDestroyWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Destroys the specified window and its context. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int <link linkend="_group__window_1gaa6162f67dfa38b8beda2fea623649332">glfwWindowShouldClose</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Checks the close flag of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga1cadeda7a1e2f224e06a8415d30741aa">glfwSetWindowShouldClose</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int <link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>

<para>Sets the close flag of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga861ed3414ab8120e2f74151a666ed1dc">glfwSetWindowTitle</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, const char *title)</para>

<para>Sets the title of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga182987a1a62a41a924842b9473d560df">glfwSetWindowIcon</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *images)</para>

<para>Sets the icon for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga0076a8591ef7494d359730cf2250b45b">glfwGetWindowPos</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int *xpos, int *ypos)</para>

<para>Retrieves the position of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga0dc8d880a0d87be16d3ea8114561f6f0">glfwSetWindowPos</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int xpos, int ypos)</para>

<para>Sets the position of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e">glfwGetWindowSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>

<para>Retrieves the size of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gae54d1f4915ded15e267ddd3f41496cd2">glfwSetWindowSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>

<para>Sets the size of the content area of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga8af814fc98d786d1de2505b40b707de8">glfwSetWindowSizeLimits</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int minwidth, int minheight, int maxwidth, int maxheight)</para>

<para>Sets the size limits of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gad2ae94a2c5ee1c46a36e13a8f4ac68ac">glfwSetWindowAspectRatio</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int numer, int denom)</para>

<para>Sets the aspect ratio of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gaf7d17f3534b4b6dc9a6f905e3a240b7e">glfwGetFramebufferSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>

<para>Retrieves the size of the framebuffer of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gaad46cdaae2eb732f68d3a1499a7c5409">glfwGetWindowFrameSize</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int *<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>, int *<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>, int *<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>, int *<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)</para>

<para>Retrieves the size of the frame of the window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga72718c983a9fffaa27f786bfe7d1c9ee">glfwGetWindowContentScale</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, float *xscale, float *yscale)</para>

<para>Retrieves the content scale for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> float <link linkend="_group__window_1gad124d57a1c1c519f60c9765cd0c2a89c">glfwGetWindowOpacity</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Returns the opacity of the whole window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga62a784fe328f227727cbcd0d07480ff3">glfwSetWindowOpacity</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, float opacity)</para>

<para>Sets the opacity of the whole window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga24274e3c6ecd44e11fec5e6b66e4d7f3">glfwIconifyWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Iconifies the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga1e29caf0b819f578b04db52fff17256c">glfwRestoreWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Restores the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga4f825a55367d3fabde3d06e7f30128e8">glfwMaximizeWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Maximizes the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga7945bcdff9e5e058cf36505d6873ed8c">glfwShowWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Makes the specified window visible. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gad0c9629abb49447bedd28080642b8538">glfwRequestWindowAttention</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Requests user attention to the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gaa17e287d521544bdeceafa09ac036e20">glfwHideWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Hides the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga0da0e3daaa2d100f44a115c09077b510">glfwFocusWindow</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Brings the specified window to front and sets input focus. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> int <link linkend="_group__window_1ga1bb0c7e100418e284dbb800789c63d40">glfwGetWindowAttrib</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int attrib)</para>

<para>Returns an attribute of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gad39f43f07856efcf3d656426a9284c75">glfwSetWindowAttrib</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, int attrib, int <link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>

<para>Sets an attribute of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> * <link linkend="_group__window_1gaf1525cb3bccd5789c702cc9676ef3403">glfwGetWindowMonitor</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Returns the monitor that the window uses for full screen mode. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga12fabf78575e59c00f822f323ae0b6ae">glfwSetWindowMonitor</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *wh, <link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link> *mh, int xpos, int ypos, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int refreshRate)</para>

<para>Sets the mode, monitor, video mode and placement of a window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gacc9e68faee3c1763b54cd9bc405cf43e">glfwSetWindowUserPointer</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *<link linkend="_glad_8h_1a8e06a460fd89ba3a95ce49119ef7aab2">pointer</link>)</para>

<para>Sets the user pointer of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * <link linkend="_group__window_1ga0a9ff3b4bf8589e9518e8816d06a8f50">glfwGetWindowUserPointer</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>

<para>Returns the user pointer of the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link> <link linkend="_group__window_1ga517b6e80b982efa06e9b8ca89d4a75a6">glfwSetWindowPosCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1gabe287973a21a8f927cde4db06b8dcbe9">GLFWwindowposfun</link> cbfun)</para>

<para>Sets the position callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link> <link linkend="_group__window_1gab0754f8d5c7c4d5cae2a9937a0e00bc5">glfwSetWindowSizeCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1gaec0282944bb810f6f3163ec02da90350">GLFWwindowsizefun</link> cbfun)</para>

<para>Sets the size callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link> <link linkend="_group__window_1ga693d778815971a06e1a5a7bcdeff3d36">glfwSetWindowCloseCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1gabf859b936d80961b7d39013a9694cc3e">GLFWwindowclosefun</link> cbfun)</para>

<para>Sets the close callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link> <link linkend="_group__window_1ga62bfa902c07a03b8ad9be37da31a4be7">glfwSetWindowRefreshCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1ga431663a1427d2eb3a273bc398b6737b5">GLFWwindowrefreshfun</link> cbfun)</para>

<para>Sets the refresh callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link> <link linkend="_group__window_1gacce1c4dd273b5c4c60b05599f8725b4e">glfwSetWindowFocusCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1gabc58c47e9d93f6eb1862d615c3680f46">GLFWwindowfocusfun</link> cbfun)</para>

<para>Sets the focus callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link> <link linkend="_group__window_1ga3e9f355edb6b9247149ddea2335eda69">glfwSetWindowIconifyCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1ga35c658cccba236f26e7adee0e25f6a4f">GLFWwindowiconifyfun</link> cbfun)</para>

<para>Sets the iconify callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link> <link linkend="_group__window_1gae77b3960dcd40514fb7b2b8a6eb98137">glfwSetWindowMaximizeCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1ga3017196fdaec33ac3e095765176c2a90">GLFWwindowmaximizefun</link> cbfun)</para>

<para>Sets the maximize callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link> <link linkend="_group__window_1ga41d69f9f263d7b33ea03cf58772b4ea0">glfwSetFramebufferSizeCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1gae18026e294dde685ed2e5f759533144d">GLFWframebuffersizefun</link> cbfun)</para>

<para>Sets the framebuffer resize callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link> <link linkend="_group__window_1gac6edcddbe785445d0d2b7b7be500836e">glfwSetWindowContentScaleCallback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle, <link linkend="_group__window_1ga77f288a2d04bb3c77c7d9615d08cf70e">GLFWwindowcontentscalefun</link> cbfun)</para>

<para>Sets the window content scale callback for the specified window. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>

<para>Processes all pending events. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga6e042d05823c11e11c7339b81a237738">glfwWaitEvents</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>

<para>Waits until events are queued and processes them. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1ga05223a0a4c5e50f10f289e60398153aa">glfwWaitEventsTimeout</link> (double <link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>)</para>

<para>Waits with timeout until events are queued and processes them. </para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_group__window_1gad6f6b997278c91c43b35970eb9713d7e">glfwPostEmptyEvent</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>

<para>Posts an empty event to the event queue. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_deps_2glfw_2src_2window_8c_1a1f8385157e99fea8cc960c0fb2f2fc47"/>    <section>
    <title>_glfwInputFramebufferSize()</title>
<indexterm><primary>_glfwInputFramebufferSize</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputFramebufferSize</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputFramebufferSize (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int width, int height)</computeroutput></para><para>
Definition at line 108 of file window.c.</para>
<programlisting>109 {
110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.fbsize)
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.fbsize((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
112 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1ae47e309820934e21c92a3e60faeefe8e"/>    <section>
    <title>_glfwInputWindowCloseRequest()</title>
<indexterm><primary>_glfwInputWindowCloseRequest</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowCloseRequest</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowCloseRequest (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 133 of file window.c.</para>
<programlisting>134 {
135 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;shouldClose&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
136 
137 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.close)
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.close((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
139 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1ab44396b5037d1a39f77bf9e70a954ad3"/>    <section>
    <title>_glfwInputWindowContentScale()</title>
<indexterm><primary>_glfwInputWindowContentScale</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowContentScale</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowContentScale (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float xscale, float yscale)</computeroutput></para><para>
Definition at line 117 of file window.c.</para>
<programlisting>118 {
119 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.scale)
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.scale((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;xscale,&#32;yscale);
121 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1ad9d5a996eef8fe1afcacc325f4510d1b"/>    <section>
    <title>_glfwInputWindowDamage()</title>
<indexterm><primary>_glfwInputWindowDamage</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowDamage</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowDamage (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 125 of file window.c.</para>
<programlisting>126 {
127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.refresh)
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.refresh((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
129 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1afb9ff9f75dd4d2dade4600dc38e8715e"/>    <section>
    <title>_glfwInputWindowFocus()</title>
<indexterm><primary>_glfwInputWindowFocus</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowFocus</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowFocus (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> focused)</computeroutput></para><para>
Definition at line 45 of file window.c.</para>
<programlisting>46 {
47 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.focus)
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.focus((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;focused);
49 
50 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!focused)
51 &#32;&#32;&#32;&#32;{
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>,&#32;button;
53 
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;0;&#32;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;&lt;=&#32;<link linkend="_group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789">GLFW_KEY_LAST</link>;&#32;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>++)
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;keys[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>]&#32;==&#32;<link linkend="_group__input_1ga2485743d0b59df3791c45951c4195265">GLFW_PRESS</link>)
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;scancode&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>.<link linkend="_struct___g_l_f_wplatform_1aa594d8adf1f21390097c062dd76e6de9">getKeyScancode</link>(<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1aba4a5bf53c475cf2dc3e594c3c5034ab">_glfwInputKey</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>,&#32;scancode,&#32;<link linkend="_group__input_1gada11d965c4da13090ad336e030e4d11f">GLFW_RELEASE</link>,&#32;0);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(button&#32;=&#32;0;&#32;&#32;button&#32;&lt;=&#32;<link linkend="_group__buttons_1gab1fd86a4518a9141ec7bcde2e15a2fdf">GLFW_MOUSE_BUTTON_LAST</link>;&#32;&#32;button++)
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;mouseButtons[button]&#32;==&#32;<link linkend="_group__input_1ga2485743d0b59df3791c45951c4195265">GLFW_PRESS</link>)
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_deps_2glfw_2src_2input_8c_1ae259527976c9b13341aa3e4587d0353e">_glfwInputMouseClick</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;button,&#32;<link linkend="_group__input_1gada11d965c4da13090ad336e030e4d11f">GLFW_RELEASE</link>,&#32;0);
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
68 &#32;&#32;&#32;&#32;}
69 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1a2efc58babb5479443430b2a084786c62"/>    <section>
    <title>_glfwInputWindowIconify()</title>
<indexterm><primary>_glfwInputWindowIconify</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowIconify</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowIconify (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> iconified)</computeroutput></para><para>
Definition at line 91 of file window.c.</para>
<programlisting>92 {
93 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.iconify)
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.iconify((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;iconified);
95 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1a3225b80b591337bcaa855c00da6ceb8f"/>    <section>
    <title>_glfwInputWindowMaximize()</title>
<indexterm><primary>_glfwInputWindowMaximize</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowMaximize</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowMaximize (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> maximized)</computeroutput></para><para>
Definition at line 99 of file window.c.</para>
<programlisting>100 {
101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.maximize)
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.maximize((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;maximized);
103 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1a5cfc56e9a5e1e8dd88862c9c7b8a6f7f"/>    <section>
    <title>_glfwInputWindowMonitor()</title>
<indexterm><primary>_glfwInputWindowMonitor</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowMonitor</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowMonitor (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor)</computeroutput></para><para>
Definition at line 143 of file window.c.</para>
<programlisting>144 {
145 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor&#32;=&#32;monitor;
146 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1a782217003a0393ccd8bfba049cced9f6"/>    <section>
    <title>_glfwInputWindowPos()</title>
<indexterm><primary>_glfwInputWindowPos</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowPos</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowPos (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int x, int y)</computeroutput></para><para>
Definition at line 74 of file window.c.</para>
<programlisting>75 {
76 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.pos)
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.pos((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
78 }
</programlisting>    </section><anchor xml:id="_deps_2glfw_2src_2window_8c_1a4becb396bda8c2a525a3d08d86354c6b"/>    <section>
    <title>_glfwInputWindowSize()</title>
<indexterm><primary>_glfwInputWindowSize</primary><secondary>window.c</secondary></indexterm>
<indexterm><primary>window.c</primary><secondary>_glfwInputWindowSize</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputWindowSize (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int width, int height)</computeroutput></para><para>
Definition at line 83 of file window.c.</para>
<programlisting>84 {
85 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.size)
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;callbacks.size((<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
87 }
</programlisting></section>
</section>
</section>
