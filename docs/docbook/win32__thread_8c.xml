<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_win32__thread_8c">
<title>deps/glfw/src/win32_thread.c File Reference</title>
<indexterm><primary>deps/glfw/src/win32_thread.c</primary></indexterm>
<programlisting>#include &quot;internal.h&quot;
#include &lt;assert.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__thread_8c_1afad94d57290ac85fbece14f93c41754f">_glfwPlatformCreateTls</link> (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> *tls)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__thread_8c_1a36bee5cb6dd711c2278a0db7f5b81979">_glfwPlatformDestroyTls</link> (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> *tls)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * <link linkend="_win32__thread_8c_1a0a0787a86bb4e04f17a8d24e70e1f013">_glfwPlatformGetTls</link> (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> *tls)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__thread_8c_1a302f48b6d4dba6b3579449d8a43cfae7">_glfwPlatformSetTls</link> (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> *tls, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__thread_8c_1a6c5f30449fe62f561c9b01f839ec0438">_glfwPlatformCreateMutex</link> (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> *mutex)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__thread_8c_1a3731e795e959a80349337ee1e3887518">_glfwPlatformDestroyMutex</link> (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> *mutex)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__thread_8c_1a2677e4d211fbe9b2dc96d16e91c98930">_glfwPlatformLockMutex</link> (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> *mutex)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__thread_8c_1a8b7744446237b1c292ba8a0b9d5e7f90">_glfwPlatformUnlockMutex</link> (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> *mutex)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_win32__thread_8c_1a6c5f30449fe62f561c9b01f839ec0438"/>    <section>
    <title>_glfwPlatformCreateMutex()</title>
<indexterm><primary>_glfwPlatformCreateMutex</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformCreateMutex</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwPlatformCreateMutex (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> * mutex)</computeroutput></para><para>
Definition at line 73 of file win32_thread.c.</para>
<programlisting>74 {
75 &#32;&#32;&#32;&#32;assert(mutex-&gt;win32.allocated&#32;==&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>);
76 &#32;&#32;&#32;&#32;InitializeCriticalSection(&amp;mutex-&gt;win32.section);
77 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mutex-&gt;win32.allocated&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
78 }
</programlisting>    </section><anchor xml:id="_win32__thread_8c_1afad94d57290ac85fbece14f93c41754f"/>    <section>
    <title>_glfwPlatformCreateTls()</title>
<indexterm><primary>_glfwPlatformCreateTls</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformCreateTls</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwPlatformCreateTls (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> * tls)</computeroutput></para><para>
Definition at line 39 of file win32_thread.c.</para>
<programlisting>40 {
41 &#32;&#32;&#32;&#32;assert(tls-&gt;win32.allocated&#32;==&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>);
42 
43 &#32;&#32;&#32;&#32;tls-&gt;win32.index&#32;=&#32;TlsAlloc();
44 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tls-&gt;win32.index&#32;==&#32;TLS_OUT_OF_INDEXES)
45 &#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;allocate&#32;TLS&#32;index&quot;</emphasis>);
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
48 &#32;&#32;&#32;&#32;}
49 
50 &#32;&#32;&#32;&#32;tls-&gt;win32.allocated&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
51 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
52 }
</programlisting>    </section><anchor xml:id="_win32__thread_8c_1a3731e795e959a80349337ee1e3887518"/>    <section>
    <title>_glfwPlatformDestroyMutex()</title>
<indexterm><primary>_glfwPlatformDestroyMutex</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformDestroyMutex</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPlatformDestroyMutex (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> * mutex)</computeroutput></para><para>
Definition at line 80 of file win32_thread.c.</para>
<programlisting>81 {
82 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mutex-&gt;win32.allocated)
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DeleteCriticalSection(&amp;mutex-&gt;win32.section);
84 &#32;&#32;&#32;&#32;memset(mutex,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link>));
85 }
</programlisting>    </section><anchor xml:id="_win32__thread_8c_1a36bee5cb6dd711c2278a0db7f5b81979"/>    <section>
    <title>_glfwPlatformDestroyTls()</title>
<indexterm><primary>_glfwPlatformDestroyTls</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformDestroyTls</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPlatformDestroyTls (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> * tls)</computeroutput></para><para>
Definition at line 54 of file win32_thread.c.</para>
<programlisting>55 {
56 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tls-&gt;win32.allocated)
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TlsFree(tls-&gt;win32.index);
58 &#32;&#32;&#32;&#32;memset(tls,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct___g_l_f_wtls">_GLFWtls</link>));
59 }
</programlisting>    </section><anchor xml:id="_win32__thread_8c_1a0a0787a86bb4e04f17a8d24e70e1f013"/>    <section>
    <title>_glfwPlatformGetTls()</title>
<indexterm><primary>_glfwPlatformGetTls</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformGetTls</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>* _glfwPlatformGetTls (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> * tls)</computeroutput></para><para>
Definition at line 61 of file win32_thread.c.</para>
<programlisting>62 {
63 &#32;&#32;&#32;&#32;assert(tls-&gt;win32.allocated&#32;==&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
64 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;TlsGetValue(tls-&gt;win32.index);
65 }
</programlisting>    </section><anchor xml:id="_win32__thread_8c_1a2677e4d211fbe9b2dc96d16e91c98930"/>    <section>
    <title>_glfwPlatformLockMutex()</title>
<indexterm><primary>_glfwPlatformLockMutex</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformLockMutex</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPlatformLockMutex (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> * mutex)</computeroutput></para><para>
Definition at line 87 of file win32_thread.c.</para>
<programlisting>88 {
89 &#32;&#32;&#32;&#32;assert(mutex-&gt;win32.allocated&#32;==&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
90 &#32;&#32;&#32;&#32;EnterCriticalSection(&amp;mutex-&gt;win32.section);
91 }
</programlisting>    </section><anchor xml:id="_win32__thread_8c_1a302f48b6d4dba6b3579449d8a43cfae7"/>    <section>
    <title>_glfwPlatformSetTls()</title>
<indexterm><primary>_glfwPlatformSetTls</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformSetTls</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPlatformSetTls (<link linkend="_struct___g_l_f_wtls">_GLFWtls</link> * tls, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * value)</computeroutput></para><para>
Definition at line 67 of file win32_thread.c.</para>
<programlisting>68 {
69 &#32;&#32;&#32;&#32;assert(tls-&gt;win32.allocated&#32;==&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
70 &#32;&#32;&#32;&#32;TlsSetValue(tls-&gt;win32.index,&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
71 }
</programlisting>    </section><anchor xml:id="_win32__thread_8c_1a8b7744446237b1c292ba8a0b9d5e7f90"/>    <section>
    <title>_glfwPlatformUnlockMutex()</title>
<indexterm><primary>_glfwPlatformUnlockMutex</primary><secondary>win32_thread.c</secondary></indexterm>
<indexterm><primary>win32_thread.c</primary><secondary>_glfwPlatformUnlockMutex</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPlatformUnlockMutex (<link linkend="_struct___g_l_f_wmutex">_GLFWmutex</link> * mutex)</computeroutput></para><para>
Definition at line 93 of file win32_thread.c.</para>
<programlisting>94 {
95 &#32;&#32;&#32;&#32;assert(mutex-&gt;win32.allocated&#32;==&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
96 &#32;&#32;&#32;&#32;LeaveCriticalSection(&amp;mutex-&gt;win32.section);
97 }
</programlisting></section>
</section>
</section>
