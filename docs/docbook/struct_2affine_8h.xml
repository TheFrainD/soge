<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_2affine_8h">
<title>deps/cglm/include/cglm/struct/affine.h File Reference</title>
<indexterm><primary>deps/cglm/include/cglm/struct/affine.h</primary></indexterm>
<programlisting>#include &quot;../common.h&quot;
#include &quot;../types-struct.h&quot;
#include &quot;../affine.h&quot;
#include &quot;vec3.h&quot;
#include &quot;vec4.h&quot;
#include &quot;mat4.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a8b91e6a8bc7e8ada5b34812c68f0f065">glms_translate</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_unionvec3s">vec3s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>translate existing transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a351dab4aa65a924da07cb4c85c634374">glms_translate_x</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)</para>

<para>translate existing transform matrix by x factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a5f98eeceb6d0440f6605f581ff0aee6c">glms_translate_y</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>

<para>translate existing transform matrix by y factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a335488f2a80f5cdf36caf538a8c183e9">glms_translate_z</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>)</para>

<para>translate existing transform matrix by z factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a2ab44de12819368d6ee8e56dee527266">glms_translate_make</link> (<link linkend="_unionvec3s">vec3s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW translate transform matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a4af143a3cd542b96adce762eea8b844d">glms_scale_make</link> (<link linkend="_unionvec3s">vec3s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW scale matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1ab0a317ca25b5e5d415d1a30cc076dea6">glms_scale</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_unionvec3s">vec3s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>scales existing transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a0200c17a4045c3e4c251b64fc64fd6be">glms_scale_uni</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>applies uniform scale to existing transform matrix v = [s, s, s] and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1ae7a8a9dac6cdb463a6b4ea601e88d736">glms_rotate_x</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>rotate existing transform matrix around X axis by angle and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a222081733efe02ee912bb63dd7936117">glms_rotate_y</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>rotate existing transform matrix around Y axis by angle and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a2ef3cbc9a901303bbbd51f7adb7969d8">glms_rotate_z</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>rotate existing transform matrix around Z axis by angle and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1aa2847a0a629b97b34eaca699baea83cd">glms_rotate_make</link> (float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_unionvec3s">vec3s</link> axis)</para>

<para>creates NEW rotation matrix by angle and axis </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a54cf23d191cac011e68c3aead829a8f3">glms_rotate</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_unionvec3s">vec3s</link> axis)</para>

<para>rotate existing transform matrix around given axis by angle </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a978baeef650644b4a975bcf8a237509b">glms_rotate_at</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_unionvec3s">vec3s</link> pivot, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_unionvec3s">vec3s</link> axis)</para>

<para>rotate existing transform around given axis by angle at given pivot point (rotation center) </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> <link linkend="_struct_2affine_8h_1a706250cf45c48f7a0553e2af5221b093">glms_rotate_atm</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_unionvec3s">vec3s</link> pivot, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_unionvec3s">vec3s</link> axis)</para>

<para>creates NEW rotation matrix by angle and axis at given point </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionvec3s">vec3s</link> <link linkend="_struct_2affine_8h_1a68d0ce58ed49e610aa15b0576f832043">glms_decompose_scalev</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>)</para>

<para>decompose scale vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> bool <link linkend="_struct_2affine_8h_1a343dd9430f954b8e6d5a60821215afff">glms_uniscaled</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>)</para>

<para>returns true if matrix is uniform scaled. This is helpful for creating normal matrix. </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_struct_2affine_8h_1af3db7290db43bb2ade651fa66e7a2a67">glms_decompose_rs</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_unionmat4s">mat4s</link> *__restrict <link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>, <link linkend="_unionvec3s">vec3s</link> *__restrict <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>decompose rotation matrix (mat4) and scale vector [Sx, Sy, Sz] DON&apos;T pass projected matrix here </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_struct_2affine_8h_1a7f7c32b4a58907b0c73995a935b4179a">glms_decompose</link> (<link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> *__restrict <link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>, <link linkend="_unionmat4s">mat4s</link> *__restrict <link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>, <link linkend="_unionvec3s">vec3s</link> *__restrict <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>decompose affine transform, TODO: extract shear factors. DON&apos;T pass projected matrix here </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_struct_2affine_8h_1a7f7c32b4a58907b0c73995a935b4179a"/>    <section>
    <title>glms_decompose()</title>
<indexterm><primary>glms_decompose</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_decompose</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glms_decompose (<link linkend="_unionmat4s">mat4s</link> m, <link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> *__restrict t, <link linkend="_unionmat4s">mat4s</link> *__restrict r, <link linkend="_unionvec3s">vec3s</link> *__restrict s)</computeroutput></para><para>

<para>decompose affine transform, TODO: extract shear factors. DON&apos;T pass projected matrix here </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>t</entry>
                                <entry>
<para>translation vector </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>r</entry>
                                <entry>
<para>rotation matrix (mat4) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>s</entry>
                                <entry>
<para>scaling vector [X, Y, Z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 329 of file affine.h.</para>
<programlisting>329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
330 &#32;&#32;<link linkend="_affine_8h_1ac840453c0577f549bd80d04e8cbeb136">glm_decompose</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>-&gt;raw,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>-&gt;raw,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>-&gt;raw);
331 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1af3db7290db43bb2ade651fa66e7a2a67"/>    <section>
    <title>glms_decompose_rs()</title>
<indexterm><primary>glms_decompose_rs</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_decompose_rs</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glms_decompose_rs (<link linkend="_unionmat4s">mat4s</link> m, <link linkend="_unionmat4s">mat4s</link> *__restrict r, <link linkend="_unionvec3s">vec3s</link> *__restrict s)</computeroutput></para><para>

<para>decompose rotation matrix (mat4) and scale vector [Sx, Sy, Sz] DON&apos;T pass projected matrix here </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transform </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>r</entry>
                                <entry>
<para>rotation matrix </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>s</entry>
                                <entry>
<para>scale matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 314 of file affine.h.</para>
<programlisting>314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
315 &#32;&#32;<link linkend="_affine_8h_1acfe6e6dd7ee85061cd604a5e2d30d7be">glm_decompose_rs</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>-&gt;raw,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>-&gt;raw);
316 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a68d0ce58ed49e610aa15b0576f832043"/>    <section>
    <title>glms_decompose_scalev()</title>
<indexterm><primary>glms_decompose_scalev</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_decompose_scalev</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionvec3s">vec3s</link> glms_decompose_scalev (<link linkend="_unionmat4s">mat4s</link> m)</computeroutput></para><para>

<para>decompose scale vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transform </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>scale vector (Sx, Sy, Sz) </para>
</formalpara>
</para>
<para>
Definition at line 284 of file affine.h.</para>
<programlisting>284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
285 &#32;&#32;<link linkend="_unionvec3s">vec3s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
286 &#32;&#32;<link linkend="_affine_8h_1a80b9435d9ed5093c4162b5291eb2136a">glm_decompose_scalev</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
287 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
288 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a54cf23d191cac011e68c3aead829a8f3"/>    <section>
    <title>glms_rotate()</title>
<indexterm><primary>glms_rotate</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_rotate</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_rotate (<link linkend="_unionmat4s">mat4s</link> m, float angle, <link linkend="_unionvec3s">vec3s</link> axis)</computeroutput></para><para>

<para>rotate existing transform matrix around given axis by angle </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 233 of file affine.h.</para>
<programlisting>233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
234 &#32;&#32;<link linkend="_affine_8h_1aa2cece9335958a3a22540f18a25e9aef">glm_rotate</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;axis.<link linkend="_unionvec3s_1a80935d15e18e9db03710cb5859ee10e2">raw</link>);
235 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
236 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a978baeef650644b4a975bcf8a237509b"/>    <section>
    <title>glms_rotate_at()</title>
<indexterm><primary>glms_rotate_at</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_rotate_at</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_rotate_at (<link linkend="_unionmat4s">mat4s</link> m, <link linkend="_unionvec3s">vec3s</link> pivot, float angle, <link linkend="_unionvec3s">vec3s</link> axis)</computeroutput></para><para>

<para>rotate existing transform around given axis by angle at given pivot point (rotation center) </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>pivot</entry>
                                <entry>
<para>rotation center </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 250 of file affine.h.</para>
<programlisting>250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
251 &#32;&#32;<link linkend="_affine_8h_1a32201d384002e1d02c791b6fecb31ea4">glm_rotate_at</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;pivot.<link linkend="_unionvec3s_1a80935d15e18e9db03710cb5859ee10e2">raw</link>,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;axis.<link linkend="_unionvec3s_1a80935d15e18e9db03710cb5859ee10e2">raw</link>);
252 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
253 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a706250cf45c48f7a0553e2af5221b093"/>    <section>
    <title>glms_rotate_atm()</title>
<indexterm><primary>glms_rotate_atm</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_rotate_atm</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_rotate_atm (<link linkend="_unionmat4s">mat4s</link> m, <link linkend="_unionvec3s">vec3s</link> pivot, float angle, <link linkend="_unionvec3s">vec3s</link> axis)</computeroutput></para><para>

<para>creates NEW rotation matrix by angle and axis at given point </para>
</para>

<para>this creates rotation matrix, it assumes you don&apos;t have a matrix</para>

<para>this should work faster than glm_rotate_at because it reduces one glm_translate.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>pivot</entry>
                                <entry>
<para>rotation center </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 271 of file affine.h.</para>
<programlisting>271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
272 &#32;&#32;<link linkend="_affine_8h_1adfd4106136fc0f05f9b1a4d1c80d3160">glm_rotate_atm</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;pivot.<link linkend="_unionvec3s_1a80935d15e18e9db03710cb5859ee10e2">raw</link>,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;axis.<link linkend="_unionvec3s_1a80935d15e18e9db03710cb5859ee10e2">raw</link>);
273 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
274 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1aa2847a0a629b97b34eaca699baea83cd"/>    <section>
    <title>glms_rotate_make()</title>
<indexterm><primary>glms_rotate_make</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_rotate_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_rotate_make (float angle, <link linkend="_unionvec3s">vec3s</link> axis)</computeroutput></para><para>

<para>creates NEW rotation matrix by angle and axis </para>
</para>

<para>axis will be normalized so you don&apos;t need to normalize it</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 217 of file affine.h.</para>
<programlisting>217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
218 &#32;&#32;<link linkend="_unionmat4s">mat4s</link>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
219 &#32;&#32;<link linkend="_affine_8h_1a0f775feca38e09eda5f2498aa2ec25bc">glm_rotate_make</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;axis.<link linkend="_unionvec3s_1a80935d15e18e9db03710cb5859ee10e2">raw</link>);
220 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
221 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1ae7a8a9dac6cdb463a6b4ea601e88d736"/>    <section>
    <title>glms_rotate_x()</title>
<indexterm><primary>glms_rotate_x</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_rotate_x</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_rotate_x (<link linkend="_unionmat4s">mat4s</link> m, float angle)</computeroutput></para><para>

<para>rotate existing transform matrix around X axis by angle and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>rotated matrix </para>
</formalpara>
</para>
<para>
Definition at line 168 of file affine.h.</para>
<programlisting>168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
169 &#32;&#32;<link linkend="_unionmat4s">mat4s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
170 &#32;&#32;<link linkend="_affine_8h_1abf89acdc4112fcf28c0c410e1ce6bbfc">glm_rotate_x</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
171 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
172 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a222081733efe02ee912bb63dd7936117"/>    <section>
    <title>glms_rotate_y()</title>
<indexterm><primary>glms_rotate_y</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_rotate_y</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_rotate_y (<link linkend="_unionmat4s">mat4s</link> m, float angle)</computeroutput></para><para>

<para>rotate existing transform matrix around Y axis by angle and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>rotated matrix </para>
</formalpara>
</para>
<para>
Definition at line 184 of file affine.h.</para>
<programlisting>184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
185 &#32;&#32;<link linkend="_unionmat4s">mat4s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
186 &#32;&#32;<link linkend="_affine_8h_1a8e70c3eb632a262a1a7e28ec2f2fbbc6">glm_rotate_y</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
187 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
188 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a2ef3cbc9a901303bbbd51f7adb7969d8"/>    <section>
    <title>glms_rotate_z()</title>
<indexterm><primary>glms_rotate_z</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_rotate_z</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_rotate_z (<link linkend="_unionmat4s">mat4s</link> m, float angle)</computeroutput></para><para>

<para>rotate existing transform matrix around Z axis by angle and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>rotated matrix </para>
</formalpara>
</para>
<para>
Definition at line 200 of file affine.h.</para>
<programlisting>200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
201 &#32;&#32;<link linkend="_unionmat4s">mat4s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
202 &#32;&#32;<link linkend="_affine_8h_1a357ddc92e648c2c0758851f80b6302ce">glm_rotate_z</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
203 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
204 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1ab0a317ca25b5e5d415d1a30cc076dea6"/>    <section>
    <title>glms_scale()</title>
<indexterm><primary>glms_scale</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_scale</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_scale (<link linkend="_unionmat4s">mat4s</link> m, <link linkend="_unionvec3s">vec3s</link> v)</computeroutput></para><para>

<para>scales existing transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 137 of file affine.h.</para>
<programlisting>137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
138 &#32;&#32;<link linkend="_unionmat4s">mat4s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
139 &#32;&#32;<link linkend="_affine_8h_1afe481664990782be30ae985ea897350f">glm_scale_to</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
140 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
141 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a4af143a3cd542b96adce762eea8b844d"/>    <section>
    <title>glms_scale_make()</title>
<indexterm><primary>glms_scale_make</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_scale_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_scale_make (<link linkend="_unionvec3s">vec3s</link> v)</computeroutput></para><para>

<para>creates NEW scale matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 121 of file affine.h.</para>
<programlisting>121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
122 &#32;&#32;<link linkend="_unionmat4s">mat4s</link>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
123 &#32;&#32;<link linkend="_affine_8h_1a2245fa29db156c6c9adda3e3a98cae5e">glm_scale_make</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw);
124 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
125 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a0200c17a4045c3e4c251b64fc64fd6be"/>    <section>
    <title>glms_scale_uni()</title>
<indexterm><primary>glms_scale_uni</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_scale_uni</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_scale_uni (<link linkend="_unionmat4s">mat4s</link> m, float s)</computeroutput></para><para>

<para>applies uniform scale to existing transform matrix v = [s, s, s] and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>s</entry>
                                <entry>
<para>scale factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 153 of file affine.h.</para>
<programlisting>153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
154 &#32;&#32;<link linkend="_affine_8h_1a167b8ff0f0033ccda49a3a489e680979">glm_scale_uni</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
155 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
156 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a8b91e6a8bc7e8ada5b34812c68f0f065"/>    <section>
    <title>glms_translate()</title>
<indexterm><primary>glms_translate</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_translate</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_translate (<link linkend="_unionmat4s">mat4s</link> m, <link linkend="_unionvec3s">vec3s</link> v)</computeroutput></para><para>

<para>translate existing transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 52 of file affine.h.</para>
<programlisting>52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
53 &#32;&#32;<link linkend="_affine_8h_1a0ce47d9b56e358ae2953be8835e799d7">glm_translate</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw);
54 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
55 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a2ab44de12819368d6ee8e56dee527266"/>    <section>
    <title>glms_translate_make()</title>
<indexterm><primary>glms_translate_make</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_translate_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_translate_make (<link linkend="_unionvec3s">vec3s</link> v)</computeroutput></para><para>

<para>creates NEW translate transform matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 107 of file affine.h.</para>
<programlisting>107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
108 &#32;&#32;<link linkend="_unionmat4s">mat4s</link>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
109 &#32;&#32;<link linkend="_affine_8h_1a511b571151c53ecc052f5cf74c6a01b9">glm_translate_make</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw);
110 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
111 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a351dab4aa65a924da07cb4c85c634374"/>    <section>
    <title>glms_translate_x()</title>
<indexterm><primary>glms_translate_x</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_translate_x</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_translate_x (<link linkend="_unionmat4s">mat4s</link> m, float x)</computeroutput></para><para>

<para>translate existing transform matrix by x factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>x</entry>
                                <entry>
<para>x factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 66 of file affine.h.</para>
<programlisting>66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
67 &#32;&#32;<link linkend="_affine_8h_1af641771d8f2db1c0edf476db1954ea20">glm_translate_x</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>);
68 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
69 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a5f98eeceb6d0440f6605f581ff0aee6c"/>    <section>
    <title>glms_translate_y()</title>
<indexterm><primary>glms_translate_y</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_translate_y</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_translate_y (<link linkend="_unionmat4s">mat4s</link> m, float y)</computeroutput></para><para>

<para>translate existing transform matrix by y factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>y</entry>
                                <entry>
<para>y factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 80 of file affine.h.</para>
<programlisting>80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
81 &#32;&#32;<link linkend="_affine_8h_1ac66710c48849b5e4d855099e0a0e425c">glm_translate_y</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
82 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
83 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a335488f2a80f5cdf36caf538a8c183e9"/>    <section>
    <title>glms_translate_z()</title>
<indexterm><primary>glms_translate_z</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_translate_z</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat4s">mat4s</link> glms_translate_z (<link linkend="_unionmat4s">mat4s</link> m, float z)</computeroutput></para><para>

<para>translate existing transform matrix by z factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>z</entry>
                                <entry>
<para>z factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 94 of file affine.h.</para>
<programlisting>94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
95 &#32;&#32;<link linkend="_affine_8h_1a4485009dfa1b044f41f775431ed473b5">glm_translate_z</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>);
96 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
97 }
</programlisting>    </section><anchor xml:id="_struct_2affine_8h_1a343dd9430f954b8e6d5a60821215afff"/>    <section>
    <title>glms_uniscaled()</title>
<indexterm><primary>glms_uniscaled</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glms_uniscaled</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> bool glms_uniscaled (<link linkend="_unionmat4s">mat4s</link> m)</computeroutput></para><para>

<para>returns true if matrix is uniform scaled. This is helpful for creating normal matrix. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>m</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>boolean </para>
</formalpara>
</para>
<para>
Definition at line 300 of file affine.h.</para>
<programlisting>300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
301 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_affine_8h_1aa6434902842e7bfe3110f01b79f219ff">glm_uniscaled</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw);
302 }
</programlisting></section>
</section>
</section>
