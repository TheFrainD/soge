<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stb__gl_8h">
<title>deps/stb/tests/caveview/stb_gl.h File Reference</title>
<indexterm><primary>deps/stb/tests/caveview/stb_gl.h</primary></indexterm>
<programlisting>#include &lt;stddef.h&gt;
#include &lt;gl/gl.h&gt;
#include &lt;gl/glu.h&gt;
#include &lt;math.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;assert.h&gt;
#include &lt;memory.h&gt;
#include &quot;glext.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_stb__gl_8h_1ad6ade59eee8ecc824429b9c48f63dce0">STB_GL</link></para>
</listitem>
            <listitem><para>#define <link linkend="_stb__gl_8h_1ae71449b1cc6e6250b91f539153a7a0d3">M_PI</link>   3.14159265358979323846<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a5359ad0dd89316614e0c29a52bd2bd6f">stbgl_Perspective</link> (float <link linkend="_wave_8c_1a5a2149a845f88b6489d3d88845d0f257">zoom</link>, float max_hfov, float max_vfov, float znear, float zfar)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a9161fedc1ac518aa54cb847ff93026da">stbgl_PerspectiveViewport</link> (int <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int <link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>, int <link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>, float <link linkend="_wave_8c_1a5a2149a845f88b6489d3d88845d0f257">zoom</link>, float max_hfov, float max_vfov, float znear, float zfar)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a73eedccaa11cde0f9c847f1fedfd1e98">stbgl_initCamera_zup_facing_x</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a1428bddc2ca42862c9d149148949eb4f">stbgl_initCamera_zup_facing_y</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a84b2c754c52b648ad3597f574daebcdc">stbgl_positionCameraWithEulerAngles</link> (float *loc, float *ang)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a92dadba7f1399ac6a9cd0b58dff0c316">stbgl_drawRect</link> (float <link linkend="_glext_8h_1a98ac434677655cc8438bb72de2719f39">x0</link>, float <link linkend="_glext_8h_1ae7f97ed6c9c8e502fcbc44c7cb8a8312">y0</link>, float <link linkend="_glext_8h_1a49825216c96caaeb09237b36651181c5">x1</link>, float <link linkend="_glext_8h_1a3af6c78fcdfccea028a5878bc747ef39">y1</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a819f38cb48e375d50ec1e48fb1712b4e">stbgl_drawRectTC</link> (float <link linkend="_glext_8h_1a98ac434677655cc8438bb72de2719f39">x0</link>, float <link linkend="_glext_8h_1ae7f97ed6c9c8e502fcbc44c7cb8a8312">y0</link>, float <link linkend="_glext_8h_1a49825216c96caaeb09237b36651181c5">x1</link>, float <link linkend="_glext_8h_1a3af6c78fcdfccea028a5878bc747ef39">y1</link>, float <link linkend="_glext_8h_1afeed0b7958979c6add0e425baba3b41f">s0</link>, float <link linkend="_glext_8h_1abf0ea7853561a9028dbbc4caeb2f8ff1">t0</link>, float <link linkend="_glext_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003">s1</link>, float <link linkend="_glext_8h_1af48031a37b713afa3b0d0d7d29653d7c">t1</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1a233c064b76f7c8e011637961aa10b046">stbgl_drawBox</link> (float <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, float <link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>, float <link linkend="_oversample_2main_8c_1a699a96985661e4518b86127b4e63c3a8">sx</link>, float <link linkend="_oversample_2main_8c_1affcd3fe43d73220dd7b3e6bde969e65c">sy</link>, float sz, int cw)</para>
</listitem>
            <listitem><para>int <link linkend="_stb__gl_8h_1a7f59b6981f6b07ed37d6f37693b3669c">stbgl_hasExtension</link> (char *ext)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1ab771c898249fe69b37679ea64b5ec392">stbgl_SimpleLight</link> (int <link linkend="_glad_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>, float bright, float <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, float <link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__gl_8h_1aa2794f7f4d23a6c5b83ad64c90296fc7">stbgl_GlobalAmbient</link> (float <link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>, float <link linkend="_glad_8h_1acaceb3a655ff28b75259860bcb868f9f">g</link>, float <link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_stb__gl_8h_1a536ab76e6a3f0c62076cb5be23831bf6">stbgl_LoadTexture</link> (char *filename, char *<link linkend="_glad_8h_1a5eca93bfc840dd9013a5fcf04dbaf051">props</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_stb__gl_8h_1ab1482e34d2310fbf6da74b3ad7e03a25">stbgl_TestTexture</link> (int <link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_stb__gl_8h_1a09468d366465dff8d5d14813d26b886d">stbgl_TestTextureEx</link> (int <link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>, char *scale_table, int checks_log2, int r1, int g1, int b1, int r2, int b2, int g2)</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_stb__gl_8h_1aa53e63cafe37f5e85f864af9cd341463">stbgl_rand</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_stb__gl_8h_1a6af2e2b97ca5f7d312c4d2d29fb8a95c">stbgl_TexImage2D</link> (int texid, int <link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>, int <link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>, char *<link linkend="_glad_8h_1a5eca93bfc840dd9013a5fcf04dbaf051">props</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_stb__gl_8h_1a86859256ca4e08ed7f9387be24ad3c24">stbgl_TexImage2D_Extra</link> (int texid, int <link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>, int <link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>, int chan, char *<link linkend="_glad_8h_1a5eca93bfc840dd9013a5fcf04dbaf051">props</link>, int preserve_data)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_stb__gl_8h_1ae71449b1cc6e6250b91f539153a7a0d3"/>    <section>
    <title>M_PI</title>
<indexterm><primary>M_PI</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>M_PI</secondary></indexterm>
<para><computeroutput>#define M_PI   3.14159265358979323846<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link></computeroutput></para><para>
Definition at line 54 of file stb_gl.h.</para>
    </section><anchor xml:id="_stb__gl_8h_1ad6ade59eee8ecc824429b9c48f63dce0"/>    <section>
    <title>STB_GL</title>
<indexterm><primary>STB_GL</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>STB_GL</secondary></indexterm>
<para><computeroutput>#define STB_GL</computeroutput></para><para>
Definition at line 38 of file stb_gl.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_stb__gl_8h_1a233c064b76f7c8e011637961aa10b046"/>    <section>
    <title>stbgl_drawBox()</title>
<indexterm><primary>stbgl_drawBox</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_drawBox</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_drawBox (float x, float y, float z, float sx, float sy, float sz, int cw)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a92dadba7f1399ac6a9cd0b58dff0c316"/>    <section>
    <title>stbgl_drawRect()</title>
<indexterm><primary>stbgl_drawRect</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_drawRect</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_drawRect (float x0, float y0, float x1, float y1)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a819f38cb48e375d50ec1e48fb1712b4e"/>    <section>
    <title>stbgl_drawRectTC()</title>
<indexterm><primary>stbgl_drawRectTC</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_drawRectTC</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_drawRectTC (float x0, float y0, float x1, float y1, float s0, float t0, float s1, float t1)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1aa2794f7f4d23a6c5b83ad64c90296fc7"/>    <section>
    <title>stbgl_GlobalAmbient()</title>
<indexterm><primary>stbgl_GlobalAmbient</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_GlobalAmbient</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_GlobalAmbient (float r, float g, float b)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a7f59b6981f6b07ed37d6f37693b3669c"/>    <section>
    <title>stbgl_hasExtension()</title>
<indexterm><primary>stbgl_hasExtension</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_hasExtension</secondary></indexterm>
<para><computeroutput>int stbgl_hasExtension (char * ext)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a73eedccaa11cde0f9c847f1fedfd1e98"/>    <section>
    <title>stbgl_initCamera_zup_facing_x()</title>
<indexterm><primary>stbgl_initCamera_zup_facing_x</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_initCamera_zup_facing_x</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_initCamera_zup_facing_x (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a1428bddc2ca42862c9d149148949eb4f"/>    <section>
    <title>stbgl_initCamera_zup_facing_y()</title>
<indexterm><primary>stbgl_initCamera_zup_facing_y</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_initCamera_zup_facing_y</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_initCamera_zup_facing_y (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a536ab76e6a3f0c62076cb5be23831bf6"/>    <section>
    <title>stbgl_LoadTexture()</title>
<indexterm><primary>stbgl_LoadTexture</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_LoadTexture</secondary></indexterm>
<para><computeroutput>int stbgl_LoadTexture (char * filename, char * props)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a5359ad0dd89316614e0c29a52bd2bd6f"/>    <section>
    <title>stbgl_Perspective()</title>
<indexterm><primary>stbgl_Perspective</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_Perspective</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_Perspective (float zoom, float max_hfov, float max_vfov, float znear, float zfar)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a9161fedc1ac518aa54cb847ff93026da"/>    <section>
    <title>stbgl_PerspectiveViewport()</title>
<indexterm><primary>stbgl_PerspectiveViewport</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_PerspectiveViewport</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_PerspectiveViewport (int x, int y, int w, int h, float zoom, float max_hfov, float max_vfov, float znear, float zfar)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a84b2c754c52b648ad3597f574daebcdc"/>    <section>
    <title>stbgl_positionCameraWithEulerAngles()</title>
<indexterm><primary>stbgl_positionCameraWithEulerAngles</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_positionCameraWithEulerAngles</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_positionCameraWithEulerAngles (float * loc, float * ang)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1aa53e63cafe37f5e85f864af9cd341463"/>    <section>
    <title>stbgl_rand()</title>
<indexterm><primary>stbgl_rand</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_rand</secondary></indexterm>
<para><computeroutput>unsigned int stbgl_rand (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1ab771c898249fe69b37679ea64b5ec392"/>    <section>
    <title>stbgl_SimpleLight()</title>
<indexterm><primary>stbgl_SimpleLight</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_SimpleLight</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbgl_SimpleLight (int index, float bright, float x, float y, float z)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1ab1482e34d2310fbf6da74b3ad7e03a25"/>    <section>
    <title>stbgl_TestTexture()</title>
<indexterm><primary>stbgl_TestTexture</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_TestTexture</secondary></indexterm>
<para><computeroutput>int stbgl_TestTexture (int w)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a09468d366465dff8d5d14813d26b886d"/>    <section>
    <title>stbgl_TestTextureEx()</title>
<indexterm><primary>stbgl_TestTextureEx</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_TestTextureEx</secondary></indexterm>
<para><computeroutput>int stbgl_TestTextureEx (int w, char * scale_table, int checks_log2, int r1, int g1, int b1, int r2, int b2, int g2)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a6af2e2b97ca5f7d312c4d2d29fb8a95c"/>    <section>
    <title>stbgl_TexImage2D()</title>
<indexterm><primary>stbgl_TexImage2D</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_TexImage2D</secondary></indexterm>
<para><computeroutput>int stbgl_TexImage2D (int texid, int w, int h, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * data, char * props)</computeroutput></para>    </section><anchor xml:id="_stb__gl_8h_1a86859256ca4e08ed7f9387be24ad3c24"/>    <section>
    <title>stbgl_TexImage2D_Extra()</title>
<indexterm><primary>stbgl_TexImage2D_Extra</primary><secondary>stb_gl.h</secondary></indexterm>
<indexterm><primary>stb_gl.h</primary><secondary>stbgl_TexImage2D_Extra</secondary></indexterm>
<para><computeroutput>int stbgl_TexImage2D_Extra (int texid, int w, int h, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * data, int chan, char * props, int preserve_data)</computeroutput></para></section>
</section>
</section>
