<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_shader_8h">
<title>src/vally/renderer/shader.h File Reference</title>
<indexterm><primary>src/vally/renderer/shader.h</primary></indexterm>
<programlisting>#include &lt;cglm/cglm.h&gt;
#include &lt;cglm/struct.h&gt;
#include &lt;vally/config.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structshader">shader</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structshader">shader</link> <link linkend="_shader_8h_1ae1fba54dbd47f6e955d8bdd481a4d993">shader_create</link> (const char *vertex_path, const char *fragment_path)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1a4856e06bf8dadd9be92e52bd4cd24f92">shader_destroy</link> (<link linkend="_structshader">shader</link> *shdr)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link> (<link linkend="_structshader">shader</link> *shdr)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1a1f05473f92734ad6c83b05f4ada6c432">shader_deattach</link> (<link linkend="_structshader">shader</link> *shdr)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1ac5b30137b63c743b1f79172e5df3e985">shader_send_float</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_include_2vally_2config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1ad9c0aeb4311157463ccef1ca951311a1">shader_send_float_array</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_include_2vally_2config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link> <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, const <link linkend="_include_2vally_2config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> *<link linkend="_glext_8h_1a52f38e7d822a46377fde7a02708eedb1">array</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1ab1e5bbd2a944da7dacc48b02ba97597a">shader_send_vec2</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_unionvec2s">vec2s</link> vector)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1a64851a31e767f1962d56cf887600a73f">shader_send_vec3</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_unionvec3s">vec3s</link> vector)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1aa137db9dbc9ad1b12539585ffdb79783">shader_send_vec4</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> vector)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1a53bc342ddbdcc7fd125e3657fa5e967d">shader_send_int</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, int <link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1ac5fb5545ce898dd4882bc315bd8ef7f2">shader_send_int_array</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_include_2vally_2config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link> <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, const <link linkend="_include_2vally_2config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link> *<link linkend="_glext_8h_1a52f38e7d822a46377fde7a02708eedb1">array</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_shader_8h_1a4b48272a73624a09c1c8f990f8243ce5">shader_send_mat4</link> (<link linkend="_structshader">shader</link> *shdr, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, <link linkend="_unionmat4s">mat4s</link> <link linkend="_glext_8h_1a7b24a3f2f56eb1244ae69dacb4fecb6f">matrix</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_shader_8h_1a3ffc8ae5f949380bf9972469b1f4de21"/>    <section>
    <title>shader_attach()</title>
<indexterm><primary>shader_attach</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_attach</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_attach (<link linkend="_structshader">shader</link> * shdr)</computeroutput></para><para>
Definition at line 98 of file shader.c.</para>
<programlisting>98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
99 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!shdr-&gt;<link linkend="_structshader_1a751371b801adb08d919f7fc9a6cc31fb">attached</link>)&#32;{
100 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad8e40c882d63c4671dea2ca2dfcf3046">glUseProgram</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>);
101 &#32;&#32;&#32;&#32;shdr-&gt;<link linkend="_structshader_1a751371b801adb08d919f7fc9a6cc31fb">attached</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>;
102 &#32;&#32;}
103 }
</programlisting>    </section><anchor xml:id="_shader_8h_1ae1fba54dbd47f6e955d8bdd481a4d993"/>    <section>
    <title>shader_create()</title>
<indexterm><primary>shader_create</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_create</secondary></indexterm>
<para><computeroutput><link linkend="_structshader">shader</link> shader_create (const char * vertex_path, const char * fragment_path)</computeroutput></para><para>
Definition at line 69 of file shader.c.</para>
<programlisting>69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
70 &#32;&#32;<link linkend="_structshader">shader</link>&#32;shdr;
71 &#32;&#32;shdr.<link linkend="_structshader_1a751371b801adb08d919f7fc9a6cc31fb">attached</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>;
72 
73 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;vsource&#32;=&#32;<link linkend="_text__loader_8c_1a79f5a6a6ebfd1ad9a9d12ee92211ed5a">load_text_file</link>(vertex_path);
74 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;fsource&#32;=&#32;<link linkend="_text__loader_8c_1a79f5a6a6ebfd1ad9a9d12ee92211ed5a">load_text_file</link>(fragment_path);
75 
76 &#32;&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;vshader&#32;=&#32;compile_shader(vsource,&#32;<link linkend="_glad_8h_1aceb29bc16e885f956eb9e351a7dd6276">GL_VERTEX_SHADER</link>);
77 &#32;&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;fshader&#32;=&#32;compile_shader(fsource,&#32;<link linkend="_glad_8h_1a1a0294662b50921555cae95fb20740d4">GL_FRAGMENT_SHADER</link>);
78 
79 &#32;&#32;<link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link>&#32;linked;
80 &#32;&#32;shdr.<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>&#32;=&#32;<link linkend="_glad_8h_1acf9d728f2b2be42fbc2fe6dada8bcd2b">glCreateProgram</link>();
81 &#32;&#32;<link linkend="_glad_8h_1a0cb06d612b3358bfaadbbefd7c51f1cc">glAttachShader</link>(shdr.<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;vshader);
82 &#32;&#32;<link linkend="_glad_8h_1a0cb06d612b3358bfaadbbefd7c51f1cc">glAttachShader</link>(shdr.<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;fshader);
83 
84 &#32;&#32;<link linkend="_glad_8h_1ad241352c6eee6e79f09942ef0771db47">glLinkProgram</link>(shdr.<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>);
85 &#32;&#32;check_gl_errors();
86 &#32;&#32;<link linkend="_glad_8h_1a511181ed70d9d4cf7463a0ffe39f836d">glGetProgramiv</link>(shdr.<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ae644ef6b281c9378fa49d9b1ccefaf31">GL_LINK_STATUS</link>,&#32;&amp;linked);
87 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!linked)&#32;{
88 &#32;&#32;&#32;&#32;<link linkend="_logger_8h_1ae5066a2e77390ed60a2e2a98c374c520">VALLY_ERROR</link>(<emphasis role="stringliteral">&quot;Shader&#32;program&#32;linking&#32;failed!&quot;</emphasis>);
89 &#32;&#32;&#32;&#32;program_err_log(shdr.<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>);
90 &#32;&#32;}
91 
92 &#32;&#32;<link linkend="_glad_8h_1ac012d7614801ed69d643ad388dcfc768">glDeleteShader</link>(vshader);
93 &#32;&#32;<link linkend="_glad_8h_1ac012d7614801ed69d643ad388dcfc768">glDeleteShader</link>(fshader);
94 
95 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;shdr;
96 }
</programlisting>    </section><anchor xml:id="_shader_8h_1a1f05473f92734ad6c83b05f4ada6c432"/>    <section>
    <title>shader_deattach()</title>
<indexterm><primary>shader_deattach</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_deattach</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_deattach (<link linkend="_structshader">shader</link> * shdr)</computeroutput></para><para>
Definition at line 105 of file shader.c.</para>
<programlisting>105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
106 &#32;&#32;<link linkend="_glad_8h_1ad8e40c882d63c4671dea2ca2dfcf3046">glUseProgram</link>(0);
107 &#32;&#32;shdr-&gt;<link linkend="_structshader_1a751371b801adb08d919f7fc9a6cc31fb">attached</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>;
108 }
</programlisting>    </section><anchor xml:id="_shader_8h_1a4856e06bf8dadd9be92e52bd4cd24f92"/>    <section>
    <title>shader_destroy()</title>
<indexterm><primary>shader_destroy</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_destroy</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_destroy (<link linkend="_structshader">shader</link> * shdr)</computeroutput></para><para>
Definition at line 110 of file shader.c.</para>
<programlisting>110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
111 &#32;&#32;<link linkend="_glad_8h_1a94c0e17529ebff9ddffdf7715b2341cc">glDeleteProgram</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>);
112 }
</programlisting>    </section><anchor xml:id="_shader_8h_1ac5b30137b63c743b1f79172e5df3e985"/>    <section>
    <title>shader_send_float()</title>
<indexterm><primary>shader_send_float</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_float</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_float (<link linkend="_structshader">shader</link> * shdr, const char * name, <link linkend="_include_2vally_2config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> value)</computeroutput></para><para>
Definition at line 114 of file shader.c.</para>
<programlisting>114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
115 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
116 &#32;&#32;<link linkend="_glad_8h_1a213791d8094088fb4c40d265b7fe7694">glUniform1f</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
117 }
</programlisting>    </section><anchor xml:id="_shader_8h_1ad9c0aeb4311157463ccef1ca951311a1"/>    <section>
    <title>shader_send_float_array()</title>
<indexterm><primary>shader_send_float_array</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_float_array</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_float_array (<link linkend="_structshader">shader</link> * shdr, const char * name, <link linkend="_include_2vally_2config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link> count, const <link linkend="_include_2vally_2config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> * array)</computeroutput></para><para>
Definition at line 119 of file shader.c.</para>
<programlisting>119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
120 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
121 &#32;&#32;<link linkend="_glad_8h_1a7b834ab4b0d141e408001f708e1395ff">glUniform1fv</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>,&#32;<link linkend="_glext_8h_1a52f38e7d822a46377fde7a02708eedb1">array</link>);
122 }
</programlisting>    </section><anchor xml:id="_shader_8h_1a53bc342ddbdcc7fd125e3657fa5e967d"/>    <section>
    <title>shader_send_int()</title>
<indexterm><primary>shader_send_int</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_int</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_int (<link linkend="_structshader">shader</link> * shdr, const char * name, int value)</computeroutput></para><para>
Definition at line 139 of file shader.c.</para>
<programlisting>139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
140 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
141 &#32;&#32;<link linkend="_glad_8h_1abf9380e68d38f458f86a54870846026e">glUniform1i</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
142 }
</programlisting>    </section><anchor xml:id="_shader_8h_1ac5fb5545ce898dd4882bc315bd8ef7f2"/>    <section>
    <title>shader_send_int_array()</title>
<indexterm><primary>shader_send_int_array</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_int_array</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_int_array (<link linkend="_structshader">shader</link> * shdr, const char * name, <link linkend="_include_2vally_2config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link> count, const <link linkend="_include_2vally_2config_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec">i32</link> * array)</computeroutput></para><para>
Definition at line 144 of file shader.c.</para>
<programlisting>144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
145 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
146 &#32;&#32;<link linkend="_glad_8h_1a7c47f9ffec65859a57a432fb366b9d36">glUniform1iv</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>,&#32;<link linkend="_glext_8h_1a52f38e7d822a46377fde7a02708eedb1">array</link>);
147 }
</programlisting>    </section><anchor xml:id="_shader_8h_1a4b48272a73624a09c1c8f990f8243ce5"/>    <section>
    <title>shader_send_mat4()</title>
<indexterm><primary>shader_send_mat4</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_mat4</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_mat4 (<link linkend="_structshader">shader</link> * shdr, const char * name, <link linkend="_unionmat4s">mat4s</link> matrix)</computeroutput></para><para>
Definition at line 149 of file shader.c.</para>
<programlisting>149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
150 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
151 &#32;&#32;<link linkend="_glad_8h_1a1cd4c6b9e1fb6b4eb927ab0997de48ef">glUniformMatrix4fv</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;1,&#32;<link linkend="_glad_8h_1abca6d43f43fae31f49dcb883b2f301f6">GL_FALSE</link>,&#32;(<link linkend="_include_2vally_2config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link>*)<link linkend="_glext_8h_1a7b24a3f2f56eb1244ae69dacb4fecb6f">matrix</link>.raw);
152 }
</programlisting>    </section><anchor xml:id="_shader_8h_1ab1e5bbd2a944da7dacc48b02ba97597a"/>    <section>
    <title>shader_send_vec2()</title>
<indexterm><primary>shader_send_vec2</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_vec2</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_vec2 (<link linkend="_structshader">shader</link> * shdr, const char * name, <link linkend="_unionvec2s">vec2s</link> vector)</computeroutput></para><para>
Definition at line 124 of file shader.c.</para>
<programlisting>124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
125 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
126 &#32;&#32;<link linkend="_glad_8h_1a560652430f183407dbb3bec12eefed88">glUniform2f</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;vector.x,&#32;vector.y);
127 }
</programlisting>    </section><anchor xml:id="_shader_8h_1a64851a31e767f1962d56cf887600a73f"/>    <section>
    <title>shader_send_vec3()</title>
<indexterm><primary>shader_send_vec3</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_vec3</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_vec3 (<link linkend="_structshader">shader</link> * shdr, const char * name, <link linkend="_unionvec3s">vec3s</link> vector)</computeroutput></para><para>
Definition at line 129 of file shader.c.</para>
<programlisting>129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
130 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
131 &#32;&#32;<link linkend="_glad_8h_1ae24937a9308501abc9c9def17f4ad09f">glUniform3f</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;vector.x,&#32;vector.y,&#32;vector.z);
132 }
</programlisting>    </section><anchor xml:id="_shader_8h_1aa137db9dbc9ad1b12539585ffdb79783"/>    <section>
    <title>shader_send_vec4()</title>
<indexterm><primary>shader_send_vec4</primary><secondary>shader.h</secondary></indexterm>
<indexterm><primary>shader.h</primary><secondary>shader_send_vec4</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> shader_send_vec4 (<link linkend="_structshader">shader</link> * shdr, const char * name, <link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> vector)</computeroutput></para><para>
Definition at line 134 of file shader.c.</para>
<programlisting>134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
135 &#32;&#32;<link linkend="_shader_8c_1a3ffc8ae5f949380bf9972469b1f4de21">shader_attach</link>(shdr);
136 &#32;&#32;<link linkend="_glad_8h_1acc7199596adb761de242faa1abd134c2">glUniform4f</link>(<link linkend="_glad_8h_1a10106e4be90a66213839645cf12770f9">glGetUniformLocation</link>(shdr-&gt;<link linkend="_structshader_1a1e35b56847400058723c74f30b4bdec3">id</link>,&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>),&#32;vector.x,&#32;vector.y,&#32;vector.z,&#32;vector.w);
137 }
</programlisting></section>
</section>
</section>
