<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_2affine2d_8h">
<title>deps/cglm/include/cglm/struct/affine2d.h File Reference</title>
<indexterm><primary>deps/cglm/include/cglm/struct/affine2d.h</primary></indexterm>
<programlisting>#include &quot;../common.h&quot;
#include &quot;../types-struct.h&quot;
#include &quot;../affine2d.h&quot;
#include &quot;vec3.h&quot;
#include &quot;mat3.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1a869f2a3d3e177218057a6ab185eb4883">glms_translate2d</link> (<link linkend="_unionmat3s">mat3s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_unionvec2s">vec2s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>translate existing 2d transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1ac66364a1cbc3e8996329b6303fc5d49d">glms_translate2d_x</link> (<link linkend="_unionmat3s">mat3s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)</para>

<para>translate existing 2d transform matrix by x factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1ad56efb9f4a626b2dd1c4f686aca60595">glms_translate2d_y</link> (<link linkend="_unionmat3s">mat3s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>

<para>translate existing 2d transform matrix by y factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1a89b58761beb62ef80f4dbad738a87a86">glms_translate2d_make</link> (<link linkend="_unionvec2s">vec2s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW translate 2d transform matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1abf0ee2c72a8e3bc102e01af8caf3a953">glms_scale2d_make</link> (<link linkend="_unionvec2s">vec2s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW 2d scale matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1aea9324a3b61b856b154bccf802a77307">glms_scale2d</link> (<link linkend="_unionmat3s">mat3s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_unionvec2s">vec2s</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>scales existing 2d transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1a01bca95b9500cc61255147f4145b7233">glms_scale2d_uni</link> (<link linkend="_unionmat3s">mat3s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>applies uniform scale to existing 2d transform matrix v = [s, s, s] and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1a4c2394bfff6881350fd3f40ff0bfd4ea">glms_rotate2d_make</link> (float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>creates NEW 2d rotation matrix by angle and axis </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1aed232f395f9c3d1d2b07c1fae27d86f5">glms_rotate2d</link> (<link linkend="_unionmat3s">mat3s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>rotate existing 2d transform matrix around given axis by angle </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> <link linkend="_struct_2affine2d_8h_1a74eeefa5cdade499d47b6018f5639405">glms_rotate2d_to</link> (<link linkend="_unionmat3s">mat3s</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>rotate existing 2d transform matrix around given axis by angle </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_struct_2affine2d_8h_1aed232f395f9c3d1d2b07c1fae27d86f5"/>    <section>
    <title>glms_rotate2d()</title>
<indexterm><primary>glms_rotate2d</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_rotate2d</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_rotate2d (<link linkend="_unionmat3s">mat3s</link> m, float angle)</computeroutput></para><para>

<para>rotate existing 2d transform matrix around given axis by angle </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 158 of file affine2d.h.</para>
<programlisting>158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
159 &#32;&#32;<link linkend="_affine2d_8h_1acba834c9aea5662fea27a4d890cc12db">glm_rotate2d</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
160 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
161 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1a4c2394bfff6881350fd3f40ff0bfd4ea"/>    <section>
    <title>glms_rotate2d_make()</title>
<indexterm><primary>glms_rotate2d_make</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_rotate2d_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_rotate2d_make (float angle)</computeroutput></para><para>

<para>creates NEW 2d rotation matrix by angle and axis </para>
</para>

<para>axis will be normalized so you don&apos;t need to normalize it</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 143 of file affine2d.h.</para>
<programlisting>143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
144 &#32;&#32;<link linkend="_unionmat3s">mat3s</link>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
145 &#32;&#32;<link linkend="_affine2d_8h_1a2eda8f3d779c4d9a130148a4051fec95">glm_rotate2d_make</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
146 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
147 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1a74eeefa5cdade499d47b6018f5639405"/>    <section>
    <title>glms_rotate2d_to()</title>
<indexterm><primary>glms_rotate2d_to</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_rotate2d_to</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_rotate2d_to (<link linkend="_unionmat3s">mat3s</link> m, float angle)</computeroutput></para><para>

<para>rotate existing 2d transform matrix around given axis by angle </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 172 of file affine2d.h.</para>
<programlisting>172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
173 &#32;&#32;<link linkend="_affine2d_8h_1acba834c9aea5662fea27a4d890cc12db">glm_rotate2d</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
174 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
175 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1aea9324a3b61b856b154bccf802a77307"/>    <section>
    <title>glms_scale2d()</title>
<indexterm><primary>glms_scale2d</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_scale2d</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_scale2d (<link linkend="_unionmat3s">mat3s</link> m, <link linkend="_unionvec2s">vec2s</link> v)</computeroutput></para><para>

<para>scales existing 2d transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 112 of file affine2d.h.</para>
<programlisting>112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
113 &#32;&#32;<link linkend="_unionmat3s">mat3s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
114 &#32;&#32;<link linkend="_affine2d_8h_1ad332523a4152db113401a5363686708a">glm_scale2d_to</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
115 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
116 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1abf0ee2c72a8e3bc102e01af8caf3a953"/>    <section>
    <title>glms_scale2d_make()</title>
<indexterm><primary>glms_scale2d_make</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_scale2d_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_scale2d_make (<link linkend="_unionvec2s">vec2s</link> v)</computeroutput></para><para>

<para>creates NEW 2d scale matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 96 of file affine2d.h.</para>
<programlisting>96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
97 &#32;&#32;<link linkend="_unionmat3s">mat3s</link>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
98 &#32;&#32;<link linkend="_affine2d_8h_1ae86412ffdc4b094d1a55c58435856d63">glm_scale2d_make</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw);
99 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
100 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1a01bca95b9500cc61255147f4145b7233"/>    <section>
    <title>glms_scale2d_uni()</title>
<indexterm><primary>glms_scale2d_uni</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_scale2d_uni</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_scale2d_uni (<link linkend="_unionmat3s">mat3s</link> m, float s)</computeroutput></para><para>

<para>applies uniform scale to existing 2d transform matrix v = [s, s, s] and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>s</entry>
                                <entry>
<para>scale factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 128 of file affine2d.h.</para>
<programlisting>128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
129 &#32;&#32;<link linkend="_affine2d_8h_1a0b215786f19c6d5196c894a185510703">glm_scale2d_uni</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
130 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
131 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1a869f2a3d3e177218057a6ab185eb4883"/>    <section>
    <title>glms_translate2d()</title>
<indexterm><primary>glms_translate2d</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_translate2d</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_translate2d (<link linkend="_unionmat3s">mat3s</link> m, <link linkend="_unionvec2s">vec2s</link> v)</computeroutput></para><para>

<para>translate existing 2d transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 41 of file affine2d.h.</para>
<programlisting>41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
42 &#32;&#32;<link linkend="_affine2d_8h_1a32d460adf2b3f2ec35ae07d81ff0666d">glm_translate2d</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw);
43 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
44 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1a89b58761beb62ef80f4dbad738a87a86"/>    <section>
    <title>glms_translate2d_make()</title>
<indexterm><primary>glms_translate2d_make</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_translate2d_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_translate2d_make (<link linkend="_unionvec2s">vec2s</link> v)</computeroutput></para><para>

<para>creates NEW translate 2d transform matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 82 of file affine2d.h.</para>
<programlisting>82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
83 &#32;&#32;<link linkend="_unionmat3s">mat3s</link>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
84 &#32;&#32;<link linkend="_affine2d_8h_1a13433d4df56adf984e69d855fd0a2dc8">glm_translate2d_make</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>.raw);
85 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
86 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1ac66364a1cbc3e8996329b6303fc5d49d"/>    <section>
    <title>glms_translate2d_x()</title>
<indexterm><primary>glms_translate2d_x</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_translate2d_x</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_translate2d_x (<link linkend="_unionmat3s">mat3s</link> m, float x)</computeroutput></para><para>

<para>translate existing 2d transform matrix by x factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>x</entry>
                                <entry>
<para>x factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 55 of file affine2d.h.</para>
<programlisting>55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
56 &#32;&#32;<link linkend="_affine2d_8h_1aa91934e451a7f0fe6cda8b973a29ba47">glm_translate2d_x</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>);
57 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
58 }
</programlisting>    </section><anchor xml:id="_struct_2affine2d_8h_1ad56efb9f4a626b2dd1c4f686aca60595"/>    <section>
    <title>glms_translate2d_y()</title>
<indexterm><primary>glms_translate2d_y</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glms_translate2d_y</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_unionmat3s">mat3s</link> glms_translate2d_y (<link linkend="_unionmat3s">mat3s</link> m, float y)</computeroutput></para><para>

<para>translate existing 2d transform matrix by y factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>y</entry>
                                <entry>
<para>y factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>affine transfrom </para>
</formalpara>
</para>
<para>
Definition at line 69 of file affine2d.h.</para>
<programlisting>69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
70 &#32;&#32;<link linkend="_affine2d_8h_1a7cb7ae41126fd75943fce589a1923714">glm_translate2d_y</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>.raw,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
71 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>;
72 }
</programlisting></section>
</section>
</section>
