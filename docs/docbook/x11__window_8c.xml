<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_x11__window_8c">
<title>deps/glfw/src/x11_window.c File Reference</title>
<indexterm><primary>deps/glfw/src/x11_window.c</primary></indexterm>
<programlisting>#include &quot;internal.h&quot;
#include &lt;X11/cursorfont.h&gt;
#include &lt;X11/Xmd.h&gt;
#include &lt;sys/select.h&gt;
#include &lt;string.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;limits.h&gt;
#include &lt;errno.h&gt;
#include &lt;assert.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_x11__window_8c_1a50026537f9f2afdb4a6a4f3bc5dad6d3">_NET_WM_STATE_REMOVE</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_x11__window_8c_1af01584d4487719bb38125d1c5176a823">_NET_WM_STATE_ADD</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_x11__window_8c_1a3e923d9844fde85f4a21c204f1f8dbd2">_NET_WM_STATE_TOGGLE</link>   2</para>
</listitem>
            <listitem><para>#define <link linkend="_x11__window_8c_1a1fad41e78c84841bc34cb2e879e60d24">Button6</link>   6</para>
</listitem>
            <listitem><para>#define <link linkend="_x11__window_8c_1a39b108c37f079bf4af87358610cba2df">Button7</link>   7</para>
</listitem>
            <listitem><para>#define <link linkend="_x11__window_8c_1a4c02be70f29ad4f25e366445fdd2073b">MWM_HINTS_DECORATIONS</link>   2</para>
</listitem>
            <listitem><para>#define <link linkend="_x11__window_8c_1a0c7ca3643c00dd82aaf2bbe93007397b">MWM_DECOR_ALL</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_x11__window_8c_1a10d1d90eb01f02fc76f0432c2ef9b92e">_GLFW_XDND_VERSION</link>   5</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>unsigned long <link linkend="_x11__window_8c_1a889b3172437e770a55812b569e1a93bd">_glfwGetWindowPropertyX11</link> (Window <link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, Atom property, Atom <link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>, unsigned char **<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_x11__window_8c_1aaed792df59dc2eff6382d4a6f9c54c67">_glfwIsVisualTransparentX11</link> (Visual *visual)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ae8c308d237bfd06661aa590bfa582579">_glfwPushSelectionToManagerX11</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ad6fa9e489da4e37030b99b6bdb785887">_glfwCreateInputContextX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1a244c4a37df8b1b687d5ae857e4c1beef">_glfwCreateWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> *wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> *ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> *fbconfig)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a1ad585e31a0ef366b7faa9e9068dcbce">_glfwDestroyWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a4badec7bf08e7474f6e81b7f1de3b46e">_glfwSetWindowTitleX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const char *title)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a5fe463737d807a0ef2a4571dce6544df">_glfwSetWindowIconX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *images)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a5e78c3b99df8aa358ce12fa8b9a45cb0">_glfwGetWindowPosX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *xpos, int *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ad800e4257745e15b95c892d3d0c3ed3c">_glfwSetWindowPosX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int xpos, int ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a125270daf8648431cface131ee9f4530">_glfwGetWindowSizeX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1af651ee2787bb80d68e410aa6d59d8f2c">_glfwSetWindowSizeX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a23924c95f1a773326d0243fbb1cf6e2f">_glfwSetWindowSizeLimitsX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int minwidth, int minheight, int maxwidth, int maxheight)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a8bbf618c5d675c3e0f1afb5da49f889a">_glfwSetWindowAspectRatioX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int numer, int denom)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ab5994ee1430e37d2d12abec71e86a71e">_glfwGetFramebufferSizeX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a1532ddd05367af8b6cd22cacc00a502b">_glfwGetWindowFrameSizeX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int *<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>, int *<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>, int *<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>, int *<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ab9d780d530a93b66f16358e49450b0e4">_glfwGetWindowContentScaleX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float *xscale, float *yscale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a8eb859342ad26e24f158b62bb4f4f936">_glfwIconifyWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ac2c7e634ddda62be7b0d169efdfc73b3">_glfwRestoreWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1aea91b608141af2d2213a1162d556941b">_glfwMaximizeWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a34bb415958ed3a377cc99442778f058c">_glfwShowWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1af5b7dcae618ec977adacc5a69ae52cb8">_glfwHideWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a71e07f021148c43f1ab19e27a2b2fa26">_glfwRequestWindowAttentionX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a78e4ccda400f292ca03d17f18c57f017">_glfwFocusWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ac885a06af26a8a12987388bdaf3e6b04">_glfwSetWindowMonitorX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> *monitor, int xpos, int ypos, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int refreshRate)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1aafe5a5b783aefa0de1db8052e672b43d">_glfwWindowFocusedX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1a4eb265fb72bcf2b67814da8a4ef20820">_glfwWindowIconifiedX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1ac14bf368e5e4f92682c9c7d9f9d1e545">_glfwWindowMaximizedX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1ab32c0aad046a078667051c3606f18c1f">_glfwWindowHoveredX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1ad3e15b02bff6b2be3671eb2991cd308a">_glfwFramebufferTransparentX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ab948125b6e8c83729aea56ae257ba77d">_glfwSetWindowResizableX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a01326101632e59be2b39ec9f849c0312">_glfwSetWindowDecoratedX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a8ac65a4deb7f1671e1fa29c95b4a5a5e">_glfwSetWindowFloatingX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a93716010a05a7c04a315a3be96392ed4">_glfwSetWindowMousePassthroughX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_x11__window_8c_1aeb4f6250bd184fcf5e2c8a9225c249de">_glfwGetWindowOpacityX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a13fe2eeb468f7373d3d8b9a5a41e8f1d">_glfwSetWindowOpacityX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, float opacity)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a7ec18d1c290a44b2e90029de5ff81411">_glfwSetRawMouseMotionX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_x11__window_8c_1a9dad95a9049f27c06185d2842eba73cb">_glfwRawMouseMotionSupportedX11</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1ad84c2d4d3e0f5648751c195d4c61b234">_glfwPollEventsX11</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a7c877f83811e16fcbfd53642378545bf">_glfwWaitEventsX11</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1aa44a5f074685d0bda9da5970249faf14">_glfwWaitEventsTimeoutX11</link> (double <link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1adee7c4a9ea01e36a33f28a88ce8df7fd">_glfwPostEmptyEventX11</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a76bad938f2429ee94e235804f076e513">_glfwGetCursorPosX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double *xpos, double *ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a0676ad8935d93381b98e7eb202945d40">_glfwSetCursorPosX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, double <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a41ea58eb9244ae51a118e9682738fb89">_glfwSetCursorModeX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_x11__window_8c_1a0c238ff46e589c64bc559b6544cbecc4">_glfwGetScancodeNameX11</link> (int scancode)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1a71aa37ee9b9f941fe92fdc560f00de85">_glfwGetKeyScancodeX11</link> (int <link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1a7704488730c8804020004f906cd09480">_glfwCreateCursorX11</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> *<link linkend="_structimage">image</link>, int xhot, int yhot)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1a8b0d2401ae65692af43d78c23dd9665f">_glfwCreateStandardCursorX11</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor, int shape)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a8885807132ee184cff656f6513b8112b">_glfwDestroyCursorX11</link> (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a3a9f7225c28fa00129c29d0c83a1bac1">_glfwSetCursorX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> *cursor)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1adc8f2633b397a7d7b13815151b22c462">_glfwSetClipboardStringX11</link> (const char *<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>)</para>
</listitem>
            <listitem><para>const char * <link linkend="_x11__window_8c_1af4300a11f34d05c873e7ae8a385e390c">_glfwGetClipboardStringX11</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> <link linkend="_x11__window_8c_1afc8902c6b24144f224d74adcedc70795">_glfwGetEGLPlatformX11</link> (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> **<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> <link linkend="_x11__window_8c_1a640483a58923eee966e251ee0bfacf17">_glfwGetEGLNativeDisplayX11</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> <link linkend="_x11__window_8c_1a1af8e2c05e54c61da0ff943b413e1c03">_glfwGetEGLNativeWindowX11</link> (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1aa4d2ee2c633bdbdce0150cc1d3647040">_glfwGetRequiredInstanceExtensionsX11</link> (char **extensions)</para>
</listitem>
            <listitem><para>int <link linkend="_x11__window_8c_1ae58a75d52f865baec6e773cd70847d05">_glfwGetPhysicalDevicePresentationSupportX11</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</para>
</listitem>
            <listitem><para><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> <link linkend="_x11__window_8c_1a2990030f2d239a43e2b59b4498873233">_glfwCreateWindowSurfaceX11</link> (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> *allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> *surface)</para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> Display * <link linkend="_x11__window_8c_1aea26dc4fa7dec0233c7629697a13af32">glfwGetX11Display</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> Window <link linkend="_x11__window_8c_1a9473ab58f12e7b0a27ba405b7802adb9">glfwGetX11Window</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *handle)</para>
</listitem>
            <listitem><para><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_x11__window_8c_1a4f4eb55968415e78955d5a6104b6596c">glfwSetX11SelectionString</link> (const char *<link linkend="_glad_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b">string</link>)</para>
</listitem>
            <listitem><para>const <link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> char * <link linkend="_x11__window_8c_1a645e6fa1dfc30daf5e5f57b5b7dd5973">glfwGetX11SelectionString</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_x11__window_8c_1a10d1d90eb01f02fc76f0432c2ef9b92e"/>    <section>
    <title>_GLFW_XDND_VERSION</title>
<indexterm><primary>_GLFW_XDND_VERSION</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_GLFW_XDND_VERSION</secondary></indexterm>
<para><computeroutput>#define _GLFW_XDND_VERSION   5</computeroutput></para><para>
Definition at line 57 of file x11_window.c.</para>
    </section><anchor xml:id="_x11__window_8c_1af01584d4487719bb38125d1c5176a823"/>    <section>
    <title>_NET_WM_STATE_ADD</title>
<indexterm><primary>_NET_WM_STATE_ADD</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_NET_WM_STATE_ADD</secondary></indexterm>
<para><computeroutput>#define _NET_WM_STATE_ADD   1</computeroutput></para><para>
Definition at line 46 of file x11_window.c.</para>
    </section><anchor xml:id="_x11__window_8c_1a50026537f9f2afdb4a6a4f3bc5dad6d3"/>    <section>
    <title>_NET_WM_STATE_REMOVE</title>
<indexterm><primary>_NET_WM_STATE_REMOVE</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_NET_WM_STATE_REMOVE</secondary></indexterm>
<para><computeroutput>#define _NET_WM_STATE_REMOVE   0</computeroutput></para><para>
Definition at line 45 of file x11_window.c.</para>
    </section><anchor xml:id="_x11__window_8c_1a3e923d9844fde85f4a21c204f1f8dbd2"/>    <section>
    <title>_NET_WM_STATE_TOGGLE</title>
<indexterm><primary>_NET_WM_STATE_TOGGLE</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_NET_WM_STATE_TOGGLE</secondary></indexterm>
<para><computeroutput>#define _NET_WM_STATE_TOGGLE   2</computeroutput></para><para>
Definition at line 47 of file x11_window.c.</para>
    </section><anchor xml:id="_x11__window_8c_1a1fad41e78c84841bc34cb2e879e60d24"/>    <section>
    <title>Button6</title>
<indexterm><primary>Button6</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>Button6</secondary></indexterm>
<para><computeroutput>#define Button6   6</computeroutput></para><para>
Definition at line 50 of file x11_window.c.</para>
    </section><anchor xml:id="_x11__window_8c_1a39b108c37f079bf4af87358610cba2df"/>    <section>
    <title>Button7</title>
<indexterm><primary>Button7</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>Button7</secondary></indexterm>
<para><computeroutput>#define Button7   7</computeroutput></para><para>
Definition at line 51 of file x11_window.c.</para>
    </section><anchor xml:id="_x11__window_8c_1a0c7ca3643c00dd82aaf2bbe93007397b"/>    <section>
    <title>MWM_DECOR_ALL</title>
<indexterm><primary>MWM_DECOR_ALL</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>MWM_DECOR_ALL</secondary></indexterm>
<para><computeroutput>#define MWM_DECOR_ALL   1</computeroutput></para><para>
Definition at line 55 of file x11_window.c.</para>
    </section><anchor xml:id="_x11__window_8c_1a4c02be70f29ad4f25e366445fdd2073b"/>    <section>
    <title>MWM_HINTS_DECORATIONS</title>
<indexterm><primary>MWM_HINTS_DECORATIONS</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>MWM_HINTS_DECORATIONS</secondary></indexterm>
<para><computeroutput>#define MWM_HINTS_DECORATIONS   2</computeroutput></para><para>
Definition at line 54 of file x11_window.c.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_x11__window_8c_1a7704488730c8804020004f906cd09480"/>    <section>
    <title>_glfwCreateCursorX11()</title>
<indexterm><primary>_glfwCreateCursorX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwCreateCursorX11</secondary></indexterm>
<para><computeroutput>int _glfwCreateCursorX11 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * image, int xhot, int yhot)</computeroutput></para><para>
Definition at line 2888 of file x11_window.c.</para>
<programlisting>2891 {
2892 &#32;&#32;&#32;&#32;cursor-&gt;x11.handle&#32;=&#32;<link linkend="_x11__init_8c_1a81db925a94ffe794ab77424802434780">_glfwCreateNativeCursorX11</link>(<link linkend="_structimage">image</link>,&#32;xhot,&#32;yhot);
2893 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;x11.handle)
2894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2895 
2896 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
2897 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ad6fa9e489da4e37030b99b6bdb785887"/>    <section>
    <title>_glfwCreateInputContextX11()</title>
<indexterm><primary>_glfwCreateInputContextX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwCreateInputContextX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwCreateInputContextX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 1903 of file x11_window.c.</para>
<programlisting>1904 {
1905 &#32;&#32;&#32;&#32;XIMCallback&#32;callback;
1906 &#32;&#32;&#32;&#32;callback.callback&#32;=&#32;(XIMProc)&#32;inputContextDestroyCallback;
1907 &#32;&#32;&#32;&#32;callback.client_data&#32;=&#32;(XPointer)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>;
1908 
1909 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.ic&#32;=&#32;<link linkend="_x11__platform_8h_1a891f8379cad862260813b6e2414c0323">XCreateIC</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.im,
1910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XNInputStyle,
1911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XIMPreeditNothing&#32;|&#32;XIMStatusNothing,
1912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XNClientWindow,
1913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
1914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XNFocusWindow,
1915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
1916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XNDestroyCallback,
1917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;callback,
1918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1919 
1920 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.ic)
1921 &#32;&#32;&#32;&#32;{
1922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XWindowAttributes&#32;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>;
1923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a91d1286ff9603a6a3e1eada719b67c01">XGetWindowAttributes</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;&amp;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>);
1924 
1925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_glad_8h_1ab3664546554b8fc4b0b5a1a981ad97ec">filter</link>&#32;=&#32;0;
1926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__platform_8h_1a7ad5cb08f7e0145d6ccec37ffca64ecb">XGetICValues</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.ic,&#32;XNFilterEvents,&#32;&amp;<link linkend="_glad_8h_1ab3664546554b8fc4b0b5a1a981ad97ec">filter</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;==&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
1927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ad4f105bd87248c6b4591b81bf16c2152">XSelectInput</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
1929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
1930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>.your_event_mask&#32;|&#32;<link linkend="_glad_8h_1ab3664546554b8fc4b0b5a1a981ad97ec">filter</link>);
1931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1932 &#32;&#32;&#32;&#32;}
1933 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a8b0d2401ae65692af43d78c23dd9665f"/>    <section>
    <title>_glfwCreateStandardCursorX11()</title>
<indexterm><primary>_glfwCreateStandardCursorX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwCreateStandardCursorX11</secondary></indexterm>
<para><computeroutput>int _glfwCreateStandardCursorX11 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor, int shape)</computeroutput></para><para>
Definition at line 2899 of file x11_window.c.</para>
<programlisting>2900 {
2901 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xcursor.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
2902 &#32;&#32;&#32;&#32;{
2903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;theme&#32;=&#32;<link linkend="_x11__platform_8h_1aacaad4ec0737c6c3347b4a468978045e">XcursorGetTheme</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(theme)
2905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;=&#32;<link linkend="_x11__platform_8h_1ad3c229284855910dc550eebc5b0168e5">XcursorGetDefaultSize</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2908 
2909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(shape)
2910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a">GLFW_ARROW_CURSOR</link>:
2912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;default&quot;</emphasis>;
2913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga36185f4375eaada1b04e431244774c86">GLFW_IBEAM_CURSOR</link>:
2915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;text&quot;</emphasis>;
2916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22">GLFW_CROSSHAIR_CURSOR</link>:
2918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;crosshair&quot;</emphasis>;
2919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0">GLFW_POINTING_HAND_CURSOR</link>:
2921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;pointer&quot;</emphasis>;
2922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad">GLFW_RESIZE_EW_CURSOR</link>:
2924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;ew-resize&quot;</emphasis>;
2925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388">GLFW_RESIZE_NS_CURSOR</link>:
2927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;ns-resize&quot;</emphasis>;
2928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gadf2c0a495ec9cef4e1a364cc99aa78da">GLFW_RESIZE_NWSE_CURSOR</link>:
2930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;nwse-resize&quot;</emphasis>;
2931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gab06bba3b407f92807ba9b48de667a323">GLFW_RESIZE_NESW_CURSOR</link>:
2933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;nesw-resize&quot;</emphasis>;
2934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d">GLFW_RESIZE_ALL_CURSOR</link>:
2936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;all-scroll&quot;</emphasis>;
2937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga297c503095b034bc8891393b637844b1">GLFW_NOT_ALLOWED_CURSOR</link>:
2939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;not-allowed&quot;</emphasis>;
2940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2942 
2943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XcursorImage*&#32;<link linkend="_structimage">image</link>&#32;=&#32;<link linkend="_x11__platform_8h_1a84dcb46e5afaefb7f34e1f871436e1ea">XcursorLibraryLoadImage</link>(<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>,&#32;theme,&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);
2944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_structimage">image</link>)
2945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;x11.handle&#32;=&#32;<link linkend="_x11__platform_8h_1aa0d505683108c876545279c1c299428e">XcursorImageLoadCursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_structimage">image</link>);
2947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a97ae67418232354dc0593f7523bbe110">XcursorImageDestroy</link>(<link linkend="_structimage">image</link>);
2948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2950 &#32;&#32;&#32;&#32;}
2951 
2952 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;x11.handle)
2953 &#32;&#32;&#32;&#32;{
2954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;native&#32;=&#32;0;
2955 
2956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(shape)
2957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8ab0e717245b85506cb0eaefdea39d0a">GLFW_ARROW_CURSOR</link>:
2959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;native&#32;=&#32;XC_left_ptr;
2960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga36185f4375eaada1b04e431244774c86">GLFW_IBEAM_CURSOR</link>:
2962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;native&#32;=&#32;XC_xterm;
2963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga8af88c0ea05ab9e8f9ac1530e8873c22">GLFW_CROSSHAIR_CURSOR</link>:
2965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;native&#32;=&#32;XC_crosshair;
2966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaad01a50929fb515bf27e4462c51f6ed0">GLFW_POINTING_HAND_CURSOR</link>:
2968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;native&#32;=&#32;XC_hand2;
2969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga2010a43dc1050a7c9154148a63cf01ad">GLFW_RESIZE_EW_CURSOR</link>:
2971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;native&#32;=&#32;XC_sb_h_double_arrow;
2972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1gaa59214e8cdc8c8adf08fdf125ed68388">GLFW_RESIZE_NS_CURSOR</link>:
2974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;native&#32;=&#32;XC_sb_v_double_arrow;
2975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__shapes_1ga3a5f4811155f95ccafbbb4c9a899fc1d">GLFW_RESIZE_ALL_CURSOR</link>:
2977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;native&#32;=&#32;XC_fleur;
2978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
2980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga09d6943923a70ddef3a085f5baee786c">GLFW_CURSOR_UNAVAILABLE</link>,
2981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Standard&#32;cursor&#32;shape&#32;unavailable&quot;</emphasis>);
2982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2984 
2985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor-&gt;x11.handle&#32;=&#32;<link linkend="_x11__platform_8h_1a0d8da01888a43515a581cffc90bae59d">XCreateFontCursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;native);
2986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!cursor-&gt;x11.handle)
2987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Failed&#32;to&#32;create&#32;standard&#32;cursor&quot;</emphasis>);
2990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2992 &#32;&#32;&#32;&#32;}
2993 
2994 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
2995 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a2990030f2d239a43e2b59b4498873233"/>    <section>
    <title>_glfwCreateWindowSurfaceX11()</title>
<indexterm><primary>_glfwCreateWindowSurfaceX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwCreateWindowSurfaceX11</secondary></indexterm>
<para><computeroutput><link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link> _glfwCreateWindowSurfaceX11 (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct_vk_allocation_callbacks">VkAllocationCallbacks</link> * allocator, <link linkend="_internal_8h_1a09787d7da5f3146095ed80ceccc2d794">VkSurfaceKHR</link> * surface)</computeroutput></para><para>
Definition at line 3159 of file x11_window.c.</para>
<programlisting>3163 {
3164 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a00ca91ba261300d506226ffb7db40762">KHR_xcb_surface</link>&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.x11xcb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
3165 &#32;&#32;&#32;&#32;{
3166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>&#32;err;
3167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_xcb_surface_create_info_k_h_r">VkXcbSurfaceCreateInfoKHR</link>&#32;sci;
3168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a096006a8090415c298343e76e7f4783a">PFN_vkCreateXcbSurfaceKHR</link>&#32;vkCreateXcbSurfaceKHR;
3169 
3170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a8af532123ce5fb1c75ded03a0d77691f">xcb_connection_t</link>*&#32;connection&#32;=&#32;<link linkend="_x11__platform_8h_1a214538b0cf5427b71316bb9d3c221a22">XGetXCBConnection</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
3171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!connection)
3172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
3174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Failed&#32;to&#32;retrieve&#32;XCB&#32;connection&quot;</emphasis>);
3175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
3176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3177 
3178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkCreateXcbSurfaceKHR&#32;=&#32;(<link linkend="_x11__platform_8h_1a096006a8090415c298343e76e7f4783a">PFN_vkCreateXcbSurfaceKHR</link>)
3179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkCreateXcbSurfaceKHR&quot;</emphasis>);
3180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkCreateXcbSurfaceKHR)
3181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
3183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_xcb_surface&#32;extension&quot;</emphasis>);
3184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
3185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3186 
3187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(&amp;sci,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(sci));
3188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_xcb_surface_create_info_k_h_r_1a5c9a823be63cf4cbf7def3effe50dde7">sType</link>&#32;=&#32;<link linkend="_internal_8h_1aff9f2b99398eb80a2b5a146bc5534ce8a9225448b2083f88d24d9786cdeb2ee56">VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR</link>;
3189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_xcb_surface_create_info_k_h_r_1ae6ddcad90726fafe890f466f887e5749">connection</link>&#32;=&#32;connection;
3190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_xcb_surface_create_info_k_h_r_1a0e60aca7a0cba6946076b0e6322e78aa">window</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle;
3191 
3192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;vkCreateXcbSurfaceKHR(instance,&#32;&amp;sci,&#32;allocator,&#32;surface);
3193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err)
3194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
3196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Failed&#32;to&#32;create&#32;Vulkan&#32;XCB&#32;surface:&#32;%s&quot;</emphasis>,
3197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a512b47c0edcaaf41a4f70bfc8d4d78a7">_glfwGetVulkanResultString</link>(err));
3198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3199 
3200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
3201 &#32;&#32;&#32;&#32;}
3202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3203 &#32;&#32;&#32;&#32;{
3204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45">VkResult</link>&#32;err;
3205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_vk_xlib_surface_create_info_k_h_r">VkXlibSurfaceCreateInfoKHR</link>&#32;sci;
3206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac2df2d76a16c25b6744c7ca4028c1de7">PFN_vkCreateXlibSurfaceKHR</link>&#32;vkCreateXlibSurfaceKHR;
3207 
3208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkCreateXlibSurfaceKHR&#32;=&#32;(<link linkend="_x11__platform_8h_1ac2df2d76a16c25b6744c7ca4028c1de7">PFN_vkCreateXlibSurfaceKHR</link>)
3209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkCreateXlibSurfaceKHR&quot;</emphasis>);
3210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkCreateXlibSurfaceKHR)
3211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
3213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_xlib_surface&#32;extension&quot;</emphasis>);
3214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_vulkan_8h_1abe3614d1bd40772bc2398a4a86ea4a45a20b80caadaa3175652a04f2658f84b3e">VK_ERROR_EXTENSION_NOT_PRESENT</link>;
3215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3216 
3217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(&amp;sci,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(sci));
3218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_xlib_surface_create_info_k_h_r_1a91e255ca484179ffee524dac66fe87cc">sType</link>&#32;=&#32;<link linkend="_internal_8h_1aff9f2b99398eb80a2b5a146bc5534ce8a76ce305fba80e9ddacf2e9d31d53fd23">VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR</link>;
3219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_xlib_surface_create_info_k_h_r_1a7bf07addcee007a51c706d7b377d5555">dpy</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>;
3220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sci.<link linkend="_struct_vk_xlib_surface_create_info_k_h_r_1acac91401967e6d3b7dcc29d61447f616">window</link>&#32;=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle;
3221 
3222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;vkCreateXlibSurfaceKHR(instance,&#32;&amp;sci,&#32;allocator,&#32;surface);
3223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err)
3224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
3226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Failed&#32;to&#32;create&#32;Vulkan&#32;X11&#32;surface:&#32;%s&quot;</emphasis>,
3227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a512b47c0edcaaf41a4f70bfc8d4d78a7">_glfwGetVulkanResultString</link>(err));
3228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3229 
3230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
3231 &#32;&#32;&#32;&#32;}
3232 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a244c4a37df8b1b687d5ae857e4c1beef"/>    <section>
    <title>_glfwCreateWindowX11()</title>
<indexterm><primary>_glfwCreateWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwCreateWindowX11</secondary></indexterm>
<para><computeroutput>int _glfwCreateWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const <link linkend="_struct___g_l_f_wwndconfig">_GLFWwndconfig</link> * wndconfig, const <link linkend="_struct___g_l_f_wctxconfig">_GLFWctxconfig</link> * ctxconfig, const <link linkend="_struct___g_l_f_wfbconfig">_GLFWfbconfig</link> * fbconfig)</computeroutput></para><para>
Definition at line 1940 of file x11_window.c.</para>
<programlisting>1944 {
1945 &#32;&#32;&#32;&#32;Visual*&#32;visual&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
1946 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a1c814629538debe12a7bfe2509a3671e">depth</link>;
1947 
1948 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;!=&#32;<link linkend="_glfw3_8h_1a8f6dcdc968d214ff14779564f1389264">GLFW_NO_API</link>)
1949 &#32;&#32;&#32;&#32;{
1950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a0494c9bfd3f584ab41e6dbeeaa0e6a19">GLFW_NATIVE_CONTEXT_API</link>)
1951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glx__context_8c_1aa09f3a63c501002a611c7bf6953207fa">_glfwInitGLX</link>())
1953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glx__context_8c_1a376899b42c1584c2ff98b70b12fae801">_glfwChooseVisualGLX</link>(wndconfig,&#32;ctxconfig,&#32;fbconfig,&#32;&amp;visual,&#32;&amp;<link linkend="_glad_8h_1a1c814629538debe12a7bfe2509a3671e">depth</link>))
1955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a03cf65c9ab01fc8b872ba58842c531c9">GLFW_EGL_CONTEXT_API</link>)
1958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1ad83def5c7af30c3bfcc9371712ba96ac">_glfwInitEGL</link>())
1960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_glfwChooseVisualEGL(wndconfig,&#32;ctxconfig,&#32;fbconfig,&#32;&amp;visual,&#32;&amp;<link linkend="_glad_8h_1a1c814629538debe12a7bfe2509a3671e">depth</link>))
1962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1afd34a473af9fa81f317910ea371b19e3">GLFW_OSMESA_CONTEXT_API</link>)
1965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a9dd1594b1f8991f90844fbeb4a664163">_glfwInitOSMesa</link>())
1967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1969 &#32;&#32;&#32;&#32;}
1970 
1971 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!visual)
1972 &#32;&#32;&#32;&#32;{
1973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visual&#32;=&#32;DefaultVisual(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.screen);
1974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1c814629538debe12a7bfe2509a3671e">depth</link>&#32;=&#32;DefaultDepth(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.screen);
1975 &#32;&#32;&#32;&#32;}
1976 
1977 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!createNativeWindow(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;wndconfig,&#32;visual,&#32;<link linkend="_glad_8h_1a1c814629538debe12a7bfe2509a3671e">depth</link>))
1978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1979 
1980 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a9d54584dc156b04e39d7567a70e13ef8">client</link>&#32;!=&#32;<link linkend="_glfw3_8h_1a8f6dcdc968d214ff14779564f1389264">GLFW_NO_API</link>)
1981 &#32;&#32;&#32;&#32;{
1982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a0494c9bfd3f584ab41e6dbeeaa0e6a19">GLFW_NATIVE_CONTEXT_API</link>)
1983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glx__context_8c_1a1b7c2735d64353ce30240c27c15a149a">_glfwCreateContextGLX</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
1985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1a03cf65c9ab01fc8b872ba58842c531c9">GLFW_EGL_CONTEXT_API</link>)
1988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_egl__context_8c_1adfb1d7aa925810c45a2ef4efc268c2fe">_glfwCreateContextEGL</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
1990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ctxconfig-&gt;<link linkend="_struct___g_l_f_wctxconfig_1a725120317549aa1eef2b88af5ac4c409">source</link>&#32;==&#32;<link linkend="_glfw3_8h_1afd34a473af9fa81f317910ea371b19e3">GLFW_OSMESA_CONTEXT_API</link>)
1993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_internal_8h_1a59950232b3b545e1fa750f6bd7d46201">_glfwCreateContextOSMesa</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;ctxconfig,&#32;fbconfig))
1995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1997 &#32;&#32;&#32;&#32;}
1998 
1999 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
2000 &#32;&#32;&#32;&#32;{
2001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a34bb415958ed3a377cc99442778f058c">_glfwShowWindowX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateWindowMode(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2004 &#32;&#32;&#32;&#32;}
2005 
2006 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
2008 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a8885807132ee184cff656f6513b8112b"/>    <section>
    <title>_glfwDestroyCursorX11()</title>
<indexterm><primary>_glfwDestroyCursorX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwDestroyCursorX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyCursorX11 (<link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 2997 of file x11_window.c.</para>
<programlisting>2998 {
2999 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor-&gt;x11.handle)
3000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a2f8b4428e4167196f99c6c30031a7c45">XFreeCursor</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;cursor-&gt;x11.handle);
3001 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a1ad585e31a0ef366b7faa9e9068dcbce"/>    <section>
    <title>_glfwDestroyWindowX11()</title>
<indexterm><primary>_glfwDestroyWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwDestroyWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwDestroyWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2010 of file x11_window.c.</para>
<programlisting>2011 {
2012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.disabledCursorWindow&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.disabledCursorWindow&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2014 
2015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
2016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releaseMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2017 
2018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.ic)
2019 &#32;&#32;&#32;&#32;{
2020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae2b0a20517e992c28c23f8ac9668a10f">XDestroyIC</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.ic);
2021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.ic&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2022 &#32;&#32;&#32;&#32;}
2023 
2024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy)
2025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;context.destroy(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2026 
2027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle)
2028 &#32;&#32;&#32;&#32;{
2029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a6789234ec57b48141168fef5ba838f41">XDeleteContext</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a681e7c0153724884070e9c94069693fb">context</link>);
2030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac63d7ec66d7bec93f72b1e77a7c066c3">XUnmapWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle);
2031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a8ede0965d44919da97dc465113a8e318">XDestroyWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle);
2032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle&#32;=&#32;(Window)&#32;0;
2033 &#32;&#32;&#32;&#32;}
2034 
2035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.colormap)
2036 &#32;&#32;&#32;&#32;{
2037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a5dad1cab183ba1e38d56f1703aed3b07">XFreeColormap</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.colormap);
2038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.colormap&#32;=&#32;(Colormap)&#32;0;
2039 &#32;&#32;&#32;&#32;}
2040 
2041 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2042 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a78e4ccda400f292ca03d17f18c57f017"/>    <section>
    <title>_glfwFocusWindowX11()</title>
<indexterm><primary>_glfwFocusWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwFocusWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwFocusWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2418 of file x11_window.c.</para>
<programlisting>2419 {
2420 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_ACTIVE_WINDOW)
2421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendEventToWM(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_ACTIVE_WINDOW,&#32;1,&#32;0,&#32;0,&#32;0,&#32;0);
2422 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2423 &#32;&#32;&#32;&#32;{
2424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a368ec485cee0a38bf81acc4a99ff72c4">XRaiseWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle);
2425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1acdb03bec85396e457152f26235ba0a1f">XSetInputFocus</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RevertToParent,&#32;CurrentTime);
2427 &#32;&#32;&#32;&#32;}
2428 
2429 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2430 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ad3e15b02bff6b2be3671eb2991cd308a"/>    <section>
    <title>_glfwFramebufferTransparentX11()</title>
<indexterm><primary>_glfwFramebufferTransparentX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwFramebufferTransparentX11</secondary></indexterm>
<para><computeroutput>int _glfwFramebufferTransparentX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2572 of file x11_window.c.</para>
<programlisting>2573 {
2574 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.transparent)
2575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2576 
2577 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_x11__platform_8h_1ab468f859fad6bccf9742764ff42ec311">XGetSelectionOwner</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_CM_Sx)&#32;!=&#32;None;
2578 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1af4300a11f34d05c873e7ae8a385e390c"/>    <section>
    <title>_glfwGetClipboardStringX11()</title>
<indexterm><primary>_glfwGetClipboardStringX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetClipboardStringX11</secondary></indexterm>
<para><computeroutput>const char* _glfwGetClipboardStringX11 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 3031 of file x11_window.c.</para>
<programlisting>3032 {
3033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSelectionString(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.CLIPBOARD);
3034 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a76bad938f2429ee94e235804f076e513"/>    <section>
    <title>_glfwGetCursorPosX11()</title>
<indexterm><primary>_glfwGetCursorPosX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetCursorPosX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetCursorPosX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double * xpos, double * ypos)</computeroutput></para><para>
Definition at line 2810 of file x11_window.c.</para>
<programlisting>2811 {
2812 &#32;&#32;&#32;&#32;Window&#32;root,&#32;child;
2813 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rootX,&#32;rootY,&#32;childX,&#32;childY;
2814 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>;
2815 
2816 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1abd31eec92422bb86d454d5d3bc8a81a8">XQueryPointer</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;root,&#32;&amp;child,
2818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;rootX,&#32;&amp;rootY,&#32;&amp;childX,&#32;&amp;childY,
2819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>);
2820 
2821 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
2822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;childX;
2823 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
2824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;childY;
2825 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a640483a58923eee966e251ee0bfacf17"/>    <section>
    <title>_glfwGetEGLNativeDisplayX11()</title>
<indexterm><primary>_glfwGetEGLNativeDisplayX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetEGLNativeDisplayX11</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a551f78efa88a306d86efa8af0ec94349">EGLNativeDisplayType</link> _glfwGetEGLNativeDisplayX11 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 3072 of file x11_window.c.</para>
<programlisting>3073 {
3074 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>;
3075 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a1af8e2c05e54c61da0ff943b413e1c03"/>    <section>
    <title>_glfwGetEGLNativeWindowX11()</title>
<indexterm><primary>_glfwGetEGLNativeWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetEGLNativeWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link> _glfwGetEGLNativeWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 3077 of file x11_window.c.</para>
<programlisting>3078 {
3079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>)
3080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle;
3081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_internal_8h_1a858431dc7d9081b52dc734956fd1f563">EGLNativeWindowType</link>)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle;
3083 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1afc8902c6b24144f224d74adcedc70795"/>    <section>
    <title>_glfwGetEGLPlatformX11()</title>
<indexterm><primary>_glfwGetEGLPlatformX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetEGLPlatformX11</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1a3a1da159bbe7bd56490f67d96dce3bf9">EGLenum</link> _glfwGetEGLPlatformX11 (<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link> ** attribs)</computeroutput></para><para>
Definition at line 3036 of file x11_window.c.</para>
<programlisting>3037 {
3038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a9fca831c2886082570fa87e2b7a9267e">ANGLE_platform_angle</link>)
3039 &#32;&#32;&#32;&#32;{
3040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;0;
3041 
3042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1afc8f1d5be1e42ae0a8a1ddecd7482d7d">ANGLE_platform_angle_opengl</link>)
3043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1ad8d9e97ed7790811470366b338833623">GLFW_ANGLE_PLATFORM_TYPE_OPENGL</link>)
3045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a50a1085aadafafe8bae962043ed5003b">EGL_PLATFORM_ANGLE_TYPE_OPENGL_ANGLE</link>;
3046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3047 
3048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1ab843671532e7d8d3fbce804e813b460a">ANGLE_platform_angle_vulkan</link>)
3049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a5146cc5fba43a4706292e0c12d4c4fd0">hints</link>.<link linkend="_struct___g_l_f_wlibrary_1a86550c51bab958a99de2e243e48dd8e8">init</link>.<link linkend="_struct___g_l_f_winitconfig_1a6b47f84f808ef3b893e915bb3ada5fce">angleType</link>&#32;==&#32;<link linkend="_glfw3_8h_1a579ac83506c7546709dad91960cc7ca1">GLFW_ANGLE_PLATFORM_TYPE_VULKAN</link>)
3051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>&#32;=&#32;<link linkend="_internal_8h_1a8b965b212dd1ad4c83e892377f14eab1">EGL_PLATFORM_ANGLE_TYPE_VULKAN_ANGLE</link>;
3052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3053 
3054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>)
3055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(5,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_internal_8h_1a97030274d045a36c550fc0d66d26f175">EGLint</link>));
3057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[0]&#32;=&#32;<link linkend="_internal_8h_1a30fbd18d0e6ca218cb9b3a579f56972e">EGL_PLATFORM_ANGLE_TYPE_ANGLE</link>;
3058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[1]&#32;=&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>;
3059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[2]&#32;=&#32;<link linkend="_internal_8h_1ab483a4fbeb5624b740f0999cb41d6617">EGL_PLATFORM_ANGLE_NATIVE_PLATFORM_TYPE_ANGLE</link>;
3060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[3]&#32;=&#32;<link linkend="_internal_8h_1a39c25c40fb29437d8705caf13b847887">EGL_PLATFORM_X11_EXT</link>;
3061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*attribs)[4]&#32;=&#32;<link linkend="_internal_8h_1a6ae1eb8c8ec07b6f5a68f9cd6551691a">EGL_NONE</link>;
3062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_internal_8h_1ae585501f87a1353f924098f26084bb7c">EGL_PLATFORM_ANGLE_ANGLE</link>;
3063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3064 &#32;&#32;&#32;&#32;}
3065 
3066 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1a709af831ee7cf025c3bc5bfa6d2527f2">EXT_platform_base</link>&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a7a5951c916147abd6d4d7330f687807d">egl</link>.<link linkend="_struct___g_l_f_wlibrary_1ad2127a03dd29e4fb070edc5ade564e67">EXT_platform_x11</link>)
3067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_internal_8h_1a39c25c40fb29437d8705caf13b847887">EGL_PLATFORM_X11_EXT</link>;
3068 
3069 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
3070 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ab5994ee1430e37d2d12abec71e86a71e"/>    <section>
    <title>_glfwGetFramebufferSizeX11()</title>
<indexterm><primary>_glfwGetFramebufferSizeX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetFramebufferSizeX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetFramebufferSizeX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 2203 of file x11_window.c.</para>
<programlisting>2204 {
2205 &#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a125270daf8648431cface131ee9f4530">_glfwGetWindowSizeX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2206 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a71aa37ee9b9f941fe92fdc560f00de85"/>    <section>
    <title>_glfwGetKeyScancodeX11()</title>
<indexterm><primary>_glfwGetKeyScancodeX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetKeyScancodeX11</secondary></indexterm>
<para><computeroutput>int _glfwGetKeyScancodeX11 (int key)</computeroutput></para><para>
Definition at line 2883 of file x11_window.c.</para>
<programlisting>2884 {
2885 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.scancodes[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
2886 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ae58a75d52f865baec6e773cd70847d05"/>    <section>
    <title>_glfwGetPhysicalDevicePresentationSupportX11()</title>
<indexterm><primary>_glfwGetPhysicalDevicePresentationSupportX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetPhysicalDevicePresentationSupportX11</secondary></indexterm>
<para><computeroutput>int _glfwGetPhysicalDevicePresentationSupportX11 (<link linkend="_internal_8h_1a25ae5082a7c01af345570ed09d724881">VkInstance</link> instance, <link linkend="_internal_8h_1aa9acbee1e762fde021511a1b47678a38">VkPhysicalDevice</link> device, <link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link> queuefamily)</computeroutput></para><para>
Definition at line 3106 of file x11_window.c.</para>
<programlisting>3109 {
3110 &#32;&#32;&#32;&#32;VisualID&#32;visualID&#32;=&#32;<link linkend="_x11__platform_8h_1a9fbbf9f80652c8cdc0fc0175ad70f3d8">XVisualIDFromVisual</link>(DefaultVisual(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
3111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.screen));
3112 
3113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a00ca91ba261300d506226ffb7db40762">KHR_xcb_surface</link>&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.x11xcb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
3114 &#32;&#32;&#32;&#32;{
3115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a9dadff46ad047864d3828d1352f1fb91">PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR</link>
3116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkGetPhysicalDeviceXcbPresentationSupportKHR&#32;=
3117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_x11__platform_8h_1a9dadff46ad047864d3828d1352f1fb91">PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR</link>)
3118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkGetPhysicalDeviceXcbPresentationSupportKHR&quot;</emphasis>);
3119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkGetPhysicalDeviceXcbPresentationSupportKHR)
3120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
3122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_xcb_surface&#32;extension&quot;</emphasis>);
3123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
3124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3125 
3126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a8af532123ce5fb1c75ded03a0d77691f">xcb_connection_t</link>*&#32;connection&#32;=&#32;<link linkend="_x11__platform_8h_1a214538b0cf5427b71316bb9d3c221a22">XGetXCBConnection</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
3127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!connection)
3128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
3130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Failed&#32;to&#32;retrieve&#32;XCB&#32;connection&quot;</emphasis>);
3131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
3132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3133 
3134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vkGetPhysicalDeviceXcbPresentationSupportKHR(device,
3135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queuefamily,
3136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;connection,
3137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visualID);
3138 &#32;&#32;&#32;&#32;}
3139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3140 &#32;&#32;&#32;&#32;{
3141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a993da456e6d8e84b174c0c075eb8797c">PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR</link>
3142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vkGetPhysicalDeviceXlibPresentationSupportKHR&#32;=
3143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_x11__platform_8h_1a993da456e6d8e84b174c0c075eb8797c">PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR</link>)
3144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_vulkan_8h_1ae698fe946e5b75ed4a173e95133cf4f3">vkGetInstanceProcAddr</link>(instance,&#32;<emphasis role="stringliteral">&quot;vkGetPhysicalDeviceXlibPresentationSupportKHR&quot;</emphasis>);
3145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!vkGetPhysicalDeviceXlibPresentationSupportKHR)
3146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
3147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga56882b290db23261cc6c053c40c2d08e">GLFW_API_UNAVAILABLE</link>,
3148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Vulkan&#32;instance&#32;missing&#32;VK_KHR_xlib_surface&#32;extension&quot;</emphasis>);
3149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
3150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
3151 
3152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vkGetPhysicalDeviceXlibPresentationSupportKHR(device,
3153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queuefamily,
3154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
3155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visualID);
3156 &#32;&#32;&#32;&#32;}
3157 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1aa4d2ee2c633bdbdce0150cc1d3647040"/>    <section>
    <title>_glfwGetRequiredInstanceExtensionsX11()</title>
<indexterm><primary>_glfwGetRequiredInstanceExtensionsX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetRequiredInstanceExtensionsX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetRequiredInstanceExtensionsX11 (char ** extensions)</computeroutput></para><para>
Definition at line 3085 of file x11_window.c.</para>
<programlisting>3086 {
3087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a5169664f24499b5b82dec093165ca166">KHR_surface</link>)
3088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3089 
3090 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a00ca91ba261300d506226ffb7db40762">KHR_xcb_surface</link>&#32;||&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.x11xcb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
3091 &#32;&#32;&#32;&#32;{
3092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1aaca4cdf17bdebc1ccea4b34fda2e40d7">KHR_xlib_surface</link>)
3093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3094 &#32;&#32;&#32;&#32;}
3095 
3096 &#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[0]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_surface&quot;</emphasis>;
3097 
3098 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;VK_KHR_xcb_surface&#32;is&#32;preferred&#32;due&#32;to&#32;some&#32;early&#32;ICDs&#32;exposing&#32;but</emphasis>
3099 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;correctly&#32;implementing&#32;VK_KHR_xlib_surface</emphasis>
3100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9beb6fda2a7600be02831853de896395">vk</link>.<link linkend="_struct___g_l_f_wlibrary_1a00ca91ba261300d506226ffb7db40762">KHR_xcb_surface</link>&#32;&amp;&amp;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.x11xcb.<link linkend="_struct___g_l_f_wlibrary_1a5a67e92b012563943f1e1b26b0bf2645">handle</link>)
3101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[1]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_xcb_surface&quot;</emphasis>;
3102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
3103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceconf_1ae475e080536acb271a0a0efe56c3ba42">extensions</link>[1]&#32;=&#32;<emphasis role="stringliteral">&quot;VK_KHR_xlib_surface&quot;</emphasis>;
3104 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a0c238ff46e589c64bc559b6544cbecc4"/>    <section>
    <title>_glfwGetScancodeNameX11()</title>
<indexterm><primary>_glfwGetScancodeNameX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetScancodeNameX11</secondary></indexterm>
<para><computeroutput>const char* _glfwGetScancodeNameX11 (int scancode)</computeroutput></para><para>
Definition at line 2853 of file x11_window.c.</para>
<programlisting>2854 {
2855 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xkb.<link linkend="_struct___g_l_f_wlibrary_1a7978c47e7cee32b9d3b89bf787cfebc5">available</link>)
2856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2857 
2858 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;&lt;&#32;0&#32;||&#32;scancode&#32;&gt;&#32;0xff&#32;||
2859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.keycodes[scancode]&#32;==&#32;<link linkend="_group__keys_1ga99aacc875b6b27a072552631e13775c7">GLFW_KEY_UNKNOWN</link>)
2860 &#32;&#32;&#32;&#32;{
2861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gaaf2ef9aa8202c2b82ac2d921e554c687">GLFW_INVALID_VALUE</link>,&#32;<emphasis role="stringliteral">&quot;Invalid&#32;scancode&#32;%i&quot;</emphasis>,&#32;scancode);
2862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2863 &#32;&#32;&#32;&#32;}
2864 
2865 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.keycodes[scancode];
2866 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;KeySym&#32;keysym&#32;=&#32;<link linkend="_x11__platform_8h_1af4cce8d13e7733d3c473f845fadcbb10">XkbKeycodeToKeysym</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
2867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scancode,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xkb.group,&#32;0);
2868 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keysym&#32;==&#32;NoSymbol)
2869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2870 
2871 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_stdint_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;codepoint&#32;=&#32;<link linkend="_xkb__unicode_8c_1acc4747eb62386c01c9dd0cd6997c8983">_glfwKeySym2Unicode</link>(keysym);
2872 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(codepoint&#32;==&#32;<link linkend="_xkb__unicode_8h_1a45fc2e5a3ba025f1ac362831cfe04416">GLFW_INVALID_CODEPOINT</link>)
2873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2874 
2875 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=&#32;<link linkend="_init_8c_1a920bdd09bf605b918b93fbec1993c55b">_glfwEncodeUTF8</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>],&#32;codepoint);
2876 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;==&#32;0)
2877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2878 
2879 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>][<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
2880 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
2881 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ab9d780d530a93b66f16358e49450b0e4"/>    <section>
    <title>_glfwGetWindowContentScaleX11()</title>
<indexterm><primary>_glfwGetWindowContentScaleX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetWindowContentScaleX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowContentScaleX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float * xscale, float * yscale)</computeroutput></para><para>
Definition at line 2269 of file x11_window.c.</para>
<programlisting>2270 {
2271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xscale)
2272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xscale&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.contentScaleX;
2273 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(yscale)
2274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*yscale&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.contentScaleY;
2275 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a1532ddd05367af8b6cd22cacc00a502b"/>    <section>
    <title>_glfwGetWindowFrameSizeX11()</title>
<indexterm><primary>_glfwGetWindowFrameSizeX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetWindowFrameSizeX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowFrameSizeX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * left, int * top, int * right, int * bottom)</computeroutput></para><para>
Definition at line 2208 of file x11_window.c.</para>
<programlisting>2211 {
2212 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>*&#32;extents&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2213 
2214 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor&#32;||&#32;!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;decorated)
2215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2216 
2217 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_FRAME_EXTENTS&#32;==&#32;None)
2218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2219 
2220 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)&#32;&amp;&amp;
2221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_REQUEST_FRAME_EXTENTS)
2222 &#32;&#32;&#32;&#32;{
2223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XEvent&#32;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>;
2224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>&#32;=&#32;0.5;
2225 
2226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ensure&#32;_NET_FRAME_EXTENTS&#32;is&#32;set,&#32;allowing&#32;glfwGetWindowFrameSize&#32;to</emphasis>
2227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;function&#32;before&#32;the&#32;window&#32;is&#32;mapped</emphasis>
2228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendEventToWM(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_REQUEST_FRAME_EXTENTS,
2229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,&#32;0,&#32;0,&#32;0);
2230 
2231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Use&#32;a&#32;timeout&#32;because&#32;earlier&#32;versions&#32;of&#32;some&#32;window&#32;managers</emphasis>
2232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;(at&#32;least&#32;Unity,&#32;Fluxbox&#32;and&#32;Xfwm)&#32;failed&#32;to&#32;send&#32;the&#32;reply</emphasis>
2233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;They&#32;have&#32;been&#32;fixed&#32;but&#32;broken&#32;versions&#32;are&#32;still&#32;in&#32;the&#32;wild</emphasis>
2234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;you&#32;are&#32;affected&#32;by&#32;this&#32;and&#32;your&#32;window&#32;manager&#32;is&#32;NOT</emphasis>
2235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;listed&#32;above,&#32;PLEASE&#32;report&#32;it&#32;to&#32;their&#32;and&#32;our&#32;issue&#32;trackers</emphasis>
2236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_x11__platform_8h_1abe0017f220c0255d16ff72b257e62411">XCheckIfEvent</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
2237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>,
2238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isFrameExtentsEvent,
2239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(XPointer)&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!waitForEvent(&amp;<link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>))
2242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;The&#32;window&#32;manager&#32;has&#32;a&#32;broken&#32;_NET_REQUEST_FRAME_EXTENTS&#32;implementation;&#32;please&#32;report&#32;this&#32;issue&quot;</emphasis>);
2245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2248 &#32;&#32;&#32;&#32;}
2249 
2250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a889b3172437e770a55812b569e1a93bd">_glfwGetWindowPropertyX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_FRAME_EXTENTS,
2252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XA_CARDINAL,
2253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>**)&#32;&amp;extents)&#32;==&#32;4)
2254 &#32;&#32;&#32;&#32;{
2255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>)
2256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995">left</link>&#32;=&#32;extents[0];
2257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>)
2258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23">top</link>&#32;=&#32;extents[2];
2259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>)
2260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe">right</link>&#32;=&#32;extents[1];
2261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>)
2262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a95fc257e5ddf46f7db9d5e898cdf1991">bottom</link>&#32;=&#32;extents[3];
2263 &#32;&#32;&#32;&#32;}
2264 
2265 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(extents)
2266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac5e57c89cd1e963b41f12b3404b42ca8">XFree</link>(extents);
2267 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1aeb4f6250bd184fcf5e2c8a9225c249de"/>    <section>
    <title>_glfwGetWindowOpacityX11()</title>
<indexterm><primary>_glfwGetWindowOpacityX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetWindowOpacityX11</secondary></indexterm>
<para><computeroutput>float _glfwGetWindowOpacityX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2695 of file x11_window.c.</para>
<programlisting>2696 {
2697 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;opacity&#32;=&#32;1.f;
2698 
2699 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__platform_8h_1ab468f859fad6bccf9742764ff42ec311">XGetSelectionOwner</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_CM_Sx))
2700 &#32;&#32;&#32;&#32;{
2701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CARD32*&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2702 
2703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a889b3172437e770a55812b569e1a93bd">_glfwGetWindowPropertyX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_WINDOW_OPACITY,
2705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XA_CARDINAL,
2706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>**)&#32;&amp;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>))
2707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opacity&#32;=&#32;(float)&#32;(*<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;/&#32;(<emphasis role="keywordtype">double</emphasis>)&#32;0xffffffffu);
2709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2710 
2711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>)
2712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac5e57c89cd1e963b41f12b3404b42ca8">XFree</link>(<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
2713 &#32;&#32;&#32;&#32;}
2714 
2715 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opacity;
2716 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a5e78c3b99df8aa358ce12fa8b9a45cb0"/>    <section>
    <title>_glfwGetWindowPosX11()</title>
<indexterm><primary>_glfwGetWindowPosX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetWindowPosX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowPosX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * xpos, int * ypos)</computeroutput></para><para>
Definition at line 2118 of file x11_window.c.</para>
<programlisting>2119 {
2120 &#32;&#32;&#32;&#32;Window&#32;dummy;
2121 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;
2122 
2123 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a778c216d154dda0ab84c0fb2fde56214">XTranslateCoordinates</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.root,
2124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;0,&#32;&amp;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;&amp;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,&#32;&amp;dummy);
2125 
2126 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(xpos)
2127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*xpos&#32;=&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>;
2128 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ypos)
2129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*ypos&#32;=&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;
2130 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a889b3172437e770a55812b569e1a93bd"/>    <section>
    <title>_glfwGetWindowPropertyX11()</title>
<indexterm><primary>_glfwGetWindowPropertyX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetWindowPropertyX11</secondary></indexterm>
<para><computeroutput>unsigned long _glfwGetWindowPropertyX11 (Window window, Atom property, Atom type, unsigned char ** value)</computeroutput></para><para>
Definition at line 1821 of file x11_window.c.</para>
<programlisting>1825 {
1826 &#32;&#32;&#32;&#32;Atom&#32;actualType;
1827 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;actualFormat;
1828 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;itemCount,&#32;bytesAfter;
1829 
1830 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a07522062635ed60bc7060f3b3950c7d8">XGetWindowProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
1831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,
1832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;property,
1833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
1834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LONG_MAX,
1835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;False,
1836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ab7c1afc09f67635c2c376638fcc0db5f">type</link>,
1837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;actualType,
1838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;actualFormat,
1839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;itemCount,
1840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;bytesAfter,
1841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>);
1842 
1843 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;itemCount;
1844 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a125270daf8648431cface131ee9f4530"/>    <section>
    <title>_glfwGetWindowSizeX11()</title>
<indexterm><primary>_glfwGetWindowSizeX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwGetWindowSizeX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwGetWindowSizeX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int * width, int * height)</computeroutput></para><para>
Definition at line 2156 of file x11_window.c.</para>
<programlisting>2157 {
2158 &#32;&#32;&#32;&#32;XWindowAttributes&#32;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>;
2159 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a91d1286ff9603a6a3e1eada719b67c01">XGetWindowAttributes</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;&amp;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>);
2160 
2161 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>)
2162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>.width;
2163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>)
2164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;<link linkend="_glext_8h_1af53ceb1060941f33639f84f48d5b9273">attribs</link>.height;
2165 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1af5b7dcae618ec977adacc5a69ae52cb8"/>    <section>
    <title>_glfwHideWindowX11()</title>
<indexterm><primary>_glfwHideWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwHideWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwHideWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2400 of file x11_window.c.</para>
<programlisting>2401 {
2402 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac63d7ec66d7bec93f72b1e77a7c066c3">XUnmapWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle);
2403 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2404 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a8eb859342ad26e24f158b62bb4f4f936"/>    <section>
    <title>_glfwIconifyWindowX11()</title>
<indexterm><primary>_glfwIconifyWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwIconifyWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwIconifyWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2277 of file x11_window.c.</para>
<programlisting>2278 {
2279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.overrideRedirect)
2280 &#32;&#32;&#32;&#32;{
2281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Override-redirect&#32;windows&#32;cannot&#32;be&#32;iconified&#32;or&#32;restored,&#32;as&#32;those</emphasis>
2282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tasks&#32;are&#32;performed&#32;by&#32;the&#32;window&#32;manager</emphasis>
2283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Iconification&#32;of&#32;full&#32;screen&#32;windows&#32;requires&#32;a&#32;WM&#32;that&#32;supports&#32;EWMH&#32;full&#32;screen&quot;</emphasis>);
2285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2286 &#32;&#32;&#32;&#32;}
2287 
2288 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a510d8763c59b594d64f109b31a435d86">XIconifyWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.screen);
2289 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2290 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1aaed792df59dc2eff6382d4a6f9c54c67"/>    <section>
    <title>_glfwIsVisualTransparentX11()</title>
<indexterm><primary>_glfwIsVisualTransparentX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwIsVisualTransparentX11</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwIsVisualTransparentX11 (Visual * visual)</computeroutput></para><para>
Definition at line 1846 of file x11_window.c.</para>
<programlisting>1847 {
1848 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xrender.<link linkend="_struct___g_l_f_wlibrary_1a7978c47e7cee32b9d3b89bf787cfebc5">available</link>)
1849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
1850 
1851 &#32;&#32;&#32;&#32;XRenderPictFormat*&#32;pf&#32;=&#32;<link linkend="_x11__platform_8h_1a27863687508d7908d9e460d579b4085e">XRenderFindVisualFormat</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;visual);
1852 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pf&#32;&amp;&amp;&#32;pf-&gt;direct.alphaMask;
1853 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1aea91b608141af2d2213a1162d556941b"/>    <section>
    <title>_glfwMaximizeWindowX11()</title>
<indexterm><primary>_glfwMaximizeWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwMaximizeWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwMaximizeWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2326 of file x11_window.c.</para>
<programlisting>2327 {
2328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE&#32;||
2329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_VERT&#32;||
2330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_HORZ)
2331 &#32;&#32;&#32;&#32;{
2332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2333 &#32;&#32;&#32;&#32;}
2334 
2335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2336 &#32;&#32;&#32;&#32;{
2337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendEventToWM(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,
2338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,
2339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1af01584d4487719bb38125d1c5176a823">_NET_WM_STATE_ADD</link>,
2340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_VERT,
2341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_HORZ,
2342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1,&#32;0);
2343 &#32;&#32;&#32;&#32;}
2344 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2345 &#32;&#32;&#32;&#32;{
2346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Atom*&#32;states&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=
2348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a889b3172437e770a55812b569e1a93bd">_glfwGetWindowPropertyX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,
2350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XA_ATOM,
2351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>**)&#32;&amp;states);
2352 
2353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;We&#32;don&apos;t&#32;check&#32;for&#32;failure&#32;as&#32;this&#32;property&#32;may&#32;not&#32;exist&#32;yet</emphasis>
2354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;that&apos;s&#32;fine&#32;(and&#32;we&apos;ll&#32;create&#32;it&#32;implicitly&#32;with&#32;append)</emphasis>
2355 
2356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Atom&#32;missing[2]&#32;=
2357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_VERT,
2359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_HORZ
2360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
2361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;missingCount&#32;=&#32;2;
2362 
2363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;&#32;&#32;i++)
2364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;j&#32;=&#32;0;&#32;&#32;j&#32;&lt;&#32;missingCount;&#32;&#32;j++)
2366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states[i]&#32;==&#32;missing[j])
2368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;missing[j]&#32;=&#32;missing[missingCount&#32;-&#32;1];
2370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;missingCount--;
2371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2374 
2375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states)
2376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac5e57c89cd1e963b41f12b3404b42ca8">XFree</link>(states);
2377 
2378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!missingCount)
2379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2380 
2381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,&#32;XA_ATOM,&#32;32,
2383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeAppend,
2384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;missing,
2385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;missingCount);
2386 &#32;&#32;&#32;&#32;}
2387 
2388 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2389 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ad84c2d4d3e0f5648751c195d4c61b234"/>    <section>
    <title>_glfwPollEventsX11()</title>
<indexterm><primary>_glfwPollEventsX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwPollEventsX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPollEventsX11 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2745 of file x11_window.c.</para>
<programlisting>2746 {
2747 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>;
2748 
2749 <emphasis role="preprocessor">#if&#32;defined(__linux__)</emphasis>
2750 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a9a92e76157d81575798dd7dfdd0a406b">joysticksInitialized</link>)
2751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_linux__joystick_8c_1ad94630838d7c9d77b8c13518a47fcbef">_glfwDetectJoystickConnectionLinux</link>();
2752 <emphasis role="preprocessor">#endif</emphasis>
2753 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a499650608c63f1253497f8e698962fba">XPending</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2754 
2755 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(QLength(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>))
2756 &#32;&#32;&#32;&#32;{
2757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XEvent&#32;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>;
2758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ab66bf3926a901a8cf6563870b4928392">XNextEvent</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;&amp;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>);
2759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processEvent(&amp;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>);
2760 &#32;&#32;&#32;&#32;}
2761 
2762 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.disabledCursorWindow;
2763 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2764 &#32;&#32;&#32;&#32;{
2765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
2766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a125270daf8648431cface131ee9f4530">_glfwGetWindowSizeX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2767 
2768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;Re-center&#32;the&#32;cursor&#32;only&#32;if&#32;it&#32;has&#32;moved&#32;since&#32;the&#32;last&#32;call,</emphasis>
2769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;avoid&#32;breaking&#32;glfwWaitEvents&#32;with&#32;MotionNotify</emphasis>
2770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.lastCursorPosX&#32;!=&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;/&#32;2&#32;||
2771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.lastCursorPosY&#32;!=&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;/&#32;2)
2772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a0676ad8935d93381b98e7eb202945d40">_glfwSetCursorPosX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;/&#32;2,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;/&#32;2);
2774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2775 &#32;&#32;&#32;&#32;}
2776 
2777 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2778 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1adee7c4a9ea01e36a33f28a88ce8df7fd"/>    <section>
    <title>_glfwPostEmptyEventX11()</title>
<indexterm><primary>_glfwPostEmptyEventX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwPostEmptyEventX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPostEmptyEventX11 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2799 of file x11_window.c.</para>
<programlisting>2800 {
2801 &#32;&#32;&#32;&#32;XEvent&#32;<emphasis role="keyword">event</emphasis>&#32;=&#32;{&#32;ClientMessage&#32;};
2802 &#32;&#32;&#32;&#32;<emphasis role="keyword">event</emphasis>.xclient.window&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.helperWindowHandle;
2803 &#32;&#32;&#32;&#32;<emphasis role="keyword">event</emphasis>.xclient.format&#32;=&#32;32;&#32;<emphasis role="comment">//&#32;Data&#32;is&#32;32-bit&#32;longs</emphasis>
2804 &#32;&#32;&#32;&#32;<emphasis role="keyword">event</emphasis>.xclient.message_type&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NULL_;
2805 
2806 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a976cce12111a5e38953664287ad733eb">XSendEvent</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.helperWindowHandle,&#32;False,&#32;0,&#32;&amp;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>);
2807 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2808 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ae8c308d237bfd06661aa590bfa582579"/>    <section>
    <title>_glfwPushSelectionToManagerX11()</title>
<indexterm><primary>_glfwPushSelectionToManagerX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwPushSelectionToManagerX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwPushSelectionToManagerX11 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 1857 of file x11_window.c.</para>
<programlisting>1858 {
1859 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae8108e8738be688501f240e0da8807fc">XConvertSelection</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
1860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.CLIPBOARD_MANAGER,
1861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.SAVE_TARGETS,
1862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;None,
1863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.helperWindowHandle,
1864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CurrentTime);
1865 
1866 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)
1867 &#32;&#32;&#32;&#32;{
1868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XEvent&#32;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>;
1869 
1870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_x11__platform_8h_1abe0017f220c0255d16ff72b257e62411">XCheckIfEvent</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;&amp;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>,&#32;isSelectionEvent,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))
1871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>.type)
1873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;SelectionRequest:
1875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleSelectionRequest(&amp;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>);
1876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1877 
1878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;SelectionClear:
1879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleSelectionClear(&amp;<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>);
1880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1881 
1882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;SelectionNotify:
1883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>.xselection.target&#32;==&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.SAVE_TARGETS)
1885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;means&#32;one&#32;of&#32;two&#32;things;&#32;either&#32;the&#32;selection</emphasis>
1887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;was&#32;not&#32;owned,&#32;which&#32;means&#32;there&#32;is&#32;no&#32;clipboard</emphasis>
1888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;manager,&#32;or&#32;the&#32;transfer&#32;to&#32;the&#32;clipboard&#32;manager&#32;has</emphasis>
1889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;completed</emphasis>
1890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In&#32;either&#32;case,&#32;it&#32;means&#32;we&#32;are&#32;done&#32;here</emphasis>
1891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
1892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1893 
1894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
1895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1898 
1899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;waitForEvent(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
1900 &#32;&#32;&#32;&#32;}
1901 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a9dad95a9049f27c06185d2842eba73cb"/>    <section>
    <title>_glfwRawMouseMotionSupportedX11()</title>
<indexterm><primary>_glfwRawMouseMotionSupportedX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwRawMouseMotionSupportedX11</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwRawMouseMotionSupportedX11 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2740 of file x11_window.c.</para>
<programlisting>2741 {
2742 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xi.<link linkend="_struct___g_l_f_wlibrary_1a7978c47e7cee32b9d3b89bf787cfebc5">available</link>;
2743 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a71e07f021148c43f1ab19e27a2b2fa26"/>    <section>
    <title>_glfwRequestWindowAttentionX11()</title>
<indexterm><primary>_glfwRequestWindowAttentionX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwRequestWindowAttentionX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRequestWindowAttentionX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2406 of file x11_window.c.</para>
<programlisting>2407 {
2408 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE&#32;||&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_DEMANDS_ATTENTION)
2409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2410 
2411 &#32;&#32;&#32;&#32;sendEventToWM(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,
2412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,
2413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1af01584d4487719bb38125d1c5176a823">_NET_WM_STATE_ADD</link>,
2414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_DEMANDS_ATTENTION,
2415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;1,&#32;0);
2416 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ac2c7e634ddda62be7b0d169efdfc73b3"/>    <section>
    <title>_glfwRestoreWindowX11()</title>
<indexterm><primary>_glfwRestoreWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwRestoreWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwRestoreWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2292 of file x11_window.c.</para>
<programlisting>2293 {
2294 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.overrideRedirect)
2295 &#32;&#32;&#32;&#32;{
2296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Override-redirect&#32;windows&#32;cannot&#32;be&#32;iconified&#32;or&#32;restored,&#32;as&#32;those</emphasis>
2297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tasks&#32;are&#32;performed&#32;by&#32;the&#32;window&#32;manager</emphasis>
2298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
2299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Iconification&#32;of&#32;full&#32;screen&#32;windows&#32;requires&#32;a&#32;WM&#32;that&#32;supports&#32;EWMH&#32;full&#32;screen&quot;</emphasis>);
2300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2301 &#32;&#32;&#32;&#32;}
2302 
2303 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a4eb265fb72bcf2b67814da8a4ef20820">_glfwWindowIconifiedX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2304 &#32;&#32;&#32;&#32;{
2305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae77204b7517dcdc141f3eb9de27d1340">XMapWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle);
2306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;waitForVisibilityNotify(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2307 &#32;&#32;&#32;&#32;}
2308 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2309 &#32;&#32;&#32;&#32;{
2310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE&#32;&amp;&amp;
2311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_VERT&#32;&amp;&amp;
2312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_HORZ)
2313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendEventToWM(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,
2315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,
2316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a50026537f9f2afdb4a6a4f3bc5dad6d3">_NET_WM_STATE_REMOVE</link>,
2317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_VERT,
2318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_HORZ,
2319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1,&#32;0);
2320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2321 &#32;&#32;&#32;&#32;}
2322 
2323 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2324 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1adc8f2633b397a7d7b13815151b22c462"/>    <section>
    <title>_glfwSetClipboardStringX11()</title>
<indexterm><primary>_glfwSetClipboardStringX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetClipboardStringX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetClipboardStringX11 (const char * string)</computeroutput></para><para>
Definition at line 3012 of file x11_window.c.</para>
<programlisting>3013 {
3014 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;copy&#32;=&#32;<link linkend="_init_8c_1a7f0a5b0d879baead229ef5e7381648e8">_glfw_strdup</link>(<emphasis role="keywordtype">string</emphasis>);
3015 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.clipboardString);
3016 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.clipboardString&#32;=&#32;copy;
3017 
3018 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1aa43586ffa612a5cb445871a1fa2a309e">XSetSelectionOwner</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
3019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.CLIPBOARD,
3020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.helperWindowHandle,
3021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CurrentTime);
3022 
3023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__platform_8h_1ab468f859fad6bccf9742764ff42ec311">XGetSelectionOwner</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.CLIPBOARD)&#32;!=
3024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.helperWindowHandle)
3025 &#32;&#32;&#32;&#32;{
3026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
3027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Failed&#32;to&#32;become&#32;owner&#32;of&#32;clipboard&#32;selection&quot;</emphasis>);
3028 &#32;&#32;&#32;&#32;}
3029 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a41ea58eb9244ae51a118e9682738fb89"/>    <section>
    <title>_glfwSetCursorModeX11()</title>
<indexterm><primary>_glfwSetCursorModeX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetCursorModeX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorModeX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int mode)</computeroutput></para><para>
Definition at line 2838 of file x11_window.c.</para>
<programlisting>2839 {
2840 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;==&#32;<link linkend="_glfw3_8h_1a2315b99a329ce53e6a13a9d46fd5ca88">GLFW_CURSOR_DISABLED</link>)
2841 &#32;&#32;&#32;&#32;{
2842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1aafe5a5b783aefa0de1db8052e672b43d">_glfwWindowFocusedX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disableCursor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2844 &#32;&#32;&#32;&#32;}
2845 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.disabledCursorWindow&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enableCursor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2847 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2849 
2850 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2851 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a0676ad8935d93381b98e7eb202945d40"/>    <section>
    <title>_glfwSetCursorPosX11()</title>
<indexterm><primary>_glfwSetCursorPosX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetCursorPosX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorPosX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, double x, double y)</computeroutput></para><para>
Definition at line 2827 of file x11_window.c.</para>
<programlisting>2828 {
2829 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Store&#32;the&#32;new&#32;position&#32;so&#32;it&#32;can&#32;be&#32;recognized&#32;later</emphasis>
2830 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.warpCursorPosX&#32;=&#32;(int)&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>;
2831 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.warpCursorPosY&#32;=&#32;(int)&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;
2832 
2833 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1aeb5ba68db20b161c4e2a53c9e77d96f6">XWarpPointer</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;None,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,0,0,0,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
2835 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2836 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a3a9f7225c28fa00129c29d0c83a1bac1"/>    <section>
    <title>_glfwSetCursorX11()</title>
<indexterm><primary>_glfwSetCursorX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetCursorX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetCursorX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wcursor">_GLFWcursor</link> * cursor)</computeroutput></para><para>
Definition at line 3003 of file x11_window.c.</para>
<programlisting>3004 {
3005 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;cursorMode&#32;==&#32;<link linkend="_glfw3_8h_1ae04dd25c8577e19fa8c97368561f6c68">GLFW_CURSOR_NORMAL</link>)
3006 &#32;&#32;&#32;&#32;{
3007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateCursorImage(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
3008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
3009 &#32;&#32;&#32;&#32;}
3010 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a7ec18d1c290a44b2e90029de5ff81411"/>    <section>
    <title>_glfwSetRawMouseMotionX11()</title>
<indexterm><primary>_glfwSetRawMouseMotionX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetRawMouseMotionX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetRawMouseMotionX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 2726 of file x11_window.c.</para>
<programlisting>2727 {
2728 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xi.<link linkend="_struct___g_l_f_wlibrary_1a7978c47e7cee32b9d3b89bf787cfebc5">available</link>)
2729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2730 
2731 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.disabledCursorWindow&#32;!=&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2733 
2734 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
2735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enableRawMouseMotion(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2736 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disableRawMouseMotion(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2738 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a8bbf618c5d675c3e0f1afb5da49f889a"/>    <section>
    <title>_glfwSetWindowAspectRatioX11()</title>
<indexterm><primary>_glfwSetWindowAspectRatioX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowAspectRatioX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowAspectRatioX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int numer, int denom)</computeroutput></para><para>
Definition at line 2195 of file x11_window.c.</para>
<programlisting>2196 {
2197 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
2198 &#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a125270daf8648431cface131ee9f4530">_glfwGetWindowSizeX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2199 &#32;&#32;&#32;&#32;updateNormalHints(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2200 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2201 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a01326101632e59be2b39ec9f849c0312"/>    <section>
    <title>_glfwSetWindowDecoratedX11()</title>
<indexterm><primary>_glfwSetWindowDecoratedX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowDecoratedX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowDecoratedX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 2587 of file x11_window.c.</para>
<programlisting>2588 {
2589 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
2590 &#32;&#32;&#32;&#32;{
2591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>;
2592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;functions;
2593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;decorations;
2594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;input_mode;
2595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;status;
2596 &#32;&#32;&#32;&#32;}&#32;hints&#32;=&#32;{0};
2597 
2598 &#32;&#32;&#32;&#32;hints.flags&#32;=&#32;<link linkend="_x11__window_8c_1a4c02be70f29ad4f25e366445fdd2073b">MWM_HINTS_DECORATIONS</link>;
2599 &#32;&#32;&#32;&#32;hints.decorations&#32;=&#32;<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>&#32;?&#32;<link linkend="_x11__window_8c_1a0c7ca3643c00dd82aaf2bbe93007397b">MWM_DECOR_ALL</link>&#32;:&#32;0;
2600 
2601 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.MOTIF_WM_HINTS,
2603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.MOTIF_WM_HINTS,&#32;32,
2604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeReplace,
2605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;&amp;hints,
2606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(hints)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">long</emphasis>));
2607 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a8ac65a4deb7f1671e1fa29c95b4a5a5e"/>    <section>
    <title>_glfwSetWindowFloatingX11()</title>
<indexterm><primary>_glfwSetWindowFloatingX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowFloatingX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowFloatingX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 2609 of file x11_window.c.</para>
<programlisting>2610 {
2611 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE&#32;||&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_ABOVE)
2612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2613 
2614 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2615 &#32;&#32;&#32;&#32;{
2616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;action&#32;=&#32;<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>&#32;?&#32;<link linkend="_x11__window_8c_1af01584d4487719bb38125d1c5176a823">_NET_WM_STATE_ADD</link>&#32;:&#32;<link linkend="_x11__window_8c_1a50026537f9f2afdb4a6a4f3bc5dad6d3">_NET_WM_STATE_REMOVE</link>;
2617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendEventToWM(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,
2618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,
2619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;action,
2620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_ABOVE,
2621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;1,&#32;0);
2622 &#32;&#32;&#32;&#32;}
2623 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2624 &#32;&#32;&#32;&#32;{
2625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Atom*&#32;states&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
2626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=
2627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a889b3172437e770a55812b569e1a93bd">_glfwGetWindowPropertyX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,
2629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XA_ATOM,
2630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>**)&#32;&amp;states);
2631 
2632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;We&#32;don&apos;t&#32;check&#32;for&#32;failure&#32;as&#32;this&#32;property&#32;may&#32;not&#32;exist&#32;yet</emphasis>
2633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;that&apos;s&#32;fine&#32;(and&#32;we&apos;ll&#32;create&#32;it&#32;implicitly&#32;with&#32;append)</emphasis>
2634 
2635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
2636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;i;
2638 
2639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;&#32;&#32;i++)
2640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states[i]&#32;==&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_ABOVE)
2642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2644 
2645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
2646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,&#32;XA_ATOM,&#32;32,
2649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeAppend,
2650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;&amp;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_ABOVE,
2651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1);
2652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states)
2655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;&#32;&#32;i++)
2657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states[i]&#32;==&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_ABOVE)
2659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;states[i]&#32;=&#32;states[<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;-&#32;1];
2661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,&#32;XA_ATOM,&#32;32,
2663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeReplace,&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;states,&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;-&#32;1);
2664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2668 
2669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states)
2670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac5e57c89cd1e963b41f12b3404b42ca8">XFree</link>(states);
2671 &#32;&#32;&#32;&#32;}
2672 
2673 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2674 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a5fe463737d807a0ef2a4571dce6544df"/>    <section>
    <title>_glfwSetWindowIconX11()</title>
<indexterm><primary>_glfwSetWindowIconX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowIconX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowIconX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int count, const <link linkend="_struct_g_l_f_wimage">GLFWimage</link> * images)</computeroutput></para><para>
Definition at line 2068 of file x11_window.c.</para>
<programlisting>2069 {
2070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
2071 &#32;&#32;&#32;&#32;{
2072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;longCount&#32;=&#32;0;
2073 
2074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;&#32;&#32;i++)
2075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longCount&#32;+=&#32;2&#32;+&#32;images[i].<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;*&#32;images[i].<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
2076 
2077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>*&#32;icon&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(longCount,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>));
2078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>*&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>&#32;=&#32;icon;
2079 
2080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;&#32;&#32;i++)
2081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>++&#32;=&#32;images[i].<link linkend="_struct_g_l_f_wimage_1af6a71cc999fe6d3aea31dd7e9687d835">width</link>;
2083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>++&#32;=&#32;images[i].<link linkend="_struct_g_l_f_wimage_1a0b7d95368f0c80d5e5c9875057c7dbec">height</link>;
2084 
2085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;&#32;j&#32;&lt;&#32;images[i].<link linkend="_struct_g_l_f_wimage_1af6a71cc999fe6d3aea31dd7e9687d835">width</link>&#32;*&#32;images[i].<link linkend="_struct_g_l_f_wimage_1a0b7d95368f0c80d5e5c9875057c7dbec">height</link>;&#32;&#32;j++)
2086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>++&#32;=&#32;(((<emphasis role="keywordtype">unsigned</emphasis>&#32;long)&#32;images[i].<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>[j&#32;*&#32;4&#32;+&#32;0])&#32;&lt;&lt;&#32;16)&#32;|
2088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>)&#32;images[i].<link linkend="_struct_g_l_f_wimage_1a0c532a5c2bb715555279b7817daba0fb">pixels</link>[j&#32;*&#32;4&#32;+&#32;1])&#32;&lt;&lt;&#32;&#32;8)&#32;|
2089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((<emphasis role="keywordtype">unsigned</emphasis>&#32;long)&#32;images[i].<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>[j&#32;*&#32;4&#32;+&#32;2])&#32;&lt;&lt;&#32;&#32;0)&#32;|
2090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>)&#32;images[i].<link linkend="_struct_g_l_f_wimage_1a0c532a5c2bb715555279b7817daba0fb">pixels</link>[j&#32;*&#32;4&#32;+&#32;3])&#32;&lt;&lt;&#32;24);
2091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2093 
2094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;XChangeProperty&#32;expects&#32;32-bit&#32;values&#32;like&#32;the&#32;image&#32;data&#32;above&#32;to&#32;be</emphasis>
2095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;placed&#32;in&#32;the&#32;32&#32;least&#32;significant&#32;bits&#32;of&#32;individual&#32;longs.&#32;&#32;This&#32;is</emphasis>
2096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;true&#32;even&#32;if&#32;long&#32;is&#32;64-bit&#32;and&#32;a&#32;WM&#32;protocol&#32;calls&#32;for&#32;&quot;packed&quot;&#32;data.</emphasis>
2097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;is&#32;because&#32;of&#32;a&#32;historical&#32;mistake&#32;that&#32;then&#32;became&#32;part&#32;of&#32;the&#32;Xlib</emphasis>
2098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;ABI.&#32;&#32;Xlib&#32;will&#32;pack&#32;these&#32;values&#32;into&#32;a&#32;regular&#32;array&#32;of&#32;32-bit&#32;values</emphasis>
2099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;before&#32;sending&#32;it&#32;over&#32;the&#32;wire.</emphasis>
2100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_ICON,
2102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XA_CARDINAL,&#32;32,
2103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeReplace,
2104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;icon,
2105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longCount);
2106 
2107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(icon);
2108 &#32;&#32;&#32;&#32;}
2109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2110 &#32;&#32;&#32;&#32;{
2111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1add12d9255d4c27fc94700ab86488c4f4">XDeleteProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_ICON);
2113 &#32;&#32;&#32;&#32;}
2114 
2115 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2116 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ac885a06af26a8a12987388bdaf3e6b04"/>    <section>
    <title>_glfwSetWindowMonitorX11()</title>
<indexterm><primary>_glfwSetWindowMonitorX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowMonitorX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMonitorX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_struct___g_l_f_wmonitor">_GLFWmonitor</link> * monitor, int xpos, int ypos, int width, int height, int refreshRate)</computeroutput></para><para>
Definition at line 2432 of file x11_window.c.</para>
<programlisting>2437 {
2438 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor&#32;==&#32;monitor)
2439 &#32;&#32;&#32;&#32;{
2440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor)
2441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(monitor-&gt;<link linkend="_struct___g_l_f_wmonitor_1aa869aae87a7a75ba89211619ba103aa1">window</link>&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;resizable)
2448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateNormalHints(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2449 
2450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1abe4f5b553a32443d3873b80e78a141f4">XMoveResizeWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xpos,&#32;ypos,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2453 
2454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2456 &#32;&#32;&#32;&#32;}
2457 
2458 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
2459 &#32;&#32;&#32;&#32;{
2460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a01326101632e59be2b39ec9f849c0312">_glfwSetWindowDecoratedX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;decorated);
2461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a8ac65a4deb7f1671e1fa29c95b4a5a5e">_glfwSetWindowFloatingX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;floating);
2462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releaseMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2463 &#32;&#32;&#32;&#32;}
2464 
2465 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a5cfc56e9a5e1e8dd88862c9c7b8a6f7f">_glfwInputWindowMonitor</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;monitor);
2466 &#32;&#32;&#32;&#32;updateNormalHints(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2467 
2468 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
2469 &#32;&#32;&#32;&#32;{
2470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ad9d8c8acf09e925cf29bc483de5a0ec6">XMapRaised</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle);
2473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;waitForVisibilityNotify(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2475 
2476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateWindowMode(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2478 &#32;&#32;&#32;&#32;}
2479 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2480 &#32;&#32;&#32;&#32;{
2481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateWindowMode(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1abe4f5b553a32443d3873b80e78a141f4">XMoveResizeWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xpos,&#32;ypos,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2484 &#32;&#32;&#32;&#32;}
2485 
2486 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2487 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a93716010a05a7c04a315a3be96392ed4"/>    <section>
    <title>_glfwSetWindowMousePassthroughX11()</title>
<indexterm><primary>_glfwSetWindowMousePassthroughX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowMousePassthroughX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowMousePassthroughX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 2676 of file x11_window.c.</para>
<programlisting>2677 {
2678 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xshape.<link linkend="_struct___g_l_f_wlibrary_1a7978c47e7cee32b9d3b89bf787cfebc5">available</link>)
2679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2680 
2681 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a0455a397ab5468d21c3021f2efa6dd3c">enabled</link>)
2682 &#32;&#32;&#32;&#32;{
2683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Region&#32;<link linkend="_structregion">region</link>&#32;=&#32;<link linkend="_x11__platform_8h_1a3d93d4f1da1a10994bb87b79fbb1d254">XCreateRegion</link>();
2684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1abad9cf25b0e330bdc2a3af3bfd5bec63">XShapeCombineRegion</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShapeInput,&#32;0,&#32;0,&#32;<link linkend="_structregion">region</link>,&#32;ShapeSet);
2686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a8e75bba0699ca4a2a31fc9fbdc6b2ff6">XDestroyRegion</link>(<link linkend="_structregion">region</link>);
2687 &#32;&#32;&#32;&#32;}
2688 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2689 &#32;&#32;&#32;&#32;{
2690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1aaad9d5c9f5ead3e0346f9bf1fa10dcb8">XShapeCombineMask</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShapeInput,&#32;0,&#32;0,&#32;None,&#32;ShapeSet);
2692 &#32;&#32;&#32;&#32;}
2693 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a13fe2eeb468f7373d3d8b9a5a41e8f1d"/>    <section>
    <title>_glfwSetWindowOpacityX11()</title>
<indexterm><primary>_glfwSetWindowOpacityX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowOpacityX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowOpacityX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, float opacity)</computeroutput></para><para>
Definition at line 2718 of file x11_window.c.</para>
<programlisting>2719 {
2720 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;CARD32&#32;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>&#32;=&#32;(CARD32)&#32;(0xffffffffu&#32;*&#32;(<emphasis role="keywordtype">double</emphasis>)&#32;opacity);
2721 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_WINDOW_OPACITY,&#32;XA_CARDINAL,&#32;32,
2723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeReplace,&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;&amp;<link linkend="_glad_8h_1a79169be77d7e02a24f68a5bfe627dc29">value</link>,&#32;1);
2724 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ad800e4257745e15b95c892d3d0c3ed3c"/>    <section>
    <title>_glfwSetWindowPosX11()</title>
<indexterm><primary>_glfwSetWindowPosX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowPosX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowPosX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int xpos, int ypos)</computeroutput></para><para>
Definition at line 2132 of file x11_window.c.</para>
<programlisting>2133 {
2134 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Explicitly&#32;setting&#32;PPosition&#32;to&#32;any&#32;value&#32;causes&#32;some&#32;WMs,&#32;notably</emphasis>
2135 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Compiz&#32;and&#32;Metacity,&#32;to&#32;honor&#32;the&#32;position&#32;of&#32;unmapped&#32;windows</emphasis>
2136 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2137 &#32;&#32;&#32;&#32;{
2138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;supplied;
2139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XSizeHints*&#32;hints&#32;=&#32;<link linkend="_x11__platform_8h_1af266dee10e30fa9c539af48cbe13d888">XAllocSizeHints</link>();
2140 
2141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__platform_8h_1ad75868cad906e5ace1918594d7ddf9d0">XGetWMNormalHints</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;hints,&#32;&amp;supplied))
2142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints-&gt;flags&#32;|=&#32;PPosition;
2144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints-&gt;x&#32;=&#32;hints-&gt;y&#32;=&#32;0;
2145 
2146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a98c79b7f633e36dc1f3e4db9bf599a6c">XSetWMNormalHints</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;hints);
2147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2148 
2149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac5e57c89cd1e963b41f12b3404b42ca8">XFree</link>(hints);
2150 &#32;&#32;&#32;&#32;}
2151 
2152 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a5de3c390edbd8964f5876db1b1030bfe">XMoveWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;xpos,&#32;ypos);
2153 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2154 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ab948125b6e8c83729aea56ae257ba77d"/>    <section>
    <title>_glfwSetWindowResizableX11()</title>
<indexterm><primary>_glfwSetWindowResizableX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowResizableX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowResizableX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, <link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> enabled)</computeroutput></para><para>
Definition at line 2580 of file x11_window.c.</para>
<programlisting>2581 {
2582 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
2583 &#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a125270daf8648431cface131ee9f4530">_glfwGetWindowSizeX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2584 &#32;&#32;&#32;&#32;updateNormalHints(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2585 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a23924c95f1a773326d0243fbb1cf6e2f"/>    <section>
    <title>_glfwSetWindowSizeLimitsX11()</title>
<indexterm><primary>_glfwSetWindowSizeLimitsX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowSizeLimitsX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeLimitsX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int minwidth, int minheight, int maxwidth, int maxheight)</computeroutput></para><para>
Definition at line 2185 of file x11_window.c.</para>
<programlisting>2188 {
2189 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
2190 &#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a125270daf8648431cface131ee9f4530">_glfwGetWindowSizeX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2191 &#32;&#32;&#32;&#32;updateNormalHints(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2192 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2193 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1af651ee2787bb80d68e410aa6d59d8f2c"/>    <section>
    <title>_glfwSetWindowSizeX11()</title>
<indexterm><primary>_glfwSetWindowSizeX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowSizeX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowSizeX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, int width, int height)</computeroutput></para><para>
Definition at line 2167 of file x11_window.c.</para>
<programlisting>2168 {
2169 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor)
2170 &#32;&#32;&#32;&#32;{
2171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;monitor-&gt;window&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
2172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;acquireMonitor(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2173 &#32;&#32;&#32;&#32;}
2174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
2175 &#32;&#32;&#32;&#32;{
2176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;resizable)
2177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateNormalHints(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2178 
2179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a9024cfb6eaab1baf020279889cdb979b">XResizeWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
2180 &#32;&#32;&#32;&#32;}
2181 
2182 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2183 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a4badec7bf08e7474f6e81b7f1de3b46e"/>    <section>
    <title>_glfwSetWindowTitleX11()</title>
<indexterm><primary>_glfwSetWindowTitleX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwSetWindowTitleX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwSetWindowTitleX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window, const char * title)</computeroutput></para><para>
Definition at line 2044 of file x11_window.c.</para>
<programlisting>2045 {
2046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.xlib.utf8)
2047 &#32;&#32;&#32;&#32;{
2048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a0eda7ab25d7ecfe4a778607df434dc5c">Xutf8SetWMProperties</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
2049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;title,&#32;title,
2051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,
2052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2053 &#32;&#32;&#32;&#32;}
2054 
2055 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_NAME,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.UTF8_STRING,&#32;8,
2057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeReplace,
2058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;title,&#32;strlen(title));
2059 
2060 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae6818e11b66da9492b2e5b7a528bf7fd">XChangeProperty</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_ICON_NAME,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.UTF8_STRING,&#32;8,
2062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PropModeReplace,
2063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)&#32;title,&#32;strlen(title));
2064 
2065 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a7a3d4d1be0eae45237becde91c303782">XFlush</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>);
2066 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a34bb415958ed3a377cc99442778f058c"/>    <section>
    <title>_glfwShowWindowX11()</title>
<indexterm><primary>_glfwShowWindowX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwShowWindowX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwShowWindowX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2391 of file x11_window.c.</para>
<programlisting>2392 {
2393 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60">_glfwWindowVisibleX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
2394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
2395 
2396 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ae77204b7517dcdc141f3eb9de27d1340">XMapWindow</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle);
2397 &#32;&#32;&#32;&#32;waitForVisibilityNotify(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
2398 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1aa44a5f074685d0bda9da5970249faf14"/>    <section>
    <title>_glfwWaitEventsTimeoutX11()</title>
<indexterm><primary>_glfwWaitEventsTimeoutX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwWaitEventsTimeoutX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsTimeoutX11 (double timeout)</computeroutput></para><para>
Definition at line 2788 of file x11_window.c.</para>
<programlisting>2789 {
2790 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_x11__platform_8h_1a499650608c63f1253497f8e698962fba">XPending</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>))
2791 &#32;&#32;&#32;&#32;{
2792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!waitForEvent(&amp;<link linkend="_glad_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>))
2793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2794 &#32;&#32;&#32;&#32;}
2795 
2796 &#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1ad84c2d4d3e0f5648751c195d4c61b234">_glfwPollEventsX11</link>();
2797 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a7c877f83811e16fcbfd53642378545bf"/>    <section>
    <title>_glfwWaitEventsX11()</title>
<indexterm><primary>_glfwWaitEventsX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwWaitEventsX11</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwWaitEventsX11 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 2780 of file x11_window.c.</para>
<programlisting>2781 {
2782 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_x11__platform_8h_1a499650608c63f1253497f8e698962fba">XPending</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>))
2783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;waitForEvent(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
2784 
2785 &#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1ad84c2d4d3e0f5648751c195d4c61b234">_glfwPollEventsX11</link>();
2786 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1aafe5a5b783aefa0de1db8052e672b43d"/>    <section>
    <title>_glfwWindowFocusedX11()</title>
<indexterm><primary>_glfwWindowFocusedX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwWindowFocusedX11</secondary></indexterm>
<para><computeroutput>int _glfwWindowFocusedX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2489 of file x11_window.c.</para>
<programlisting>2490 {
2491 &#32;&#32;&#32;&#32;Window&#32;focused;
2492 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;state;
2493 
2494 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a4314d45c1f48625d64806b32bcc87663">XGetInputFocus</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;&amp;focused,&#32;&amp;state);
2495 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle&#32;==&#32;focused;
2496 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ab32c0aad046a078667051c3606f18c1f"/>    <section>
    <title>_glfwWindowHoveredX11()</title>
<indexterm><primary>_glfwWindowHoveredX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwWindowHoveredX11</secondary></indexterm>
<para><computeroutput>int _glfwWindowHoveredX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2544 of file x11_window.c.</para>
<programlisting>2545 {
2546 &#32;&#32;&#32;&#32;Window&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.root;
2547 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>)
2548 &#32;&#32;&#32;&#32;{
2549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Window&#32;root;
2550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;rootX,&#32;rootY,&#32;childX,&#32;childY;
2551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>;
2552 
2553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__init_8c_1ac91795c020fc3d64cabfe8bacb141185">_glfwGrabErrorHandlerX11</link>();
2554 
2555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Bool&#32;<link linkend="_structresult">result</link>&#32;=&#32;<link linkend="_x11__platform_8h_1abd31eec92422bb86d454d5d3bc8a81a8">XQueryPointer</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,
2556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;root,&#32;&amp;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,&#32;&amp;rootX,&#32;&amp;rootY,
2557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;childX,&#32;&amp;childY,&#32;&amp;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>);
2558 
2559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__init_8c_1a2fec8c7a77c8004f943f25914dc947d9">_glfwReleaseErrorHandlerX11</link>();
2560 
2561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.errorCode&#32;==&#32;BadWindow)
2562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.root;
2563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_structresult">result</link>)
2564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>&#32;==&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle)
2566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
2567 &#32;&#32;&#32;&#32;}
2568 
2569 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2570 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a4eb265fb72bcf2b67814da8a4ef20820"/>    <section>
    <title>_glfwWindowIconifiedX11()</title>
<indexterm><primary>_glfwWindowIconifiedX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwWindowIconifiedX11</secondary></indexterm>
<para><computeroutput>int _glfwWindowIconifiedX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2498 of file x11_window.c.</para>
<programlisting>2499 {
2500 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getWindowState(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)&#32;==&#32;IconicState;
2501 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1ac14bf368e5e4f92682c9c7d9f9d1e545"/>    <section>
    <title>_glfwWindowMaximizedX11()</title>
<indexterm><primary>_glfwWindowMaximizedX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwWindowMaximizedX11</secondary></indexterm>
<para><computeroutput>int _glfwWindowMaximizedX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2510 of file x11_window.c.</para>
<programlisting>2511 {
2512 &#32;&#32;&#32;&#32;Atom*&#32;states;
2513 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link>&#32;maximized&#32;=&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
2514 
2515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE&#32;||
2516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_VERT&#32;||
2517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_HORZ)
2518 &#32;&#32;&#32;&#32;{
2519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;maximized;
2520 &#32;&#32;&#32;&#32;}
2521 
2522 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=
2523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__window_8c_1a889b3172437e770a55812b569e1a93bd">_glfwGetWindowPropertyX11</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,
2524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE,
2525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XA_ATOM,
2526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>**)&#32;&amp;states);
2527 
2528 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;i&#32;=&#32;0;&#32;&#32;i&#32;&lt;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;&#32;&#32;i++)
2529 &#32;&#32;&#32;&#32;{
2530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states[i]&#32;==&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_VERT&#32;||
2531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;states[i]&#32;==&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.NET_WM_STATE_MAXIMIZED_HORZ)
2532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
2533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximized&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
2534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
2535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
2536 &#32;&#32;&#32;&#32;}
2537 
2538 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(states)
2539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1ac5e57c89cd1e963b41f12b3404b42ca8">XFree</link>(states);
2540 
2541 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;maximized;
2542 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a6a32922e51a0082089847a84495eeb60"/>    <section>
    <title>_glfwWindowVisibleX11()</title>
<indexterm><primary>_glfwWindowVisibleX11</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>_glfwWindowVisibleX11</secondary></indexterm>
<para><computeroutput>int _glfwWindowVisibleX11 (<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 2503 of file x11_window.c.</para>
<programlisting>2504 {
2505 &#32;&#32;&#32;&#32;XWindowAttributes&#32;wa;
2506 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1a91d1286ff9603a6a3e1eada719b67c01">XGetWindowAttributes</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle,&#32;&amp;wa);
2507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;wa.map_state&#32;==&#32;IsViewable;
2508 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1aea26dc4fa7dec0233c7629697a13af32"/>    <section>
    <title>glfwGetX11Display()</title>
<indexterm><primary>glfwGetX11Display</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>glfwGetX11Display</secondary></indexterm>
<para><computeroutput><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> Display* glfwGetX11Display (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 3239 of file x11_window.c.</para>
<programlisting>3240 {
3241 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3242 
3243 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>.<link linkend="_struct___g_l_f_wplatform_1adadc0cac5c197cc28788bc4993a9f6da">platformID</link>&#32;!=&#32;<link linkend="_group__init_1gaf5333f3933e9c248a00cfda6523f386b">GLFW_PLATFORM_X11</link>)
3244 &#32;&#32;&#32;&#32;{
3245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,&#32;<emphasis role="stringliteral">&quot;X11:&#32;Platform&#32;not&#32;initialized&quot;</emphasis>);
3246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3247 &#32;&#32;&#32;&#32;}
3248 
3249 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>;
3250 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a645e6fa1dfc30daf5e5f57b5b7dd5973"/>    <section>
    <title>glfwGetX11SelectionString()</title>
<indexterm><primary>glfwGetX11SelectionString</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>glfwGetX11SelectionString</secondary></indexterm>
<para><computeroutput>const <link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> char* glfwGetX11SelectionString (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 3292 of file x11_window.c.</para>
<programlisting>3293 {
3294 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
3295 
3296 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>.<link linkend="_struct___g_l_f_wplatform_1adadc0cac5c197cc28788bc4993a9f6da">platformID</link>&#32;!=&#32;<link linkend="_group__init_1gaf5333f3933e9c248a00cfda6523f386b">GLFW_PLATFORM_X11</link>)
3297 &#32;&#32;&#32;&#32;{
3298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,&#32;<emphasis role="stringliteral">&quot;X11:&#32;Platform&#32;not&#32;initialized&quot;</emphasis>);
3299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
3300 &#32;&#32;&#32;&#32;}
3301 
3302 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSelectionString(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.PRIMARY);
3303 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a9473ab58f12e7b0a27ba405b7802adb9"/>    <section>
    <title>glfwGetX11Window()</title>
<indexterm><primary>glfwGetX11Window</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>glfwGetX11Window</secondary></indexterm>
<para><computeroutput><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> Window glfwGetX11Window (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * handle)</computeroutput></para><para>
Definition at line 3252 of file x11_window.c.</para>
<programlisting>3253 {
3254 &#32;&#32;&#32;&#32;<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;(<link linkend="_struct___g_l_f_wwindow">_GLFWwindow</link>*)&#32;handle;
3255 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1a69563c87fe776d416636a4d1b0e9e599">_GLFW_REQUIRE_INIT_OR_RETURN</link>(None);
3256 
3257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>.<link linkend="_struct___g_l_f_wplatform_1adadc0cac5c197cc28788bc4993a9f6da">platformID</link>&#32;!=&#32;<link linkend="_group__init_1gaf5333f3933e9c248a00cfda6523f386b">GLFW_PLATFORM_X11</link>)
3258 &#32;&#32;&#32;&#32;{
3259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,&#32;<emphasis role="stringliteral">&quot;X11:&#32;Platform&#32;not&#32;initialized&quot;</emphasis>);
3260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;None;
3261 &#32;&#32;&#32;&#32;}
3262 
3263 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>-&gt;x11.handle;
3264 }
</programlisting>    </section><anchor xml:id="_x11__window_8c_1a4f4eb55968415e78955d5a6104b6596c"/>    <section>
    <title>glfwSetX11SelectionString()</title>
<indexterm><primary>glfwSetX11SelectionString</primary><secondary>x11_window.c</secondary></indexterm>
<indexterm><primary>x11_window.c</primary><secondary>glfwSetX11SelectionString</secondary></indexterm>
<para><computeroutput><link linkend="_glfw3_8h_1a56da5036b2cc259351ae22fd6439bb47">GLFWAPI</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glfwSetX11SelectionString (const char * string)</computeroutput></para><para>
Definition at line 3266 of file x11_window.c.</para>
<programlisting>3267 {
3268 &#32;&#32;&#32;&#32;<link linkend="_internal_8h_1aefaae289f758535cd19343d0120b9715">_GLFW_REQUIRE_INIT</link>();
3269 
3270 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.<link linkend="_struct___g_l_f_wlibrary_1a93b1c9522ac532d94b32072cf4bf1421">platform</link>.<link linkend="_struct___g_l_f_wplatform_1adadc0cac5c197cc28788bc4993a9f6da">platformID</link>&#32;!=&#32;<link linkend="_group__init_1gaf5333f3933e9c248a00cfda6523f386b">GLFW_PLATFORM_X11</link>)
3271 &#32;&#32;&#32;&#32;{
3272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1ga3608c6c29ab7a72f3bf019f4c3a2563d">GLFW_PLATFORM_UNAVAILABLE</link>,&#32;<emphasis role="stringliteral">&quot;X11:&#32;Platform&#32;not&#32;initialized&quot;</emphasis>);
3273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
3274 &#32;&#32;&#32;&#32;}
3275 
3276 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.primarySelectionString);
3277 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.primarySelectionString&#32;=&#32;<link linkend="_init_8c_1a7f0a5b0d879baead229ef5e7381648e8">_glfw_strdup</link>(<emphasis role="keywordtype">string</emphasis>);
3278 
3279 &#32;&#32;&#32;&#32;<link linkend="_x11__platform_8h_1aa43586ffa612a5cb445871a1fa2a309e">XSetSelectionOwner</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,
3280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.PRIMARY,
3281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.helperWindowHandle,
3282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CurrentTime);
3283 
3284 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_x11__platform_8h_1ab468f859fad6bccf9742764ff42ec311">XGetSelectionOwner</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.<link linkend="_struct___g_l_f_wlibrary_1a635044e02e1f98df1de3775ecac52569">display</link>,&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.PRIMARY)&#32;!=
3285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.x11.helperWindowHandle)
3286 &#32;&#32;&#32;&#32;{
3287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
3288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;X11:&#32;Failed&#32;to&#32;become&#32;owner&#32;of&#32;primary&#32;selection&quot;</emphasis>);
3289 &#32;&#32;&#32;&#32;}
3290 }
</programlisting></section>
</section>
</section>
