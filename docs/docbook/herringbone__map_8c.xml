<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_herringbone__map_8c">
<title>deps/stb/tests/herringbone_map.c File Reference</title>
<indexterm><primary>deps/stb/tests/herringbone_map.c</primary></indexterm>
<programlisting>#include &lt;stdio.h&gt;
#include &quot;stb_herringbone_wang_tile.h&quot;
#include &quot;stb_image.h&quot;
#include &quot;stb_image_write.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_herringbone__map_8c_1ac502f6bf3ec7c0a781eaedff6053ad1c">STB_HBWANG_MAX_X</link>   500</para>
</listitem>
            <listitem><para>#define <link linkend="_herringbone__map_8c_1a2fd28ffddfebb97afefc5a854ff11d6f">STB_HBWANG_MAX_Y</link>   500</para>
</listitem>
            <listitem><para>#define <link linkend="_herringbone__map_8c_1a5fac6eca2f208808778d607599e12ef2">STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_herringbone__map_8c_1a18372412ad2fc3ce1e3240b3cf0efe78">STB_IMAGE_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_herringbone__map_8c_1aefe397a94e8feddc652f92ef40ce9597">STB_IMAGE_WRITE_IMPLEMENTATION</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_herringbone__map_8c_1a3c04138a5bfe5d72780bb7e82a18e627">main</link> (int argc, char **argv)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_herringbone__map_8c_1ac502f6bf3ec7c0a781eaedff6053ad1c"/>    <section>
    <title>STB_HBWANG_MAX_X</title>
<indexterm><primary>STB_HBWANG_MAX_X</primary><secondary>herringbone_map.c</secondary></indexterm>
<indexterm><primary>herringbone_map.c</primary><secondary>STB_HBWANG_MAX_X</secondary></indexterm>
<para><computeroutput>#define STB_HBWANG_MAX_X   500</computeroutput></para><para>
Definition at line 3 of file herringbone_map.c.</para>
    </section><anchor xml:id="_herringbone__map_8c_1a2fd28ffddfebb97afefc5a854ff11d6f"/>    <section>
    <title>STB_HBWANG_MAX_Y</title>
<indexterm><primary>STB_HBWANG_MAX_Y</primary><secondary>herringbone_map.c</secondary></indexterm>
<indexterm><primary>herringbone_map.c</primary><secondary>STB_HBWANG_MAX_Y</secondary></indexterm>
<para><computeroutput>#define STB_HBWANG_MAX_Y   500</computeroutput></para><para>
Definition at line 4 of file herringbone_map.c.</para>
    </section><anchor xml:id="_herringbone__map_8c_1a5fac6eca2f208808778d607599e12ef2"/>    <section>
    <title>STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION</title>
<indexterm><primary>STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION</primary><secondary>herringbone_map.c</secondary></indexterm>
<indexterm><primary>herringbone_map.c</primary><secondary>STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION</computeroutput></para><para>
Definition at line 6 of file herringbone_map.c.</para>
    </section><anchor xml:id="_herringbone__map_8c_1a18372412ad2fc3ce1e3240b3cf0efe78"/>    <section>
    <title>STB_IMAGE_IMPLEMENTATION</title>
<indexterm><primary>STB_IMAGE_IMPLEMENTATION</primary><secondary>herringbone_map.c</secondary></indexterm>
<indexterm><primary>herringbone_map.c</primary><secondary>STB_IMAGE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define STB_IMAGE_IMPLEMENTATION</computeroutput></para><para>
Definition at line 9 of file herringbone_map.c.</para>
    </section><anchor xml:id="_herringbone__map_8c_1aefe397a94e8feddc652f92ef40ce9597"/>    <section>
    <title>STB_IMAGE_WRITE_IMPLEMENTATION</title>
<indexterm><primary>STB_IMAGE_WRITE_IMPLEMENTATION</primary><secondary>herringbone_map.c</secondary></indexterm>
<indexterm><primary>herringbone_map.c</primary><secondary>STB_IMAGE_WRITE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define STB_IMAGE_WRITE_IMPLEMENTATION</computeroutput></para><para>
Definition at line 12 of file herringbone_map.c.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_herringbone__map_8c_1a3c04138a5bfe5d72780bb7e82a18e627"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>herringbone_map.c</secondary></indexterm>
<indexterm><primary>herringbone_map.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (int argc, char ** argv)</computeroutput></para><para>
Definition at line 15 of file herringbone_map.c.</para>
<programlisting>16 {
17 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(argc&#32;&lt;&#32;5)&#32;{
18 &#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Usage:&#32;herringbone_map&#32;{inputfile}&#32;{output-width}&#32;{output-height}&#32;{outputfile}\n&quot;</emphasis>);
19 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
20 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
21 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*filename&#32;=&#32;argv[1];
22 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_w&#32;=&#32;atoi(argv[2]);
23 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;out_h&#32;=&#32;atoi(argv[3]);
24 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*outfile&#32;=&#32;argv[4];
25 
26 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>,&#32;*out_pixels;
27 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structstbhw__tileset">stbhw_tileset</link>&#32;ts;
28 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>;
29 
30 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>&#32;=&#32;<link linkend="_stb__image_8c_1a6e3bfbdf11886669cd2153c1136f29db">stbi_load</link>(filename,&#32;&amp;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,&#32;&amp;<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>,&#32;0,&#32;3);
31 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>&#32;==&#32;0)&#32;{
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Couldn&apos;t&#32;open&#32;input&#32;file&#32;&apos;%s&apos;\n&quot;</emphasis>,&#32;filename);
33 &#32;&#32;&#32;&#32;&#32;&#32;exit(1);
34 &#32;&#32;&#32;&#32;&#32;&#32;}
35 
36 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_stb__herringbone__wang__tile_8h_1ab78f455914fcfdd6d81869ff4d8e944e">stbhw_build_tileset_from_image</link>(&amp;ts,&#32;<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>,&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>*3,&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,&#32;<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>))&#32;{
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Error:&#32;%s\n&quot;</emphasis>,&#32;<link linkend="_stb__herringbone__wang__tile_8h_1ab16527d4a1675dcf33e22cb1b312c73a">stbhw_get_last_error</link>());
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
39 &#32;&#32;&#32;&#32;&#32;&#32;}
40 
41 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>);
42 
43 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;DEBUG_OUTPUT</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,j,k;
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;blue&#32;borders&#32;to&#32;top-left&#32;edges&#32;of&#32;the&#32;tiles</emphasis>
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hstride&#32;=&#32;(ts.<link linkend="_structstbhw__tileset_1aeeb42404735a2b94e366f737b9b2ecec">short_side_len</link>*2)*3;
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glext_8h_1a5a7772f7703473eb7376ccb182a0c960">vstride</link>&#32;=&#32;(ts.<link linkend="_structstbhw__tileset_1aeeb42404735a2b94e366f737b9b2ecec">short_side_len</link>&#32;&#32;)*3;
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;ts.<link linkend="_structstbhw__tileset_1ab98c03e3cff56b898644d2421245508a">num_h_tiles</link>;&#32;++i)&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pix&#32;=&#32;ts.<link linkend="_structstbhw__tileset_1ae01780a7755cdcd7eb378f36325134bf">h_tiles</link>[i]-&gt;<link linkend="_structstbhw__tile_1aeee432089fc26df1d8a8f687babade0b">pixels</link>;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;ts.<link linkend="_structstbhw__tileset_1aeeb42404735a2b94e366f737b9b2ecec">short_side_len</link>*2;&#32;++j)
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;3;&#32;++k)
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pix[j*3+k]&#32;=&#32;(pix[j*3+k]*0.5+100+k*75)/1.5;
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=1;&#32;j&#32;&lt;&#32;ts.<link linkend="_structstbhw__tileset_1aeeb42404735a2b94e366f737b9b2ecec">short_side_len</link>;&#32;++j)
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;3;&#32;++k)
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pix[j*hstride+k]&#32;=&#32;(pix[j*hstride+k]*0.5+100+k*75)/1.5;
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;ts.<link linkend="_structstbhw__tileset_1a9960f840ecb4bdf7f5d9a0203cdf15b0">num_v_tiles</link>;&#32;++i)&#32;{
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pix&#32;=&#32;ts.<link linkend="_structstbhw__tileset_1a46098bf759f62463d86430557640d888">v_tiles</link>[i]-&gt;<link linkend="_structstbhw__tile_1aeee432089fc26df1d8a8f687babade0b">pixels</link>;
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=0;&#32;j&#32;&lt;&#32;ts.<link linkend="_structstbhw__tileset_1aeeb42404735a2b94e366f737b9b2ecec">short_side_len</link>;&#32;++j)
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;3;&#32;++k)
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pix[j*3+k]&#32;=&#32;(pix[j*3+k]*0.5+100+k*75)/1.5;
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j=1;&#32;j&#32;&lt;&#32;ts.<link linkend="_structstbhw__tileset_1aeeb42404735a2b94e366f737b9b2ecec">short_side_len</link>*2;&#32;++j)
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;&#32;k&#32;&lt;&#32;3;&#32;++k)
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pix[j*<link linkend="_glext_8h_1a5a7772f7703473eb7376ccb182a0c960">vstride</link>+k]&#32;=&#32;(pix[j*<link linkend="_glext_8h_1a5a7772f7703473eb7376ccb182a0c960">vstride</link>+k]*0.5+100+k*75)/1.5;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
67 &#32;&#32;&#32;&#32;&#32;&#32;}
68 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
69 
70 &#32;&#32;&#32;&#32;&#32;&#32;out_pixels&#32;=&#32;<link linkend="_stb__leakcheck_8h_1ac71ce303a4b993665ae00f1e1293ba8b">malloc</link>(out_w&#32;*&#32;out_h&#32;*&#32;3);
71 
72 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_stb__herringbone__wang__tile_8h_1affacb0cc9ceed70b9d21221b0b957b61">stbhw_generate_image</link>(&amp;ts,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;out_pixels,&#32;out_w*3,&#32;out_w,&#32;out_h))&#32;{
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Error:&#32;%s\n&quot;</emphasis>,&#32;<link linkend="_stb__herringbone__wang__tile_8h_1ab16527d4a1675dcf33e22cb1b312c73a">stbhw_get_last_error</link>());
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
75 &#32;&#32;&#32;&#32;&#32;&#32;}
76 
77 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glfw_2deps_2stb__image__write_8h_1a9c03e5171f6aea47fde6dafcf3249ccf">stbi_write_png</link>(argv[4],&#32;out_w,&#32;out_h,&#32;3,&#32;out_pixels,&#32;out_w*3);
78 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__leakcheck_8h_1a9d4b5df3530d1bc733070a4669ba6ebc">free</link>(out_pixels);
79 
80 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__herringbone__wang__tile_8h_1a49f4e60e1d1dd0c8fdc89a48cac92a4b">stbhw_free_tileset</link>(&amp;ts);
81 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
82 &#32;&#32;&#32;}
83 }
</programlisting></section>
</section>
</section>
