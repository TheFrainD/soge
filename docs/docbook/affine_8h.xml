<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_affine_8h">
<title>deps/cglm/include/cglm/affine.h File Reference</title>
<indexterm><primary>deps/cglm/include/cglm/affine.h</primary></indexterm>
<programlisting>#include &quot;common.h&quot;
#include &quot;util.h&quot;
#include &quot;vec3.h&quot;
#include &quot;vec4.h&quot;
#include &quot;mat4.h&quot;
#include &quot;affine-mat.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a0ce47d9b56e358ae2953be8835e799d7">glm_translate</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>translate existing transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1ae0bdacf83c756c3e0a552115279a160c">glm_translate_to</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</para>

<para>translate existing transform matrix by v vector and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1af641771d8f2db1c0edf476db1954ea20">glm_translate_x</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)</para>

<para>translate existing transform matrix by x factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1ac66710c48849b5e4d855099e0a0e425c">glm_translate_y</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>

<para>translate existing transform matrix by y factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a4485009dfa1b044f41f775431ed473b5">glm_translate_z</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>)</para>

<para>translate existing transform matrix by z factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a511b571151c53ecc052f5cf74c6a01b9">glm_translate_make</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW translate transform matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1afe481664990782be30ae985ea897350f">glm_scale_to</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</para>

<para>scale existing transform matrix by v vector and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a2245fa29db156c6c9adda3e3a98cae5e">glm_scale_make</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW scale matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a230eb9d665cf54a62241105ef4566153">glm_scale</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>scales existing transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a167b8ff0f0033ccda49a3a489e680979">glm_scale_uni</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>applies uniform scale to existing transform matrix v = [s, s, s] and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1abf89acdc4112fcf28c0c410e1ce6bbfc">glm_rotate_x</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</para>

<para>rotate existing transform matrix around X axis by angle and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a8e70c3eb632a262a1a7e28ec2f2fbbc6">glm_rotate_y</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</para>

<para>rotate existing transform matrix around Y axis by angle and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a357ddc92e648c2c0758851f80b6302ce">glm_rotate_z</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</para>

<para>rotate existing transform matrix around Z axis by angle and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a0f775feca38e09eda5f2498aa2ec25bc">glm_rotate_make</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</para>

<para>creates NEW rotation matrix by angle and axis </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1aa2cece9335958a3a22540f18a25e9aef">glm_rotate</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</para>

<para>rotate existing transform matrix around given axis by angle </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a32201d384002e1d02c791b6fecb31ea4">glm_rotate_at</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> pivot, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</para>

<para>rotate existing transform around given axis by angle at given pivot point (rotation center) </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1adfd4106136fc0f05f9b1a4d1c80d3160">glm_rotate_atm</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> pivot, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</para>

<para>creates NEW rotation matrix by angle and axis at given point </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1a80b9435d9ed5093c4162b5291eb2136a">glm_decompose_scalev</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>decompose scale vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> bool <link linkend="_affine_8h_1aa6434902842e7bfe3110f01b79f219ff">glm_uniscaled</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>)</para>

<para>returns true if matrix is uniform scaled. This is helpful for creating normal matrix. </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1acfe6e6dd7ee85061cd604a5e2d30d7be">glm_decompose_rs</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>decompose rotation matrix (mat4) and scale vector [Sx, Sy, Sz] DON&apos;T pass projected matrix here </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine_8h_1ac840453c0577f549bd80d04e8cbeb136">glm_decompose</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, vec4 <link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> <link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>decompose affine transform, TODO: extract shear factors. DON&apos;T pass projected matrix here </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_affine_8h_1ac840453c0577f549bd80d04e8cbeb136"/>    <section>
    <title>glm_decompose()</title>
<indexterm><primary>glm_decompose</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_decompose</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_decompose (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, vec4 t, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> r, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> s)</computeroutput></para><para>

<para>decompose affine transform, TODO: extract shear factors. DON&apos;T pass projected matrix here </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>t</entry>
                                <entry>
<para>translation vector </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>r</entry>
                                <entry>
<para>rotation matrix (mat4) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>s</entry>
                                <entry>
<para>scaling vector [X, Y, Z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 465 of file affine.h.</para>
<programlisting>465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
466 &#32;&#32;<link linkend="_vec4_8h_1a6bc398f48a0f602dff96819a693f154d">glm_vec4_copy</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>);
467 &#32;&#32;<link linkend="_affine_8h_1acfe6e6dd7ee85061cd604a5e2d30d7be">glm_decompose_rs</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
468 }
</programlisting>    </section><anchor xml:id="_affine_8h_1acfe6e6dd7ee85061cd604a5e2d30d7be"/>    <section>
    <title>glm_decompose_rs()</title>
<indexterm><primary>glm_decompose_rs</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_decompose_rs</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_decompose_rs (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> r, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> s)</computeroutput></para><para>

<para>decompose rotation matrix (mat4) and scale vector [Sx, Sy, Sz] DON&apos;T pass projected matrix here </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transform </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>r</entry>
                                <entry>
<para>rotation matrix </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>s</entry>
                                <entry>
<para>scale matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 425 of file affine.h.</para>
<programlisting>425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
426 &#32;&#32;<link linkend="_types_8h_1a7a85e572ca5b793f224bae1ed1a827a1">CGLM_ALIGN</link>(16)&#32;vec4&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>&#32;=&#32;{0.0f,&#32;0.0f,&#32;0.0f,&#32;1.0f};
427 &#32;&#32;<link linkend="_types_8h_1a7a85e572ca5b793f224bae1ed1a827a1">CGLM_ALIGN</link>(8)&#32;&#32;<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>;
428 
429 &#32;&#32;<link linkend="_vec4_8h_1a6bc398f48a0f602dff96819a693f154d">glm_vec4_copy</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0],&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[0]);
430 &#32;&#32;<link linkend="_vec4_8h_1a6bc398f48a0f602dff96819a693f154d">glm_vec4_copy</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1],&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[1]);
431 &#32;&#32;<link linkend="_vec4_8h_1a6bc398f48a0f602dff96819a693f154d">glm_vec4_copy</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2],&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[2]);
432 &#32;&#32;<link linkend="_vec4_8h_1a6bc398f48a0f602dff96819a693f154d">glm_vec4_copy</link>(<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>,&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[3]);
433 
434 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[0]&#32;=&#32;<link linkend="_vec3_8h_1a38a72a711e3317b1402715614cea417f">glm_vec3_norm</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0]);
435 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[1]&#32;=&#32;<link linkend="_vec3_8h_1a38a72a711e3317b1402715614cea417f">glm_vec3_norm</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1]);
436 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[2]&#32;=&#32;<link linkend="_vec3_8h_1a38a72a711e3317b1402715614cea417f">glm_vec3_norm</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2]);
437 
438 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[0],&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>/<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[0],&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[0]);
439 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[1],&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>/<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[1],&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[1]);
440 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[2],&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>/<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[2],&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[2]);
441 
442 &#32;&#32;<emphasis role="comment">/*&#32;Note&#32;from&#32;Apple&#32;Open&#32;Source&#32;(assume&#32;that&#32;the&#32;matrix&#32;is&#32;orthonormal):</emphasis>
443 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;check&#32;for&#32;a&#32;coordinate&#32;system&#32;flip.&#32;&#32;If&#32;the&#32;determinant</emphasis>
444 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;is&#32;-1,&#32;then&#32;negate&#32;the&#32;matrix&#32;and&#32;the&#32;scaling&#32;factors.&#32;*/</emphasis>
445 &#32;&#32;<link linkend="_vec3_8h_1a9b37e0be5c51a04a7572c9626a5a8b8e">glm_vec3_cross</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1],&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>);
446 &#32;&#32;if&#32;(<link linkend="_vec3_8h_1a8ec5a23c5a16ea70f11a4b24ef15e4db">glm_vec3_dot</link>(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2])&#32;&lt;&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>)&#32;{
447 &#32;&#32;&#32;&#32;<link linkend="_vec4_8h_1a1cca78b3741019537b2e78905c8d87b1">glm_vec4_negate</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[0]);
448 &#32;&#32;&#32;&#32;<link linkend="_vec4_8h_1a1cca78b3741019537b2e78905c8d87b1">glm_vec4_negate</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[1]);
449 &#32;&#32;&#32;&#32;<link linkend="_vec4_8h_1a1cca78b3741019537b2e78905c8d87b1">glm_vec4_negate</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>[2]);
450 &#32;&#32;&#32;&#32;<link linkend="_vec3_8h_1a0670d5409499b75435fc5caed9e712aa">glm_vec3_negate</link>(<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
451 &#32;&#32;}
452 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a80b9435d9ed5093c4162b5291eb2136a"/>    <section>
    <title>glm_decompose_scalev()</title>
<indexterm><primary>glm_decompose_scalev</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_decompose_scalev</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_decompose_scalev (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> s)</computeroutput></para><para>

<para>decompose scale vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transform </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>s</entry>
                                <entry>
<para>scale vector (Sx, Sy, Sz) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 393 of file affine.h.</para>
<programlisting>393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
394 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[0]&#32;=&#32;<link linkend="_vec3_8h_1a38a72a711e3317b1402715614cea417f">glm_vec3_norm</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0]);
395 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[1]&#32;=&#32;<link linkend="_vec3_8h_1a38a72a711e3317b1402715614cea417f">glm_vec3_norm</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1]);
396 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>[2]&#32;=&#32;<link linkend="_vec3_8h_1a38a72a711e3317b1402715614cea417f">glm_vec3_norm</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2]);
397 }
</programlisting>    </section><anchor xml:id="_affine_8h_1aa2cece9335958a3a22540f18a25e9aef"/>    <section>
    <title>glm_rotate()</title>
<indexterm><primary>glm_rotate</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_rotate</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float angle, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</computeroutput></para><para>

<para>rotate existing transform matrix around given axis by angle </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 333 of file affine.h.</para>
<programlisting>333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
334 &#32;&#32;<link linkend="_types_8h_1a8b0ff7d349466e900282bf2d8d9c98a3">CGLM_ALIGN_MAT</link>&#32;<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link>&#32;rot;
335 &#32;&#32;<link linkend="_affine_8h_1a0f775feca38e09eda5f2498aa2ec25bc">glm_rotate_make</link>(rot,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;axis);
336 &#32;&#32;<link linkend="_affine-mat_8h_1a2fb55157c4db3012b51795408e1b0561">glm_mul_rot</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;rot,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
337 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a32201d384002e1d02c791b6fecb31ea4"/>    <section>
    <title>glm_rotate_at()</title>
<indexterm><primary>glm_rotate_at</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_rotate_at</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate_at (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> pivot, float angle, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</computeroutput></para><para>

<para>rotate existing transform around given axis by angle at given pivot point (rotation center) </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>pivot</entry>
                                <entry>
<para>rotation center </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 350 of file affine.h.</para>
<programlisting>350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
351 &#32;&#32;<link linkend="_types_8h_1a7a85e572ca5b793f224bae1ed1a827a1">CGLM_ALIGN</link>(8)&#32;<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>&#32;pivotInv;
352 
353 &#32;&#32;<link linkend="_vec3_8h_1a37ff8dc4d79511b8cce1dfaecdba497c">glm_vec3_negate_to</link>(pivot,&#32;pivotInv);
354 
355 &#32;&#32;<link linkend="_affine_8h_1a0ce47d9b56e358ae2953be8835e799d7">glm_translate</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;pivot);
356 &#32;&#32;<link linkend="_affine_8h_1aa2cece9335958a3a22540f18a25e9aef">glm_rotate</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;axis);
357 &#32;&#32;<link linkend="_affine_8h_1a0ce47d9b56e358ae2953be8835e799d7">glm_translate</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;pivotInv);
358 }
</programlisting>    </section><anchor xml:id="_affine_8h_1adfd4106136fc0f05f9b1a4d1c80d3160"/>    <section>
    <title>glm_rotate_atm()</title>
<indexterm><primary>glm_rotate_atm</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_rotate_atm</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate_atm (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> pivot, float angle, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</computeroutput></para><para>

<para>creates NEW rotation matrix by angle and axis at given point </para>
</para>

<para>this creates rotation matrix, it assumes you don&apos;t have a matrix</para>

<para>this should work faster than glm_rotate_at because it reduces one glm_translate.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>pivot</entry>
                                <entry>
<para>rotation center </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 375 of file affine.h.</para>
<programlisting>375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
376 &#32;&#32;<link linkend="_types_8h_1a7a85e572ca5b793f224bae1ed1a827a1">CGLM_ALIGN</link>(8)&#32;<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>&#32;pivotInv;
377 
378 &#32;&#32;<link linkend="_vec3_8h_1a37ff8dc4d79511b8cce1dfaecdba497c">glm_vec3_negate_to</link>(pivot,&#32;pivotInv);
379 
380 &#32;&#32;<link linkend="_affine_8h_1a511b571151c53ecc052f5cf74c6a01b9">glm_translate_make</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;pivot);
381 &#32;&#32;<link linkend="_affine_8h_1aa2cece9335958a3a22540f18a25e9aef">glm_rotate</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>,&#32;axis);
382 &#32;&#32;<link linkend="_affine_8h_1a0ce47d9b56e358ae2953be8835e799d7">glm_translate</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;pivotInv);
383 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a0f775feca38e09eda5f2498aa2ec25bc"/>    <section>
    <title>glm_rotate_make()</title>
<indexterm><primary>glm_rotate_make</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_rotate_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate_make (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float angle, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> axis)</computeroutput></para><para>

<para>creates NEW rotation matrix by angle and axis </para>
</para>

<para>axis will be normalized so you don&apos;t need to normalize it</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>axis</entry>
                                <entry>
<para>axis </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 302 of file affine.h.</para>
<programlisting>302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
303 &#32;&#32;<link linkend="_types_8h_1a7a85e572ca5b793f224bae1ed1a827a1">CGLM_ALIGN</link>(8)&#32;<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>&#32;axisn,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>,&#32;vs;
304 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
305 
306 &#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;=&#32;cosf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
307 
308 &#32;&#32;<link linkend="_vec3_8h_1aead71de99414cfc01adc721cc7cfc506">glm_vec3_normalize_to</link>(axis,&#32;axisn);
309 &#32;&#32;<link linkend="_vec3_8h_1a785db7faafce737c8737a04e27b4499d">glm_vec3_scale</link>(axisn,&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>&#32;-&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>);
310 &#32;&#32;<link linkend="_vec3_8h_1a785db7faafce737c8737a04e27b4499d">glm_vec3_scale</link>(axisn,&#32;sinf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>),&#32;vs);
311 
312 &#32;&#32;<link linkend="_vec3_8h_1a785db7faafce737c8737a04e27b4499d">glm_vec3_scale</link>(axisn,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0]);
313 &#32;&#32;<link linkend="_vec3_8h_1a785db7faafce737c8737a04e27b4499d">glm_vec3_scale</link>(axisn,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1]);
314 &#32;&#32;<link linkend="_vec3_8h_1a785db7faafce737c8737a04e27b4499d">glm_vec3_scale</link>(axisn,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[2],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2]);
315 
316 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;+=&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;-=&#32;vs[2];&#32;&#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0]&#32;+=&#32;vs[1];
317 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;+=&#32;vs[2];&#32;&#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;+=&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1]&#32;-=&#32;vs[0];
318 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;-=&#32;vs[1];&#32;&#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;+=&#32;vs[0];&#32;&#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2]&#32;+=&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
319 
320 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][3]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][3]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][3]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3][2]&#32;=&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>;
321 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3][3]&#32;=&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>;
322 }
</programlisting>    </section><anchor xml:id="_affine_8h_1abf89acdc4112fcf28c0c410e1ce6bbfc"/>    <section>
    <title>glm_rotate_x()</title>
<indexterm><primary>glm_rotate_x</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_rotate_x</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate_x (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float angle, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</computeroutput></para><para>

<para>rotate existing transform matrix around X axis by angle and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>rotated matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 226 of file affine.h.</para>
<programlisting>226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
227 &#32;&#32;<link linkend="_types_8h_1a8b0ff7d349466e900282bf2d8d9c98a3">CGLM_ALIGN_MAT</link>&#32;<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link>&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>&#32;=&#32;<link linkend="_mat4_8h_1abddcd83f6c7501960b21d1118ee5574e">GLM_MAT4_IDENTITY_INIT</link>;
228 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
229 
230 &#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;=&#32;cosf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
231 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;=&#32;sinf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
232 
233 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[1][1]&#32;=&#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
234 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[1][2]&#32;=&#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
235 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[2][1]&#32;=&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
236 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[2][2]&#32;=&#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
237 
238 &#32;&#32;<link linkend="_affine-mat_8h_1a2fb55157c4db3012b51795408e1b0561">glm_mul_rot</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>,&#32;dest);
239 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a8e70c3eb632a262a1a7e28ec2f2fbbc6"/>    <section>
    <title>glm_rotate_y()</title>
<indexterm><primary>glm_rotate_y</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_rotate_y</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate_y (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float angle, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</computeroutput></para><para>

<para>rotate existing transform matrix around Y axis by angle and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>rotated matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 251 of file affine.h.</para>
<programlisting>251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
252 &#32;&#32;<link linkend="_types_8h_1a8b0ff7d349466e900282bf2d8d9c98a3">CGLM_ALIGN_MAT</link>&#32;<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link>&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>&#32;=&#32;<link linkend="_mat4_8h_1abddcd83f6c7501960b21d1118ee5574e">GLM_MAT4_IDENTITY_INIT</link>;
253 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
254 
255 &#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;=&#32;cosf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
256 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;=&#32;sinf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
257 
258 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[0][0]&#32;=&#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
259 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[0][2]&#32;=&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
260 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[2][0]&#32;=&#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
261 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[2][2]&#32;=&#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
262 
263 &#32;&#32;<link linkend="_affine-mat_8h_1a2fb55157c4db3012b51795408e1b0561">glm_mul_rot</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>,&#32;dest);
264 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a357ddc92e648c2c0758851f80b6302ce"/>    <section>
    <title>glm_rotate_z()</title>
<indexterm><primary>glm_rotate_z</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_rotate_z</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate_z (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float angle, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</computeroutput></para><para>

<para>rotate existing transform matrix around Z axis by angle and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>rotated matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 276 of file affine.h.</para>
<programlisting>276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
277 &#32;&#32;<link linkend="_types_8h_1a8b0ff7d349466e900282bf2d8d9c98a3">CGLM_ALIGN_MAT</link>&#32;<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link>&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>&#32;=&#32;<link linkend="_mat4_8h_1abddcd83f6c7501960b21d1118ee5574e">GLM_MAT4_IDENTITY_INIT</link>;
278 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
279 
280 &#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;=&#32;cosf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
281 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;=&#32;sinf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
282 
283 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[0][0]&#32;=&#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
284 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[0][1]&#32;=&#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
285 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[1][0]&#32;=&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
286 &#32;&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>[1][1]&#32;=&#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
287 
288 &#32;&#32;<link linkend="_affine-mat_8h_1a2fb55157c4db3012b51795408e1b0561">glm_mul_rot</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1a7d65d00ca3b0630d9b5c52df855b19f5">t</link>,&#32;dest);
289 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a230eb9d665cf54a62241105ef4566153"/>    <section>
    <title>glm_scale()</title>
<indexterm><primary>glm_scale</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_scale</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v)</computeroutput></para><para>

<para>scales existing transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 198 of file affine.h.</para>
<programlisting>198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
199 &#32;&#32;<link linkend="_affine_8h_1afe481664990782be30ae985ea897350f">glm_scale_to</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
200 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a2245fa29db156c6c9adda3e3a98cae5e"/>    <section>
    <title>glm_scale_make()</title>
<indexterm><primary>glm_scale_make</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_scale_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale_make (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v)</computeroutput></para><para>

<para>creates NEW scale matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 182 of file affine.h.</para>
<programlisting>182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
183 &#32;&#32;<link linkend="_mat4_8h_1a60bca590d72796f07ea1cb0e5a586c5a">glm_mat4_identity</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
184 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;=&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
185 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;=&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
186 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2]&#32;=&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[2];
187 }
</programlisting>    </section><anchor xml:id="_affine_8h_1afe481664990782be30ae985ea897350f"/>    <section>
    <title>glm_scale_to()</title>
<indexterm><primary>glm_scale_to</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_scale_to</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale_to (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</computeroutput></para><para>

<para>scale existing transform matrix by v vector and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y, z] </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>scaled matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 166 of file affine.h.</para>
<programlisting>166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
167 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0],&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0],&#32;dest[0]);
168 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1],&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1],&#32;dest[1]);
169 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2],&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[2],&#32;dest[2]);
170 
171 &#32;&#32;<link linkend="_vec4_8h_1a6bc398f48a0f602dff96819a693f154d">glm_vec4_copy</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;dest[3]);
172 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a167b8ff0f0033ccda49a3a489e680979"/>    <section>
    <title>glm_scale_uni()</title>
<indexterm><primary>glm_scale_uni</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_scale_uni</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale_uni (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float s)</computeroutput></para><para>

<para>applies uniform scale to existing transform matrix v = [s, s, s] and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>s</entry>
                                <entry>
<para>scale factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 211 of file affine.h.</para>
<programlisting>211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
212 &#32;&#32;<link linkend="_types_8h_1a7a85e572ca5b793f224bae1ed1a827a1">CGLM_ALIGN</link>(8)&#32;<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>&#32;=&#32;{&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;};
213 &#32;&#32;<link linkend="_affine_8h_1afe481664990782be30ae985ea897350f">glm_scale_to</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
214 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a0ce47d9b56e358ae2953be8835e799d7"/>    <section>
    <title>glm_translate()</title>
<indexterm><primary>glm_translate</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_translate</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v)</computeroutput></para><para>

<para>translate existing transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 52 of file affine.h.</para>
<programlisting>52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
53 <emphasis role="preprocessor">#if&#32;defined(CGLM_SIMD)</emphasis>
54 &#32;&#32;glmm_128&#32;m0,&#32;m1,&#32;m2,&#32;m3;
55 
56 &#32;&#32;m0&#32;=&#32;glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0]);
57 &#32;&#32;m1&#32;=&#32;glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1]);
58 &#32;&#32;m2&#32;=&#32;glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2]);
59 &#32;&#32;m3&#32;=&#32;glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
60 
61 &#32;&#32;glmm_store(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glmm_fmadd(m0,&#32;glmm_set1(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0]),
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glmm_fmadd(m1,&#32;glmm_set1(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1]),
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glmm_fmadd(m2,&#32;glmm_set1(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[2]),&#32;m3))));
65 <emphasis role="preprocessor">#else</emphasis>
66 &#32;&#32;<link linkend="_vec4_8h_1a45f2cabf0bd9cd9467200dbc0bc9e680">glm_vec4_muladds</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0],&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
67 &#32;&#32;<link linkend="_vec4_8h_1a45f2cabf0bd9cd9467200dbc0bc9e680">glm_vec4_muladds</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1],&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
68 &#32;&#32;<link linkend="_vec4_8h_1a45f2cabf0bd9cd9467200dbc0bc9e680">glm_vec4_muladds</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2],&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[2],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
69 <emphasis role="preprocessor">#endif</emphasis>
70 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a511b571151c53ecc052f5cf74c6a01b9"/>    <section>
    <title>glm_translate_make()</title>
<indexterm><primary>glm_translate_make</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_translate_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate_make (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v)</computeroutput></para><para>

<para>creates NEW translate transform matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y, z] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 151 of file affine.h.</para>
<programlisting>151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
152 &#32;&#32;<link linkend="_mat4_8h_1a60bca590d72796f07ea1cb0e5a586c5a">glm_mat4_identity</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
153 &#32;&#32;<link linkend="_vec3_8h_1a15bcfba5a95e389426accbf8843eb866">glm_vec3_copy</link>(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
154 }
</programlisting>    </section><anchor xml:id="_affine_8h_1ae0bdacf83c756c3e0a552115279a160c"/>    <section>
    <title>glm_translate_to()</title>
<indexterm><primary>glm_translate_to</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_translate_to</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate_to (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</computeroutput></para><para>

<para>translate existing transform matrix by v vector and store result in dest </para>
</para>

<para>source matrix will remain same</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y, z] </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>translated matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 84 of file affine.h.</para>
<programlisting>84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
85 &#32;&#32;<link linkend="_mat4_8h_1a124340d9a71e36f20e8ad3400ce53625">glm_mat4_copy</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;dest);
86 &#32;&#32;<link linkend="_affine_8h_1a0ce47d9b56e358ae2953be8835e799d7">glm_translate</link>(dest,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>);
87 }
</programlisting>    </section><anchor xml:id="_affine_8h_1af641771d8f2db1c0edf476db1954ea20"/>    <section>
    <title>glm_translate_x()</title>
<indexterm><primary>glm_translate_x</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_translate_x</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate_x (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float x)</computeroutput></para><para>

<para>translate existing transform matrix by x factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>x</entry>
                                <entry>
<para>x factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 97 of file affine.h.</para>
<programlisting>97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
98 <emphasis role="preprocessor">#if&#32;defined(CGLM_SIMD)</emphasis>
99 &#32;&#32;glmm_store(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;glmm_fmadd(glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0]),&#32;glmm_set1(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>),&#32;glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3])));
100 <emphasis role="preprocessor">#else</emphasis>
101 &#32;&#32;vec4&#32;<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>;
102 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0],&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>);
103 &#32;&#32;<link linkend="_vec4_8h_1aa7ad5efb2d5ec39f85242ad4b57b8ee1">glm_vec4_add</link>(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
104 <emphasis role="preprocessor">#endif</emphasis>
105 }
</programlisting>    </section><anchor xml:id="_affine_8h_1ac66710c48849b5e4d855099e0a0e425c"/>    <section>
    <title>glm_translate_y()</title>
<indexterm><primary>glm_translate_y</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_translate_y</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate_y (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float y)</computeroutput></para><para>

<para>translate existing transform matrix by y factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>y</entry>
                                <entry>
<para>y factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 115 of file affine.h.</para>
<programlisting>115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
116 <emphasis role="preprocessor">#if&#32;defined(CGLM_SIMD)</emphasis>
117 &#32;&#32;glmm_store(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;glmm_fmadd(glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1]),&#32;glmm_set1(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>),&#32;glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3])));
118 <emphasis role="preprocessor">#else</emphasis>
119 &#32;&#32;vec4&#32;<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>;
120 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1],&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,&#32;<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>);
121 &#32;&#32;<link linkend="_vec4_8h_1aa7ad5efb2d5ec39f85242ad4b57b8ee1">glm_vec4_add</link>(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
122 <emphasis role="preprocessor">#endif</emphasis>
123 }
</programlisting>    </section><anchor xml:id="_affine_8h_1a4485009dfa1b044f41f775431ed473b5"/>    <section>
    <title>glm_translate_z()</title>
<indexterm><primary>glm_translate_z</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_translate_z</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate_z (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m, float z)</computeroutput></para><para>

<para>translate existing transform matrix by z factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>z</entry>
                                <entry>
<para>z factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 133 of file affine.h.</para>
<programlisting>133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 <emphasis role="preprocessor">#if&#32;defined(CGLM_SIMD)</emphasis>
135 &#32;&#32;glmm_store(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;glmm_fmadd(glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2]),&#32;glmm_set1(<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>),&#32;glmm_load(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3])));
136 <emphasis role="preprocessor">#else</emphasis>
137 &#32;&#32;vec4&#32;<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>;
138 &#32;&#32;<link linkend="_vec4_8h_1a1de78b0d470aa3ba9c5335b7495fc763">glm_vec4_scale</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2],&#32;<link linkend="_glad_8h_1a1483160fae141afea848a5393c286b2b">z</link>,&#32;<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>);
139 &#32;&#32;<link linkend="_vec4_8h_1aa7ad5efb2d5ec39f85242ad4b57b8ee1">glm_vec4_add</link>(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>,&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3],&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[3]);
140 <emphasis role="preprocessor">#endif</emphasis>
141 }
</programlisting>    </section><anchor xml:id="_affine_8h_1aa6434902842e7bfe3110f01b79f219ff"/>    <section>
    <title>glm_uniscaled()</title>
<indexterm><primary>glm_uniscaled</primary><secondary>affine.h</secondary></indexterm>
<indexterm><primary>affine.h</primary><secondary>glm_uniscaled</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> bool glm_uniscaled (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m)</computeroutput></para><para>

<para>returns true if matrix is uniform scaled. This is helpful for creating normal matrix. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>m</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>boolean </para>
</formalpara>
</para>
<para>
Definition at line 409 of file affine.h.</para>
<programlisting>409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
410 &#32;&#32;<link linkend="_types_8h_1a7a85e572ca5b793f224bae1ed1a827a1">CGLM_ALIGN</link>(8)&#32;<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
411 &#32;&#32;<link linkend="_affine_8h_1a80b9435d9ed5093c4162b5291eb2136a">glm_decompose_scalev</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
412 &#32;&#32;return&#32;<link linkend="_vec3-ext_8h_1adc73c9f462e081d6ddba4c8020df8bc2">glm_vec3_eq_all</link>(<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>);
413 }
</programlisting></section>
</section>
</section>
