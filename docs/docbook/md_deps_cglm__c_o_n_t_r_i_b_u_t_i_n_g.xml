<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md_deps_cglm__c_o_n_t_r_i_b_u_t_i_n_g">

<para>Any contributions (code, documentation, ...) are welcome.</para>
<section xml:id="_md_deps_cglm__c_o_n_t_r_i_b_u_t_i_n_g_1autotoc_md1">
<title>New Features</title>

<para><itemizedlist>
<listitem>
<para>This library may not accept all new features, it is better to create an issue and get approval before coding</para>
</listitem><listitem>
<para>You must add test for every new feature</para>
</listitem><listitem>
<para>The feature must be compiled on both UNIX/POSIX systems (e.g. macos, linux...) and Windows</para>
</listitem></itemizedlist>
</para>
</section>
<section xml:id="_md_deps_cglm__c_o_n_t_r_i_b_u_t_i_n_g_1autotoc_md2">
<title>Code Style</title>

<para>This library is written with C99, don&apos;t try to add C++ files (yes it can compiled into lib), if you have enough reason to add C++ files than create an issue and get approval before coding,</para>

<para><itemizedlist>
<listitem>
<para>All functions must have <computeroutput>glm</computeroutput> prefix</para>
</listitem><listitem>
<para>Lines should be wrapped at 80 characters.</para>
</listitem><listitem>
<para>Don&apos;t invent new style for existing ones</para>
</listitem><listitem>
<para>Use C89 style comments (<computeroutput>/* comments */</computeroutput>) not C++ style comments (<computeroutput>// comments</computeroutput>)</para>
</listitem><listitem>
<para>Don&apos;t use TABs instead use 2 spaces for TABs</para>
</listitem><listitem>
<para>All indents must be 2 spaces, not 1 nor 4 space</para>
</listitem><listitem>
<para>All functions in <computeroutput>include</computeroutput> folder must be exported by <computeroutput>CGLM_EXPORT</computeroutput> and wrapped by <computeroutput>extern &quot;C&quot; {</computeroutput> for C++</para>
</listitem><listitem>
<para>Crate new line for return type, attribs:</para>
</listitem></itemizedlist>
</para>

<para><literallayout><computeroutput>CGLM_INLINE
void
glm_mul(mat4&#32;m1,&#32;mat4&#32;m2,&#32;mat4&#32;dest)
</computeroutput></literallayout></para>

<para>not acceptable:</para>

<para><literallayout><computeroutput>CGLM_INLINE&#32;void&#32;glm_mul(mat4&#32;m1,&#32;mat4&#32;m2,&#32;mat4&#32;dest)
</computeroutput></literallayout></para>

<para><itemizedlist>
<listitem>
<para>Variables must be declared at the top of a scope before usage: <literallayout><computeroutput>int&#32;x;
int&#32;y;

x&#32;=&#32;y&#32;=&#32;0;
</computeroutput></literallayout></para>
</listitem></itemizedlist>
</para>

<para>not acceptable:</para>

<para><literallayout><computeroutput>int&#32;x;

x&#32;=&#32;0;
int&#32;y&#32;=&#32;0;
</computeroutput></literallayout></para>

<para><itemizedlist>
<listitem>
<para>All files must retain same LICENSE statement</para>
</listitem><listitem>
<para>Code with warnings will not be accepted, please suppress them (not by disabling them)</para>
</listitem><listitem>
<para>Run code anaylysis before submitting pull requests, if you use Xcode you can enable Sanitizer in scheme, you can use valgrind in linux </para>
</listitem></itemizedlist>
</para>
</section>
</section>
