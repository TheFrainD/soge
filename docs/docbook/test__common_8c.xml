<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test__common_8c">
<title>deps/cglm/test/src/test_common.c File Reference</title>
<indexterm><primary>deps/cglm/test/src/test_common.c</primary></indexterm>
<programlisting>#include &quot;test_common.h&quot;
#include &lt;time.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_test__common_8c_1a7903e530133707eb3fadd022cd198d18">test_rand_mat4</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_test__common_8c_1a1240ced0fc1cc2f75d12c8f99283ebdb">test_rand_mat3</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_test__common_8c_1a68bb71ea950cadf6c7a7ca6f691b1d42">test_rand_mat2</link> (mat2 dest)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_test__common_8c_1a86e277ecb3a8c7543d9f729a9c40114f">test_rand_vec3</link> (<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> dest)</para>
</listitem>
            <listitem><para><link linkend="_unionvec3s">vec3s</link> <link linkend="_test__common_8c_1a2a38c7004bcdaa70691bb667c5daf524">test_rand_vec3s</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_test__common_8c_1a51688e3bc1e2311d1252553bc816c2c7">test_rand_vec4</link> (vec4 dest)</para>
</listitem>
            <listitem><para><link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> <link linkend="_test__common_8c_1a184f183110dabdf54554867078de84a4">test_rand_vec4s</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>float <link linkend="_test__common_8c_1a44eccab8b232fc7c10a816d10e6c07c2">test_rand</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_test__common_8c_1ac82d256a3ab9d0894d7cd289b305cf9c">test_rand_quat</link> (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> <link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1ab6c735c5e9684b49694b21d4de506820">test_assert_mat4_eq</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m1, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a0cbfdf2b8ec7af08aac10fbd0a13b52a">test_assert_mat4_eqt</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m1, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a06a6226df800276af0def5da656c19bd">test_assert_mat4_eq2</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m1, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m2, float eps)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1aa5d9d94d51875e5b8d7cb27f334fb874">test_assert_mat2_eqt</link> (mat2 m1, mat2 m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1ac2f4b957562803eaa633b1a079ad9923">test_assert_mat2_eq</link> (mat2 m1, mat2 m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1ab1819f9fb914f143eafbec0339501a21">test_assert_mat2_eq_identity</link> (mat2 m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a3f17ab37eaa35922965afe21041eae0b">test_assert_mat2_eq_zero</link> (mat2 m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a0720b3d0e15fcb676e97129188a21dce">test_assert_mat3_eq</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m1, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a1cee3c766491970458c3f3aa8711c041">test_assert_mat3_eqt</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m1, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m2)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a3174b13835b1a1150bf431f467b115f2">test_assert_mat3_eq_identity</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m3)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a6b012b6e1e47a0f0e0360f2a77cb909d">test_assert_mat3_eq_zero</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m3)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1abc44d41a29d8c9ac10bb80a321ad1936">test_assert_mat4_eq_identity</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m4)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a9cda0f924fef4e23e9e216f043ca9577">test_assert_mat4_eq_zero</link> (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m4)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1aa04ee08606dffefd377f81c8e5937ed2">test_assert_eqf</link> (float <link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>, float <link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1aad00d7b383e6286043f9b0b5e790fa6a">test_assert_vec2_eq</link> (<link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1ac819ff0814a4cea86c7329940effeaee">test_assert_vec3_eq</link> (<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> <link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1afae0f4bef5d618c1ec334756e97276ac">test_assert_vec3s_eq</link> (<link linkend="_unionvec3s">vec3s</link> <link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>, <link linkend="_unionvec3s">vec3s</link> <link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a1755f355db6dfb35f26fd18c114f259f">test_assert_vec4_eq</link> (vec4 <link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>, vec4 <link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1a43611122ce4abcc983a9693c4416bb15">test_assert_vec4s_eq</link> (<link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> <link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>, <link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> <link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1aaec68dcfd65897a36b80a7cac03f8652">test_assert_quat_eq_abs</link> (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> <link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>, <link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> <link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1ac49aaa1a2636bb10c80668392c0c462d">test_assert_quat_eq</link> (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> <link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>, <link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> <link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>)</para>
</listitem>
            <listitem><para><link linkend="_structtest__status__t">test_status_t</link> <link linkend="_test__common_8c_1af8f882c026dba2f4a8f14e8ef37d8625">test_assert_quat_eq_identity</link> (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> <link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_test__common_8c_1aa04ee08606dffefd377f81c8e5937ed2"/>    <section>
    <title>test_assert_eqf()</title>
<indexterm><primary>test_assert_eqf</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_eqf</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_eqf (float a, float b)</computeroutput></para><para>
Definition at line 264 of file test_common.c.</para>
<programlisting>264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
265 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;-&#32;<link linkend="_glad_8h_1a0f71581a41fd2264c8944126dabbd010">b</link>)&#32;&lt;=&#32;0.000009);&#32;<emphasis role="comment">/*&#32;rounding&#32;errors&#32;*/</emphasis>
266 
267 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
268 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1ac2f4b957562803eaa633b1a079ad9923"/>    <section>
    <title>test_assert_mat2_eq()</title>
<indexterm><primary>test_assert_mat2_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat2_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat2_eq (mat2 m1, mat2 m2)</computeroutput></para><para>
Definition at line 135 of file test_common.c.</para>
<programlisting>135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
136 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
137 
138 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2;&#32;i++)&#32;{
139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++)&#32;{
140 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(m1[i][j]&#32;-&#32;m2[i][j])&#32;&lt;=&#32;0.0000009);
141 &#32;&#32;&#32;&#32;}
142 &#32;&#32;}
143 
144 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
145 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1ab1819f9fb914f143eafbec0339501a21"/>    <section>
    <title>test_assert_mat2_eq_identity()</title>
<indexterm><primary>test_assert_mat2_eq_identity</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat2_eq_identity</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat2_eq_identity (mat2 m2)</computeroutput></para><para>
Definition at line 148 of file test_common.c.</para>
<programlisting>148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
149 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
150 
151 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2;&#32;i++)&#32;{
152 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++)&#32;{
153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;j)&#32;{
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m2[i][j],&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
155 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m2[i][j],&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
157 &#32;&#32;&#32;&#32;&#32;&#32;}
158 &#32;&#32;&#32;&#32;}
159 &#32;&#32;}
160 
161 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
162 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a3f17ab37eaa35922965afe21041eae0b"/>    <section>
    <title>test_assert_mat2_eq_zero()</title>
<indexterm><primary>test_assert_mat2_eq_zero</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat2_eq_zero</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat2_eq_zero (mat2 m2)</computeroutput></para><para>
Definition at line 165 of file test_common.c.</para>
<programlisting>165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
166 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
167 
168 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2;&#32;i++)&#32;{
169 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++)&#32;{
170 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m2[i][j],&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
171 &#32;&#32;&#32;&#32;}
172 &#32;&#32;}
173 
174 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
175 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1aa5d9d94d51875e5b8d7cb27f334fb874"/>    <section>
    <title>test_assert_mat2_eqt()</title>
<indexterm><primary>test_assert_mat2_eqt</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat2_eqt</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat2_eqt (mat2 m1, mat2 m2)</computeroutput></para><para>
Definition at line 122 of file test_common.c.</para>
<programlisting>122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
123 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
124 
125 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;2;&#32;i++)&#32;{
126 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;2;&#32;j++)&#32;{
127 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(m1[j][i]&#32;-&#32;m2[i][j])&#32;&lt;=&#32;0.0000009);
128 &#32;&#32;&#32;&#32;}
129 &#32;&#32;}
130 
131 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
132 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a0720b3d0e15fcb676e97129188a21dce"/>    <section>
    <title>test_assert_mat3_eq()</title>
<indexterm><primary>test_assert_mat3_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat3_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat3_eq (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m1, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m2)</computeroutput></para><para>
Definition at line 178 of file test_common.c.</para>
<programlisting>178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
179 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
180 
181 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;3;&#32;j++)&#32;{
183 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(m1[i][j]&#32;-&#32;m2[i][j])&#32;&lt;=&#32;0.0000009);
184 &#32;&#32;&#32;&#32;}
185 &#32;&#32;}
186 
187 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
188 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a3174b13835b1a1150bf431f467b115f2"/>    <section>
    <title>test_assert_mat3_eq_identity()</title>
<indexterm><primary>test_assert_mat3_eq_identity</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat3_eq_identity</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat3_eq_identity (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m3)</computeroutput></para><para>
Definition at line 204 of file test_common.c.</para>
<programlisting>204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
205 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
206 
207 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
208 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;3;&#32;j++)&#32;{
209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;j)&#32;{
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m3[i][j],&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
211 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m3[i][j],&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
213 &#32;&#32;&#32;&#32;&#32;&#32;}
214 &#32;&#32;&#32;&#32;}
215 &#32;&#32;}
216 
217 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
218 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a6b012b6e1e47a0f0e0360f2a77cb909d"/>    <section>
    <title>test_assert_mat3_eq_zero()</title>
<indexterm><primary>test_assert_mat3_eq_zero</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat3_eq_zero</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat3_eq_zero (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m3)</computeroutput></para><para>
Definition at line 221 of file test_common.c.</para>
<programlisting>221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
222 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
223 
224 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;3;&#32;j++)&#32;{
226 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m3[i][j],&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
227 &#32;&#32;&#32;&#32;}
228 &#32;&#32;}
229 
230 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
231 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a1cee3c766491970458c3f3aa8711c041"/>    <section>
    <title>test_assert_mat3_eqt()</title>
<indexterm><primary>test_assert_mat3_eqt</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat3_eqt</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat3_eqt (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m1, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m2)</computeroutput></para><para>
Definition at line 191 of file test_common.c.</para>
<programlisting>191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
192 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
193 
194 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
195 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;3;&#32;j++)&#32;{
196 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(m1[j][i]&#32;-&#32;m2[i][j])&#32;&lt;=&#32;0.0000009);
197 &#32;&#32;&#32;&#32;}
198 &#32;&#32;}
199 
200 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
201 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1ab6c735c5e9684b49694b21d4de506820"/>    <section>
    <title>test_assert_mat4_eq()</title>
<indexterm><primary>test_assert_mat4_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat4_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat4_eq (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m1, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m2)</computeroutput></para><para>
Definition at line 83 of file test_common.c.</para>
<programlisting>83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
84 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
85 
86 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
87 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;{
88 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(m1[i][j]&#32;-&#32;m2[i][j])&#32;&lt;=&#32;0.0000009)
89 &#32;&#32;&#32;&#32;}
90 &#32;&#32;}
91 
92 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
93 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a06a6226df800276af0def5da656c19bd"/>    <section>
    <title>test_assert_mat4_eq2()</title>
<indexterm><primary>test_assert_mat4_eq2</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat4_eq2</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat4_eq2 (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m1, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m2, float eps)</computeroutput></para><para>
Definition at line 109 of file test_common.c.</para>
<programlisting>109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
110 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
111 
112 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;{
114 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(m1[i][j]&#32;-&#32;m2[i][j])&#32;&lt;=&#32;eps);
115 &#32;&#32;&#32;&#32;}
116 &#32;&#32;}
117 
118 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
119 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1abc44d41a29d8c9ac10bb80a321ad1936"/>    <section>
    <title>test_assert_mat4_eq_identity()</title>
<indexterm><primary>test_assert_mat4_eq_identity</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat4_eq_identity</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat4_eq_identity (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m4)</computeroutput></para><para>
Definition at line 234 of file test_common.c.</para>
<programlisting>234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
235 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
236 
237 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
238 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;{
239 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;j)&#32;{
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m4[i][j],&#32;1.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
241 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m4[i][j],&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
243 &#32;&#32;&#32;&#32;&#32;&#32;}
244 &#32;&#32;&#32;&#32;}
245 &#32;&#32;}
246 
247 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
248 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a9cda0f924fef4e23e9e216f043ca9577"/>    <section>
    <title>test_assert_mat4_eq_zero()</title>
<indexterm><primary>test_assert_mat4_eq_zero</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat4_eq_zero</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat4_eq_zero (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m4)</computeroutput></para><para>
Definition at line 251 of file test_common.c.</para>
<programlisting>251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
252 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
253 
254 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
255 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;{
256 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(<link linkend="_test__common_8h_1a8b5ca35f1cc6f58d128c0adf26c5f44a">test_eq</link>(m4[i][j],&#32;0.0<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>))
257 &#32;&#32;&#32;&#32;}
258 &#32;&#32;}
259 
260 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
261 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a0cbfdf2b8ec7af08aac10fbd0a13b52a"/>    <section>
    <title>test_assert_mat4_eqt()</title>
<indexterm><primary>test_assert_mat4_eqt</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_mat4_eqt</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_mat4_eqt (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m1, <link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> m2)</computeroutput></para><para>
Definition at line 96 of file test_common.c.</para>
<programlisting>96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
97 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;j;
98 
99 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;{
101 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(m1[j][i]&#32;-&#32;m2[i][j])&#32;&lt;=&#32;0.0000009)
102 &#32;&#32;&#32;&#32;}
103 &#32;&#32;}
104 
105 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
106 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1ac49aaa1a2636bb10c80668392c0c462d"/>    <section>
    <title>test_assert_quat_eq()</title>
<indexterm><primary>test_assert_quat_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_quat_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_quat_eq (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> v1, <link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> v2)</computeroutput></para><para>
Definition at line 322 of file test_common.c.</para>
<programlisting>322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
323 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[0]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[0])&#32;&lt;=&#32;0.000009);&#32;<emphasis role="comment">/*&#32;rounding&#32;errors&#32;*/</emphasis>
324 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[1]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[1])&#32;&lt;=&#32;0.000009);
325 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[2]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[2])&#32;&lt;=&#32;0.000009);
326 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[3]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[3])&#32;&lt;=&#32;0.000009);
327 
328 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
329 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1aaec68dcfd65897a36b80a7cac03f8652"/>    <section>
    <title>test_assert_quat_eq_abs()</title>
<indexterm><primary>test_assert_quat_eq_abs</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_quat_eq_abs</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_quat_eq_abs (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> v1, <link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> v2)</computeroutput></para><para>
Definition at line 312 of file test_common.c.</para>
<programlisting>312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
313 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[0])&#32;-&#32;fabsf(<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[0]))&#32;&lt;=&#32;0.0009);&#32;<emphasis role="comment">/*&#32;rounding&#32;errors&#32;*/</emphasis>
314 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[1])&#32;-&#32;fabsf(<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[1]))&#32;&lt;=&#32;0.0009);
315 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[2])&#32;-&#32;fabsf(<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[2]))&#32;&lt;=&#32;0.0009);
316 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[3])&#32;-&#32;fabsf(<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[3]))&#32;&lt;=&#32;0.0009);
317 
318 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
319 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1af8f882c026dba2f4a8f14e8ef37d8625"/>    <section>
    <title>test_assert_quat_eq_identity()</title>
<indexterm><primary>test_assert_quat_eq_identity</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_quat_eq_identity</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_quat_eq_identity (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> q)</computeroutput></para><para>
Definition at line 332 of file test_common.c.</para>
<programlisting>332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
333 &#32;&#32;<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link>&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>&#32;=&#32;<link linkend="_quat_8h_1ab05b893c70d3e5d3d8c1ba5ae0a410c7">GLM_QUAT_IDENTITY_INIT</link>;
334 
335 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>[0]&#32;-&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>[0])&#32;&lt;=&#32;0.000009);&#32;<emphasis role="comment">/*&#32;rounding&#32;errors&#32;*/</emphasis>
336 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>[1]&#32;-&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>[1])&#32;&lt;=&#32;0.000009);
337 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>[2]&#32;-&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>[2])&#32;&lt;=&#32;0.000009);
338 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>[3]&#32;-&#32;<link linkend="_glext_8h_1aa5367c14d90f462230c2611b81b41d23">p</link>[3])&#32;&lt;=&#32;0.000009);
339 
340 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
341 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1aad00d7b383e6286043f9b0b5e790fa6a"/>    <section>
    <title>test_assert_vec2_eq()</title>
<indexterm><primary>test_assert_vec2_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_vec2_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_vec2_eq (<link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v1, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v2)</computeroutput></para><para>
Definition at line 271 of file test_common.c.</para>
<programlisting>271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
272 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[0]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[0])&#32;&lt;=&#32;0.000009);&#32;<emphasis role="comment">/*&#32;rounding&#32;errors&#32;*/</emphasis>
273 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[1]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[1])&#32;&lt;=&#32;0.000009);
274 
275 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
276 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1ac819ff0814a4cea86c7329940effeaee"/>    <section>
    <title>test_assert_vec3_eq()</title>
<indexterm><primary>test_assert_vec3_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_vec3_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_vec3_eq (<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v1, <link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> v2)</computeroutput></para><para>
Definition at line 279 of file test_common.c.</para>
<programlisting>279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
280 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[0]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[0])&#32;&lt;=&#32;0.000009);&#32;<emphasis role="comment">/*&#32;rounding&#32;errors&#32;*/</emphasis>
281 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[1]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[1])&#32;&lt;=&#32;0.000009);
282 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[2]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[2])&#32;&lt;=&#32;0.000009);
283 
284 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
285 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1afae0f4bef5d618c1ec334756e97276ac"/>    <section>
    <title>test_assert_vec3s_eq()</title>
<indexterm><primary>test_assert_vec3s_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_vec3s_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_vec3s_eq (<link linkend="_unionvec3s">vec3s</link> v1, <link linkend="_unionvec3s">vec3s</link> v2)</computeroutput></para><para>
Definition at line 288 of file test_common.c.</para>
<programlisting>288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
289 &#32;&#32;<link linkend="_test__common_8c_1ac819ff0814a4cea86c7329940effeaee">test_assert_vec3_eq</link>(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>.raw,&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>.raw);
290 
291 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
292 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a1755f355db6dfb35f26fd18c114f259f"/>    <section>
    <title>test_assert_vec4_eq()</title>
<indexterm><primary>test_assert_vec4_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_vec4_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_vec4_eq (vec4 v1, vec4 v2)</computeroutput></para><para>
Definition at line 295 of file test_common.c.</para>
<programlisting>295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
296 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[0]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[0])&#32;&lt;=&#32;0.000009);&#32;<emphasis role="comment">/*&#32;rounding&#32;errors&#32;*/</emphasis>
297 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[1]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[1])&#32;&lt;=&#32;0.000009);
298 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[2]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[2])&#32;&lt;=&#32;0.000009);
299 &#32;&#32;<link linkend="_test_2include_2common_8h_1a821326052e3e2bf1fb2d678e9e9a6004">ASSERT</link>(fabsf(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>[3]&#32;-&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>[3])&#32;&lt;=&#32;0.000009);
300 
301 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
302 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a43611122ce4abcc983a9693c4416bb15"/>    <section>
    <title>test_assert_vec4s_eq()</title>
<indexterm><primary>test_assert_vec4s_eq</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_assert_vec4s_eq</secondary></indexterm>
<para><computeroutput><link linkend="_structtest__status__t">test_status_t</link> test_assert_vec4s_eq (<link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> v1, <link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> v2)</computeroutput></para><para>
Definition at line 305 of file test_common.c.</para>
<programlisting>305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
306 &#32;&#32;<link linkend="_test__common_8c_1a1755f355db6dfb35f26fd18c114f259f">test_assert_vec4_eq</link>(<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>.raw,&#32;<link linkend="_glad_8h_1a0928f6d0f0f794ba000a21dfae422136">v2</link>.raw);
307 
308 &#32;&#32;<link linkend="_test_2include_2common_8h_1aee1dc5ecf95c68bc90ba502679668096">TEST_SUCCESS</link>
309 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a44eccab8b232fc7c10a816d10e6c07c2"/>    <section>
    <title>test_rand()</title>
<indexterm><primary>test_rand</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand</secondary></indexterm>
<para><computeroutput>float test_rand (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 72 of file test_common.c.</para>
<programlisting>72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
73 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;drand48();
74 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a68bb71ea950cadf6c7a7ca6f691b1d42"/>    <section>
    <title>test_rand_mat2()</title>
<indexterm><primary>test_rand_mat2</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_mat2</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> test_rand_mat2 (mat2 dest)</computeroutput></para><para>
Definition at line 35 of file test_common.c.</para>
<programlisting>35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
36 &#32;&#32;dest[0][0]&#32;=&#32;drand48();
37 &#32;&#32;dest[0][1]&#32;=&#32;drand48();
38 &#32;&#32;dest[1][0]&#32;=&#32;drand48();
39 &#32;&#32;dest[1][1]&#32;=&#32;drand48();
40 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a1240ced0fc1cc2f75d12c8f99283ebdb"/>    <section>
    <title>test_rand_mat3()</title>
<indexterm><primary>test_rand_mat3</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_mat3</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> test_rand_mat3 (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</computeroutput></para><para>
Definition at line 26 of file test_common.c.</para>
<programlisting>26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
27 &#32;&#32;<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link>&#32;m4;
28 
29 &#32;&#32;<emphasis role="comment">/*&#32;random&#32;rotatation&#32;around&#32;random&#32;axis&#32;with&#32;random&#32;angle&#32;*/</emphasis>
30 &#32;&#32;<link linkend="_affine_8h_1a0f775feca38e09eda5f2498aa2ec25bc">glm_rotate_make</link>(m4,&#32;drand48(),&#32;(<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>){drand48(),&#32;drand48(),&#32;drand48()});
31 &#32;&#32;<link linkend="_mat4_8h_1a48833f731cc8ee1e2d48125ff67f51e4">glm_mat4_pick3</link>(m4,&#32;dest);
32 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a7903e530133707eb3fadd022cd198d18"/>    <section>
    <title>test_rand_mat4()</title>
<indexterm><primary>test_rand_mat4</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_mat4</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> test_rand_mat4 (<link linkend="_types_8h_1ae30f88fc32dfb3008b133367bbf0c3a1">mat4</link> dest)</computeroutput></para><para>
Definition at line 10 of file test_common.c.</para>
<programlisting>10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
11 &#32;&#32;<link linkend="_mat4_8h_1a124340d9a71e36f20e8ad3400ce53625">glm_mat4_copy</link>(<link linkend="_mat4_8h_1a1e4c81d8cd2b6ef1488088ade4bdd3fb">GLM_MAT4_IDENTITY</link>,&#32;dest);
12 
13 &#32;&#32;<emphasis role="comment">/*&#32;random&#32;position&#32;*/</emphasis>
14 &#32;&#32;dest[3][0]&#32;=&#32;drand48();
15 &#32;&#32;dest[3][1]&#32;=&#32;drand48();
16 &#32;&#32;dest[3][2]&#32;=&#32;drand48();
17 
18 &#32;&#32;<emphasis role="comment">/*&#32;random&#32;rotatation&#32;around&#32;random&#32;axis&#32;with&#32;random&#32;angle&#32;*/</emphasis>
19 &#32;&#32;<link linkend="_affine_8h_1aa2cece9335958a3a22540f18a25e9aef">glm_rotate</link>(dest,&#32;drand48(),&#32;(<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link>){drand48(),&#32;drand48(),&#32;drand48()});
20 
21 &#32;&#32;<emphasis role="comment">/*&#32;random&#32;scale&#32;*/</emphasis>
22 &#32;&#32;<emphasis role="comment">/*&#32;glm_scale(dest,&#32;(vec3){drand48(),&#32;drand48(),&#32;drand48()});&#32;*/</emphasis>
23 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1ac82d256a3ab9d0894d7cd289b305cf9c"/>    <section>
    <title>test_rand_quat()</title>
<indexterm><primary>test_rand_quat</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_quat</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> test_rand_quat (<link linkend="_types_8h_1a5d202f2c1f7fb94e45286e692ee748e9">versor</link> q)</computeroutput></para><para>
Definition at line 77 of file test_common.c.</para>
<programlisting>77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
78 &#32;&#32;<link linkend="_quat_8h_1a5a2e502e91ce97c38e0623ea75e4da5d">glm_quat</link>(<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>,&#32;drand48(),&#32;drand48(),&#32;drand48(),&#32;drand48());
79 &#32;&#32;<link linkend="_quat_8h_1a3d641b627bd1e290813ed82c55ae3fe2">glm_quat_normalize</link>(<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>);
80 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a86e277ecb3a8c7543d9f729a9c40114f"/>    <section>
    <title>test_rand_vec3()</title>
<indexterm><primary>test_rand_vec3</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_vec3</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> test_rand_vec3 (<link linkend="_types_8h_1aa12dddc6c5b49b59657f5b9262d3196c">vec3</link> dest)</computeroutput></para><para>
Definition at line 43 of file test_common.c.</para>
<programlisting>43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
44 &#32;&#32;dest[0]&#32;=&#32;drand48();
45 &#32;&#32;dest[1]&#32;=&#32;drand48();
46 &#32;&#32;dest[2]&#32;=&#32;drand48();
47 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a2a38c7004bcdaa70691bb667c5daf524"/>    <section>
    <title>test_rand_vec3s()</title>
<indexterm><primary>test_rand_vec3s</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_vec3s</secondary></indexterm>
<para><computeroutput><link linkend="_unionvec3s">vec3s</link> test_rand_vec3s (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 50 of file test_common.c.</para>
<programlisting>50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
51 &#32;&#32;<link linkend="_unionvec3s">vec3s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
52 &#32;&#32;<link linkend="_test__common_8c_1a86e277ecb3a8c7543d9f729a9c40114f">test_rand_vec3</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
53 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
54 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a51688e3bc1e2311d1252553bc816c2c7"/>    <section>
    <title>test_rand_vec4()</title>
<indexterm><primary>test_rand_vec4</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_vec4</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> test_rand_vec4 (vec4 dest)</computeroutput></para><para>
Definition at line 57 of file test_common.c.</para>
<programlisting>57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
58 &#32;&#32;dest[0]&#32;=&#32;drand48();
59 &#32;&#32;dest[1]&#32;=&#32;drand48();
60 &#32;&#32;dest[2]&#32;=&#32;drand48();
61 &#32;&#32;dest[3]&#32;=&#32;drand48();
62 }
</programlisting>    </section><anchor xml:id="_test__common_8c_1a184f183110dabdf54554867078de84a4"/>    <section>
    <title>test_rand_vec4s()</title>
<indexterm><primary>test_rand_vec4s</primary><secondary>test_common.c</secondary></indexterm>
<indexterm><primary>test_common.c</primary><secondary>test_rand_vec4s</secondary></indexterm>
<para><computeroutput><link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link> test_rand_vec4s (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 65 of file test_common.c.</para>
<programlisting>65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
66 &#32;&#32;<link linkend="_types-struct_8h_1a464357f35331686eb7b49345adca56fe">vec4s</link>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
67 &#32;&#32;<link linkend="_test__common_8c_1a51688e3bc1e2311d1252553bc816c2c7">test_rand_vec4</link>(<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>.raw);
68 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1a42ce7cdc612e53abee15043f80220d97">r</link>;
69 }
</programlisting></section>
</section>
</section>
