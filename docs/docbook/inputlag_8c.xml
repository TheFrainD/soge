<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_inputlag_8c">
<title>deps/glfw/tests/inputlag.c File Reference</title>
<indexterm><primary>deps/glfw/tests/inputlag.c</primary></indexterm>
<programlisting>#include &lt;glad/gl.h&gt;
#include &lt;GLFW/glfw3.h&gt;
#include &lt;nuklear.h&gt;
#include &lt;nuklear_glfw_gl2.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &quot;getopt.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_inputlag_8c_1a09f9c3bf094ecaf707c673924ffd615a">GLAD_GL_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1a088324ad8995e3eb76024e3e79083d48">GLFW_INCLUDE_NONE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1aae11ce91efbb99ec40b279ddc84c050f">NK_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1a4e30c99b0f20f7155adebf2cb2219b03">NK_INCLUDE_FIXED_TYPES</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1a7ad0c2aa5bf98a3302a170b7ce2fb9d2">NK_INCLUDE_FONT_BAKING</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1af0847faa9e18a4865944c2f5fb093be0">NK_INCLUDE_DEFAULT_FONT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1adf1c808d169071b73cb46f7538bf1721">NK_INCLUDE_DEFAULT_ALLOCATOR</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1ac67be0ee8bc7f08530c891cbfa14b788">NK_INCLUDE_VERTEX_BUFFER_OUTPUT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1a13b5abd58c2a82dcf6a5f7ddfcf112aa">NK_INCLUDE_STANDARD_VARARGS</link></para>
</listitem>
            <listitem><para>#define <link linkend="_inputlag_8c_1ab6265ecacee986d956748de27609d1fb">NK_GLFW_GL2_IMPLEMENTATION</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2">cursor_sync_query</link>, 
<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffac24aafc78bc01f95c569bfb303a80c37">cursor_input_message</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1ae8605e2b78cd4a81b6c6b5c30cb7366a">usage</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1a4ccf9666cab68ad57d54c8a84ff5d1a3">sample_input</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1ab9a970cff09c5a4031b814242706b4f6">cursor_pos_callback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, double xpos, double ypos)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1ad5903057f648a45f3164f87ea5fcb566">update_vsync</link> ()</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1addbdd11cdc743a25fdd3d21d0fbeec18">swap_buffers</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1a4ee391c8bab624943c822faafb2c320e">error_callback</link> (int <link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>, const char *description)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1a286930f4e8ede059b83ff6eafa2ff718">key_callback</link> (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> *<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>, int <link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>, int scancode, int action, int mods)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_inputlag_8c_1a79522ec801ca347aa80a4093099cf5f7">draw_marker</link> (struct <link linkend="_structnk__command__buffer">nk_command_buffer</link> *canvas, int lead, struct <link linkend="_structnk__vec2">nk_vec2</link> pos)</para>
</listitem>
            <listitem><para>int <link linkend="_inputlag_8c_1a3c04138a5bfe5d72780bb7e82a18e627">main</link> (int argc, char **argv)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structnk__vec2">nk_vec2</link> cursor_new cursor_pos <link linkend="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e">cursor_vel</link></para>
</listitem>
            <listitem><para>enum  { ... }  <link linkend="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde">cursor_method</link> = <link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2">cursor_sync_query</link></para>
</listitem>
            <listitem><para>int <link linkend="_inputlag_8c_1af47b646ebdca09e9a1578071fe091a5d">enable_vsync</link> = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a05630fa56b9871b46b97083d5f9bb56f">nk_true</link></para>
</listitem>
            <listitem><para>int <link linkend="_inputlag_8c_1aa47ee607e93b09919d4b1f7da3a5a390">swap_clear</link> = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a61ead1dc2dd7e18d7bf67a165f1d28d2">nk_false</link></para>
</listitem>
            <listitem><para>int <link linkend="_inputlag_8c_1acda392c4359729f9c39b9d9b54d1d832">swap_finish</link> = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a05630fa56b9871b46b97083d5f9bb56f">nk_true</link></para>
</listitem>
            <listitem><para>int <link linkend="_inputlag_8c_1a54dec265285674365f21fc57e65796ae">swap_occlusion_query</link> = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a61ead1dc2dd7e18d7bf67a165f1d28d2">nk_false</link></para>
</listitem>
            <listitem><para>int <link linkend="_inputlag_8c_1ae089bd438c24faf9c2a0513239d51cd3">swap_read_pixels</link> = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a61ead1dc2dd7e18d7bf67a165f1d28d2">nk_false</link></para>
</listitem>
            <listitem><para><link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link> <link linkend="_inputlag_8c_1a455b848631edc16dd4be1f0a9c0427db">occlusion_query</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_inputlag_8c_1a09f9c3bf094ecaf707c673924ffd615a"/>    <section>
    <title>GLAD_GL_IMPLEMENTATION</title>
<indexterm><primary>GLAD_GL_IMPLEMENTATION</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>GLAD_GL_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define GLAD_GL_IMPLEMENTATION</computeroutput></para><para>
Definition at line 31 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1a088324ad8995e3eb76024e3e79083d48"/>    <section>
    <title>GLFW_INCLUDE_NONE</title>
<indexterm><primary>GLFW_INCLUDE_NONE</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>GLFW_INCLUDE_NONE</secondary></indexterm>
<para><computeroutput>#define GLFW_INCLUDE_NONE</computeroutput></para><para>
Definition at line 33 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1ab6265ecacee986d956748de27609d1fb"/>    <section>
    <title>NK_GLFW_GL2_IMPLEMENTATION</title>
<indexterm><primary>NK_GLFW_GL2_IMPLEMENTATION</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_GLFW_GL2_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define NK_GLFW_GL2_IMPLEMENTATION</computeroutput></para><para>
Definition at line 45 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1aae11ce91efbb99ec40b279ddc84c050f"/>    <section>
    <title>NK_IMPLEMENTATION</title>
<indexterm><primary>NK_IMPLEMENTATION</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define NK_IMPLEMENTATION</computeroutput></para><para>
Definition at line 36 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1adf1c808d169071b73cb46f7538bf1721"/>    <section>
    <title>NK_INCLUDE_DEFAULT_ALLOCATOR</title>
<indexterm><primary>NK_INCLUDE_DEFAULT_ALLOCATOR</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_INCLUDE_DEFAULT_ALLOCATOR</secondary></indexterm>
<para><computeroutput>#define NK_INCLUDE_DEFAULT_ALLOCATOR</computeroutput></para><para>
Definition at line 40 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1af0847faa9e18a4865944c2f5fb093be0"/>    <section>
    <title>NK_INCLUDE_DEFAULT_FONT</title>
<indexterm><primary>NK_INCLUDE_DEFAULT_FONT</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_INCLUDE_DEFAULT_FONT</secondary></indexterm>
<para><computeroutput>#define NK_INCLUDE_DEFAULT_FONT</computeroutput></para><para>
Definition at line 39 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1a4e30c99b0f20f7155adebf2cb2219b03"/>    <section>
    <title>NK_INCLUDE_FIXED_TYPES</title>
<indexterm><primary>NK_INCLUDE_FIXED_TYPES</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_INCLUDE_FIXED_TYPES</secondary></indexterm>
<para><computeroutput>#define NK_INCLUDE_FIXED_TYPES</computeroutput></para><para>
Definition at line 37 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1a7ad0c2aa5bf98a3302a170b7ce2fb9d2"/>    <section>
    <title>NK_INCLUDE_FONT_BAKING</title>
<indexterm><primary>NK_INCLUDE_FONT_BAKING</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_INCLUDE_FONT_BAKING</secondary></indexterm>
<para><computeroutput>#define NK_INCLUDE_FONT_BAKING</computeroutput></para><para>
Definition at line 38 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1a13b5abd58c2a82dcf6a5f7ddfcf112aa"/>    <section>
    <title>NK_INCLUDE_STANDARD_VARARGS</title>
<indexterm><primary>NK_INCLUDE_STANDARD_VARARGS</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_INCLUDE_STANDARD_VARARGS</secondary></indexterm>
<para><computeroutput>#define NK_INCLUDE_STANDARD_VARARGS</computeroutput></para><para>
Definition at line 42 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1ac67be0ee8bc7f08530c891cbfa14b788"/>    <section>
    <title>NK_INCLUDE_VERTEX_BUFFER_OUTPUT</title>
<indexterm><primary>NK_INCLUDE_VERTEX_BUFFER_OUTPUT</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>NK_INCLUDE_VERTEX_BUFFER_OUTPUT</secondary></indexterm>
<para><computeroutput>#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT</computeroutput></para><para>
Definition at line 41 of file inputlag.c.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cff"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>cursor_sync_query</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>cursor_sync_query</secondary></indexterm>
<anchor xml:id="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2"/>cursor_sync_query</entry><entry></entry></row><row><entry><indexterm><primary>cursor_input_message</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>cursor_input_message</secondary></indexterm>
<anchor xml:id="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffac24aafc78bc01f95c569bfb303a80c37"/>cursor_input_message</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 63 of file inputlag.c.</para>
<programlisting>63 {&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2">cursor_sync_query</link>,&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffac24aafc78bc01f95c569bfb303a80c37">cursor_input_message</link>&#32;}&#32;<link linkend="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde">cursor_method</link>&#32;=&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2">cursor_sync_query</link>;
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_inputlag_8c_1ab9a970cff09c5a4031b814242706b4f6"/>    <section>
    <title>cursor_pos_callback()</title>
<indexterm><primary>cursor_pos_callback</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>cursor_pos_callback</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> cursor_pos_callback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, double xpos, double ypos)</computeroutput></para><para>
Definition at line 81 of file inputlag.c.</para>
<programlisting>82 {
83 &#32;&#32;&#32;&#32;cursor_new.x&#32;=&#32;(float)&#32;xpos;
84 &#32;&#32;&#32;&#32;cursor_new.y&#32;=&#32;(float)&#32;ypos;
85 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1a79522ec801ca347aa80a4093099cf5f7"/>    <section>
    <title>draw_marker()</title>
<indexterm><primary>draw_marker</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>draw_marker</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> draw_marker (struct <link linkend="_structnk__command__buffer">nk_command_buffer</link> * canvas, int lead, struct <link linkend="_structnk__vec2">nk_vec2</link> pos)</computeroutput></para><para>
Definition at line 146 of file inputlag.c.</para>
<programlisting>147 {
148 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structnk__color">nk_color</link>&#32;colors[4]&#32;=&#32;{&#32;<link linkend="_nuklear_8h_1a0624ae1d6500b0a2941274f1a99d144d">nk_rgb</link>(255,0,0),&#32;<link linkend="_nuklear_8h_1a0624ae1d6500b0a2941274f1a99d144d">nk_rgb</link>(255,255,0),&#32;<link linkend="_nuklear_8h_1a0624ae1d6500b0a2941274f1a99d144d">nk_rgb</link>(0,255,0),&#32;<link linkend="_nuklear_8h_1a0624ae1d6500b0a2941274f1a99d144d">nk_rgb</link>(0,96,255)&#32;};
149 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structnk__rect">nk_rect</link>&#32;rect&#32;=&#32;{&#32;-5&#32;+&#32;pos.<link linkend="_structnk__vec2_1ac5f81ca9850b5c51081217c301cfea45">x</link>,&#32;-5&#32;+&#32;pos.<link linkend="_structnk__vec2_1af9ce34510fcf72827a980f5d92d78f1c">y</link>,&#32;10,&#32;10&#32;};
150 &#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1ae0cfbd590eb690b6e18403e5d3d86795">nk_fill_circle</link>(canvas,&#32;rect,&#32;colors[lead]);
151 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1a4ee391c8bab624943c822faafb2c320e"/>    <section>
    <title>error_callback()</title>
<indexterm><primary>error_callback</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>error_callback</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> error_callback (int error, const char * description)</computeroutput></para><para>
Definition at line 128 of file inputlag.c.</para>
<programlisting>129 {
130 &#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;Error:&#32;%s\n&quot;</emphasis>,&#32;description);
131 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1a286930f4e8ede059b83ff6eafa2ff718"/>    <section>
    <title>key_callback()</title>
<indexterm><primary>key_callback</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>key_callback</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> key_callback (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window, int key, int scancode, int action, int mods)</computeroutput></para><para>
Definition at line 133 of file inputlag.c.</para>
<programlisting>134 {
135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action&#32;!=&#32;<link linkend="_group__input_1ga2485743d0b59df3791c45951c4195265">GLFW_PRESS</link>)
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
137 
138 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>)
139 &#32;&#32;&#32;&#32;{
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_group__keys_1gaac6596c350b635c245113b81c2123b93">GLFW_KEY_ESCAPE</link>:
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1ga1cadeda7a1e2f224e06a8415d30741aa">glfwSetWindowShouldClose</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;1);
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
143 &#32;&#32;&#32;&#32;}
144 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1a3c04138a5bfe5d72780bb7e82a18e627"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (int argc, char ** argv)</computeroutput></para><para>
Definition at line 153 of file inputlag.c.</para>
<programlisting>154 {
155 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch,&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
156 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;frame_count&#32;=&#32;0;
157 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;last_time,&#32;current_time;
158 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;frame_rate&#32;=&#32;0;
159 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fullscreen&#32;=&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
160 &#32;&#32;&#32;&#32;<link linkend="_group__monitor_1ga8d9efd1cde9426692c73fe40437d0ae3">GLFWmonitor</link>*&#32;monitor&#32;=&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
161 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link>*&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>;
162 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structnk__context">nk_context</link>*&#32;nk;
163 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>nk_font_atlas*&#32;<link linkend="_structatlas">atlas</link>;
164 
165 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;show_forecasts&#32;=&#32;<link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a05630fa56b9871b46b97083d5f9bb56f">nk_true</link>;
166 
167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((ch&#32;=&#32;<link linkend="_getopt_8c_1a5ffa4c677fc71cecd94f140ef9db624c">getopt</link>(argc,&#32;argv,&#32;<emphasis role="stringliteral">&quot;fh&quot;</emphasis>))&#32;!=&#32;-1)
168 &#32;&#32;&#32;&#32;{
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(ch)
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;h&apos;</emphasis>:
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1ae8605e2b78cd4a81b6c6b5c30cb7366a">usage</link>();
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_SUCCESS);
174 
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;f&apos;</emphasis>:
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fullscreen&#32;=&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
179 &#32;&#32;&#32;&#32;}
180 
181 &#32;&#32;&#32;&#32;<link linkend="_group__init_1ga746e2757d069eaea423349aca6ae097a">glfwSetErrorCallback</link>(<link linkend="_inputlag_8c_1a4ee391c8bab624943c822faafb2c320e">error_callback</link>);
182 
183 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_group__init_1gab41771f0215a2e0afb4cf1cf98082d40">glfwInit</link>())
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
185 
186 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fullscreen)
187 &#32;&#32;&#32;&#32;{
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_g_l_f_wvidmode">GLFWvidmode</link>*&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>;
189 
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;monitor&#32;=&#32;<link linkend="_group__monitor_1ga59ea49f377fe701dd76764183e64d9f4">glfwGetPrimaryMonitor</link>();
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>&#32;=&#32;<link linkend="_group__monitor_1ga27319d7f045c4cbbeae5651696cacd5f">glfwGetVideoMode</link>(monitor);
192 
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;width;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;<link linkend="_glad_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>-&gt;height;
195 &#32;&#32;&#32;&#32;}
196 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
197 &#32;&#32;&#32;&#32;{
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>&#32;=&#32;640;
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>&#32;=&#32;480;
200 &#32;&#32;&#32;&#32;}
201 
202 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1gafe5e4922de1f9932d7e9849bb053b0c0">GLFW_CONTEXT_VERSION_MAJOR</link>,&#32;2);
203 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1ga31aca791e4b538c4e4a771eb95cc2d07">GLFW_CONTEXT_VERSION_MINOR</link>,&#32;0);
204 
205 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1ga620bc4280c7eab81ac9f02204500ed47">GLFW_SCALE_TO_MONITOR</link>,&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
206 &#32;&#32;&#32;&#32;<link linkend="_group__window_1ga69c40728499720bef8a49aa925ea0efa">glfwWindowHint</link>(<link linkend="_group__window_1gaf65ea8dafdc0edb07b821b9a336d5043">GLFW_WIN32_KEYBOARD_MENU</link>,&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>);
207 
208 &#32;&#32;&#32;&#32;<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>&#32;=&#32;<link linkend="_group__window_1ga680a02abe0e4494b6759d5703240713e">glfwCreateWindow</link>(<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>,&#32;<emphasis role="stringliteral">&quot;Input&#32;lag&#32;test&quot;</emphasis>,&#32;monitor,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
209 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>)
210 &#32;&#32;&#32;&#32;{
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(EXIT_FAILURE);
213 &#32;&#32;&#32;&#32;}
214 
215 &#32;&#32;&#32;&#32;<link linkend="_group__context_1gafd76c93e15ec8b0b90506a9936a46185">glfwMakeContextCurrent</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
216 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a7e9e0ebe65864f5f2bcd289c5736041b">gladLoadGL</link>(<link linkend="_group__context_1ga0e8af175218929615c16e74938c10f2a">glfwGetProcAddress</link>);
217 &#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1ad5903057f648a45f3164f87ea5fcb566">update_vsync</link>();
218 
219 &#32;&#32;&#32;&#32;last_time&#32;=&#32;<link linkend="_group__input_1ga03d4a1039b8662c71eeb40beea8cb622">glfwGetTime</link>();
220 
221 &#32;&#32;&#32;&#32;nk&#32;=&#32;<link linkend="_nuklear__glfw__gl2_8h_1a485142f73a3ce51d06cf342e519bd98c">nk_glfw3_init</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_nuklear__glfw__gl2_8h_1a3f65b561c3fe5ee58dc26a9fa7871296a2b01ef517799530bd682a4c3ed4413a7">NK_GLFW3_INSTALL_CALLBACKS</link>);
222 &#32;&#32;&#32;&#32;<link linkend="_nuklear__glfw__gl2_8h_1a844fe26e5dec34926c9d451ebaac395b">nk_glfw3_font_stash_begin</link>(&amp;<link linkend="_structatlas">atlas</link>);
223 &#32;&#32;&#32;&#32;<link linkend="_nuklear__glfw__gl2_8h_1ab57b568cd4096d4b3702284e742241c7">nk_glfw3_font_stash_end</link>();
224 
225 &#32;&#32;&#32;&#32;<link linkend="_group__input_1gaa4cbcb81b939b8800e44cea971ddae47">glfwSetKeyCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_inputlag_8c_1a286930f4e8ede059b83ff6eafa2ff718">key_callback</link>);
226 &#32;&#32;&#32;&#32;<link linkend="_group__input_1ga74124d0eff27040fd10e4df9e17d129c">glfwSetCursorPosCallback</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;<link linkend="_inputlag_8c_1ab9a970cff09c5a4031b814242706b4f6">cursor_pos_callback</link>);
227 
228 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_group__window_1gaa6162f67dfa38b8beda2fea623649332">glfwWindowShouldClose</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>))
229 &#32;&#32;&#32;&#32;{
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>;
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structnk__rect">nk_rect</link>&#32;area;
232 
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1ga872d16e4c77f58c0436f356255920cfc">glfwPollEvents</link>();
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1a4ccf9666cab68ad57d54c8a84ff5d1a3">sample_input</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
235 
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__window_1ga7feb769ebb3f3d21579b5a3fb07be76e">glfwGetWindowSize</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;&amp;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;area&#32;=&#32;<link linkend="_nuklear_8h_1aedba0cd2ec170c1f95f3396953982bc1">nk_rect</link>(0.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;0.<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>,&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>);
238 
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1afc250a2b6bf11f24bb73534a2f053c0d">glClear</link>(<link linkend="_glad_8h_1a947db9ff944c4b78e652144c3dd1060c">GL_COLOR_BUFFER_BIT</link>);
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear__glfw__gl2_8h_1a3209d00d9e620d9232a0c5865399a321">nk_glfw3_new_frame</link>();
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_nuklear_8h_1a321e62b21505a6329ab3fc5fda073dfb">nk_begin</link>(nk,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;area,&#32;0))
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a19e0e2f6db4862891d9801de3c3da323">nk_flags</link>&#32;align_left&#32;=&#32;<link linkend="_nuklear_8h_1a999a7efc02dbdbfda518e7b545f2549baf3ff4b63d6e35b624bd87a04e896d770">NK_TEXT_ALIGN_LEFT</link>&#32;|&#32;<link linkend="_nuklear_8h_1a999a7efc02dbdbfda518e7b545f2549ba494a17dc7b36c4528a6dc4ef1cbb549a">NK_TEXT_ALIGN_MIDDLE</link>;
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structnk__command__buffer">nk_command_buffer</link>&#32;*canvas&#32;=&#32;<link linkend="_nuklear_8h_1a9f73d2fddf9467ec18cafb0dff97de58">nk_window_get_canvas</link>(nk);
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lead;
246 
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(lead&#32;=&#32;show_forecasts&#32;?&#32;3&#32;:&#32;0;&#32;lead&#32;&gt;=&#32;0;&#32;lead--)
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1a79522ec801ca347aa80a4093099cf5f7">draw_marker</link>(canvas,&#32;lead,&#32;<link linkend="_nuklear_8h_1a941b2f79e575807bdd0e4b6aef1fb19f">nk_vec2</link>(cursor_pos.x&#32;+&#32;<link linkend="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e">cursor_vel</link>.<link linkend="_structnk__vec2_1ac5f81ca9850b5c51081217c301cfea45">x</link>&#32;*&#32;lead,
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor_pos.y&#32;+&#32;<link linkend="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e">cursor_vel</link>.<link linkend="_structnk__vec2_1af9ce34510fcf72827a980f5d92d78f1c">y</link>&#32;*&#32;lead));
250 
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;print&#32;instructions</emphasis>
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a76e65dc775c0bd5efaa3c8f38f96823f">nk_layout_row_dynamic</link>(nk,&#32;20,&#32;1);
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a73291c38de9253ba3c7abf1fa85b6aef">nk_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;Move&#32;mouse&#32;uniformly&#32;and&#32;check&#32;marker&#32;under&#32;cursor:&quot;</emphasis>,&#32;align_left);
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(lead&#32;=&#32;0;&#32;lead&#32;&lt;=&#32;3;&#32;lead++)&#32;{
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1aa6fa7480529cb74d07dd28c9c26d6549">nk_layout_row_begin</link>(nk,&#32;<link linkend="_nuklear_8h_1ae422966b8d24f5c93821b10c3d6b6feda7c62b7d29becc07b765d6ba95f3e1fdb">NK_STATIC</link>,&#32;12,&#32;2);
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1ab6fb149f7829d6c5f7361c93f26066aa">nk_layout_row_push</link>(nk,&#32;25);
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1a79522ec801ca347aa80a4093099cf5f7">draw_marker</link>(canvas,&#32;lead,&#32;<link linkend="_nuklear_8h_1a2977d8713feb43cbc7cc673b03333221">nk_layout_space_to_screen</link>(nk,&#32;<link linkend="_nuklear_8h_1a941b2f79e575807bdd0e4b6aef1fb19f">nk_vec2</link>(20,&#32;5)));
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a73291c38de9253ba3c7abf1fa85b6aef">nk_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;0);
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1ab6fb149f7829d6c5f7361c93f26066aa">nk_layout_row_push</link>(nk,&#32;500);
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lead&#32;==&#32;0)
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a73291c38de9253ba3c7abf1fa85b6aef">nk_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;-&#32;current&#32;cursor&#32;position&#32;(no&#32;input&#32;lag)&quot;</emphasis>,&#32;align_left);
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nk_labelf(nk,&#32;align_left,&#32;<emphasis role="stringliteral">&quot;-&#32;%d-frame&#32;forecast&#32;(input&#32;lag&#32;is&#32;%d&#32;frame)&quot;</emphasis>,&#32;lead,&#32;lead);
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a14c7337d52877793ae04968e75f2c21f">nk_layout_row_end</link>(nk);
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
266 
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a76e65dc775c0bd5efaa3c8f38f96823f">nk_layout_row_dynamic</link>(nk,&#32;20,&#32;1);
268 
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a59790990e5bc4dc513cab748448f68b4">nk_checkbox_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;Show&#32;forecasts&quot;</emphasis>,&#32;&amp;show_forecasts);
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a73291c38de9253ba3c7abf1fa85b6aef">nk_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;Input&#32;method:&quot;</emphasis>,&#32;align_left);
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_nuklear_8h_1a63d5b3edd4315c2d2fec189f6a852114">nk_option_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;glfwGetCursorPos&#32;(sync&#32;query)&quot;</emphasis>,&#32;<link linkend="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde">cursor_method</link>&#32;==&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2">cursor_sync_query</link>))
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde">cursor_method</link>&#32;=&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2">cursor_sync_query</link>;
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_nuklear_8h_1a63d5b3edd4315c2d2fec189f6a852114">nk_option_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;glfwSetCursorPosCallback&#32;(latest&#32;input&#32;message)&quot;</emphasis>,&#32;<link linkend="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde">cursor_method</link>&#32;==&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffac24aafc78bc01f95c569bfb303a80c37">cursor_input_message</link>))
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde">cursor_method</link>&#32;=&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffac24aafc78bc01f95c569bfb303a80c37">cursor_input_message</link>;
275 
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a73291c38de9253ba3c7abf1fa85b6aef">nk_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;0);&#32;<emphasis role="comment">//&#32;separator</emphasis>
277 
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nk_value_float(nk,&#32;<emphasis role="stringliteral">&quot;FPS&quot;</emphasis>,&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;frame_rate);
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_nuklear_8h_1a59790990e5bc4dc513cab748448f68b4">nk_checkbox_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;Enable&#32;vsync&quot;</emphasis>,&#32;&amp;<link linkend="_inputlag_8c_1af47b646ebdca09e9a1578071fe091a5d">enable_vsync</link>))
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1ad5903057f648a45f3164f87ea5fcb566">update_vsync</link>();
281 
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a73291c38de9253ba3c7abf1fa85b6aef">nk_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;0);&#32;<emphasis role="comment">//&#32;separator</emphasis>
283 
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a73291c38de9253ba3c7abf1fa85b6aef">nk_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;After&#32;swap:&quot;</emphasis>,&#32;align_left);
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a59790990e5bc4dc513cab748448f68b4">nk_checkbox_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;glClear&quot;</emphasis>,&#32;&amp;<link linkend="_inputlag_8c_1aa47ee607e93b09919d4b1f7da3a5a390">swap_clear</link>);
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a59790990e5bc4dc513cab748448f68b4">nk_checkbox_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;glFinish&quot;</emphasis>,&#32;&amp;<link linkend="_inputlag_8c_1acda392c4359729f9c39b9d9b54d1d832">swap_finish</link>);
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a59790990e5bc4dc513cab748448f68b4">nk_checkbox_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;draw&#32;with&#32;occlusion&#32;query&quot;</emphasis>,&#32;&amp;<link linkend="_inputlag_8c_1a54dec265285674365f21fc57e65796ae">swap_occlusion_query</link>);
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1a59790990e5bc4dc513cab748448f68b4">nk_checkbox_label</link>(nk,&#32;<emphasis role="stringliteral">&quot;glReadPixels&quot;</emphasis>,&#32;&amp;<link linkend="_inputlag_8c_1ae089bd438c24faf9c2a0513239d51cd3">swap_read_pixels</link>);
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
290 
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear_8h_1ae0ade48c4c8df72456b9d97ab3d195e3">nk_end</link>(nk);
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nuklear__glfw__gl2_8h_1a3832962c4af8db2b1d3d406e30c8eac3">nk_glfw3_render</link>(<link linkend="_nuklear_8h_1a9b070460af54cd26421eb7d000956f38a427cab30457c4303aece29c6fd290ab4">NK_ANTI_ALIASING_ON</link>);
293 
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1addbdd11cdc743a25fdd3d21d0fbeec18">swap_buffers</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
295 
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_count++;
297 
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current_time&#32;=&#32;<link linkend="_group__input_1ga03d4a1039b8662c71eeb40beea8cb622">glfwGetTime</link>();
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(current_time&#32;-&#32;last_time&#32;&gt;&#32;1.0)
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_rate&#32;=&#32;frame_count&#32;/&#32;(current_time&#32;-&#32;last_time);
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame_count&#32;=&#32;0;
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last_time&#32;=&#32;current_time;
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
305 &#32;&#32;&#32;&#32;}
306 
307 &#32;&#32;&#32;&#32;<link linkend="_group__init_1gafd90e6fd4819ea9e22e5e739519a6504">glfwTerminate</link>();
308 &#32;&#32;&#32;&#32;exit(EXIT_SUCCESS);
309 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1a4ccf9666cab68ad57d54c8a84ff5d1a3"/>    <section>
    <title>sample_input()</title>
<indexterm><primary>sample_input</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>sample_input</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> sample_input (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 65 of file inputlag.c.</para>
<programlisting>66 {
67 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;=&#32;.25;&#32;<emphasis role="comment">//&#32;exponential&#32;smoothing&#32;factor</emphasis>
68 
69 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde">cursor_method</link>&#32;==&#32;<link linkend="_inputlag_8c_1af715e26dfffd1f8de1c18449e2770cffa7ac633d007f43592728ddaa4830fe2c2">cursor_sync_query</link>)&#32;{
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__input_1gad289438eb7cf53d11eca685373f44105">glfwGetCursorPos</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>,&#32;&amp;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;&amp;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>);
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor_new.x&#32;=&#32;(float)&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>;
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor_new.y&#32;=&#32;(float)&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;
74 &#32;&#32;&#32;&#32;}
75 
76 &#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e">cursor_vel</link>.<link linkend="_structnk__vec2_1ac5f81ca9850b5c51081217c301cfea45">x</link>&#32;=&#32;(cursor_new.x&#32;-&#32;cursor_pos.x)&#32;*&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;+&#32;<link linkend="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e">cursor_vel</link>.<link linkend="_structnk__vec2_1ac5f81ca9850b5c51081217c301cfea45">x</link>&#32;*&#32;(1&#32;-&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>);
77 &#32;&#32;&#32;&#32;<link linkend="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e">cursor_vel</link>.<link linkend="_structnk__vec2_1af9ce34510fcf72827a980f5d92d78f1c">y</link>&#32;=&#32;(cursor_new.y&#32;-&#32;cursor_pos.y)&#32;*&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>&#32;+&#32;<link linkend="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e">cursor_vel</link>.<link linkend="_structnk__vec2_1af9ce34510fcf72827a980f5d92d78f1c">y</link>&#32;*&#32;(1&#32;-&#32;<link linkend="_glad_8h_1a3309789fc188587d666cda5ece79cf82">a</link>);
78 &#32;&#32;&#32;&#32;cursor_pos&#32;=&#32;cursor_new;
79 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1addbdd11cdc743a25fdd3d21d0fbeec18"/>    <section>
    <title>swap_buffers()</title>
<indexterm><primary>swap_buffers</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>swap_buffers</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> swap_buffers (<link linkend="_group__window_1ga3c96d80d363e67d13a41b5d1821f3242">GLFWwindow</link> * window)</computeroutput></para><para>
Definition at line 100 of file inputlag.c.</para>
<programlisting>101 {
102 &#32;&#32;&#32;&#32;<link linkend="_group__window_1gafb827800eedbfcbc97b1e5408df668d7">glfwSwapBuffers</link>(<link linkend="_truetype__test__win32_8c_1a773143cded4dde4b20b2c5dc501a5b51">window</link>);
103 
104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_inputlag_8c_1aa47ee607e93b09919d4b1f7da3a5a390">swap_clear</link>)
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1afc250a2b6bf11f24bb73534a2f053c0d">glClear</link>(<link linkend="_glad_8h_1a947db9ff944c4b78e652144c3dd1060c">GL_COLOR_BUFFER_BIT</link>);
106 
107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_inputlag_8c_1acda392c4359729f9c39b9d9b54d1d832">swap_finish</link>)
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a655940bd98884547109b757f23a833ce">glFinish</link>();
109 
110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_inputlag_8c_1a54dec265285674365f21fc57e65796ae">swap_occlusion_query</link>)&#32;{
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1acebcc1c5663f14ebde1d16831e5fed94">GLint</link>&#32;occlusion_result;
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_inputlag_8c_1a455b848631edc16dd4be1f0a9c0427db">occlusion_query</link>)
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1adc236d6ac7cd94c240c5d65e8a1b4ab6">glGenQueries</link>(1,&#32;&amp;<link linkend="_inputlag_8c_1a455b848631edc16dd4be1f0a9c0427db">occlusion_query</link>);
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a91cb9c5dc26bb2dabd3df6e67dd45a54">glBeginQuery</link>(<link linkend="_glad_8h_1ab0f6ab004415a67dd3d9be86546c0391">GL_SAMPLES_PASSED</link>,&#32;<link linkend="_inputlag_8c_1a455b848631edc16dd4be1f0a9c0427db">occlusion_query</link>);
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gl_8h_1a18a9548126ac9e9eb00f9cd26cb0ab85">glBegin</link>(<link linkend="_glad_8h_1a8c24a16d303b4d935f81c240a2cd88b8">GL_POINTS</link>);
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gl_8h_1a077e09fed4e8aef18821105c6d05cc20">glVertex2f</link>(0,&#32;0);
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gl_8h_1acedf7461ab825274c1c407dcc0ddd56b">glEnd</link>();
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a50563f73ea862a234a699993f00785b5">glEndQuery</link>(<link linkend="_glad_8h_1ab0f6ab004415a67dd3d9be86546c0391">GL_SAMPLES_PASSED</link>);
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a7edb54a2882c3aa4329d14b39c5080fb">glGetQueryObjectiv</link>(<link linkend="_inputlag_8c_1a455b848631edc16dd4be1f0a9c0427db">occlusion_query</link>,&#32;<link linkend="_glad_8h_1a5f22b4318913632dfd529bc7536fa1d6">GL_QUERY_RESULT</link>,&#32;&amp;occlusion_result);
120 &#32;&#32;&#32;&#32;}
121 
122 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_inputlag_8c_1ae089bd438c24faf9c2a0513239d51cd3">swap_read_pixels</link>)&#32;{
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;rgba[4];
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a62d860a543f5aa5813f5789526b6ad23">glReadPixels</link>(0,&#32;0,&#32;1,&#32;1,&#32;<link linkend="_glad_8h_1a9f2854f4a91a0d83d2d54cb8110bfca4">GL_RGBA</link>,&#32;<link linkend="_glad_8h_1a80a33c79f69417372d65d2a65ca36d49">GL_UNSIGNED_BYTE</link>,&#32;rgba);
125 &#32;&#32;&#32;&#32;}
126 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1ad5903057f648a45f3164f87ea5fcb566"/>    <section>
    <title>update_vsync()</title>
<indexterm><primary>update_vsync</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>update_vsync</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> update_vsync ( )</computeroutput></para><para>
Definition at line 89 of file inputlag.c.</para>
<programlisting>90 {
91 &#32;&#32;&#32;&#32;<link linkend="_group__context_1ga12a595c06947cec4967c6e1f14210a8a">glfwSwapInterval</link>(<link linkend="_inputlag_8c_1af47b646ebdca09e9a1578071fe091a5d">enable_vsync</link>&#32;==&#32;<link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a05630fa56b9871b46b97083d5f9bb56f">nk_true</link>&#32;?&#32;1&#32;:&#32;0);
92 }
</programlisting>    </section><anchor xml:id="_inputlag_8c_1ae8605e2b78cd4a81b6c6b5c30cb7366a"/>    <section>
    <title>usage()</title>
<indexterm><primary>usage</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>usage</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_glad_8h_1afb85c5d9b1bce96aa3b530d581194d1a">usage</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 54 of file inputlag.c.</para>
<programlisting>55 {
56 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Usage:&#32;inputlag&#32;[-h]&#32;[-f]\n&quot;</emphasis>);
57 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Options:\n&quot;</emphasis>);
58 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;&#32;-f&#32;create&#32;full&#32;screen&#32;window\n&quot;</emphasis>);
59 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;&#32;-h&#32;show&#32;this&#32;help\n&quot;</emphasis>);
60 }
</programlisting></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_inputlag_8c_1a54c1fbb8e24e2c3e494edcf47d8efbde"/>    <section>
    <title>cursor_method</title>
<indexterm><primary>cursor_method</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>cursor_method</secondary></indexterm>
<para><computeroutput>enum { ... }  cursor_method</computeroutput></para>    </section><anchor xml:id="_inputlag_8c_1af427305d7936f0a77e1aa90e5dce710e"/>    <section>
    <title>cursor_vel</title>
<indexterm><primary>cursor_vel</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>cursor_vel</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structnk__vec2">nk_vec2</link> cursor_new cursor_pos cursor_vel</computeroutput></para><para>
Definition at line 62 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1af47b646ebdca09e9a1578071fe091a5d"/>    <section>
    <title>enable_vsync</title>
<indexterm><primary>enable_vsync</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>enable_vsync</secondary></indexterm>
<para><computeroutput>int enable_vsync = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a05630fa56b9871b46b97083d5f9bb56f">nk_true</link></computeroutput></para><para>
Definition at line 87 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1a455b848631edc16dd4be1f0a9c0427db"/>    <section>
    <title>occlusion_query</title>
<indexterm><primary>occlusion_query</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>occlusion_query</secondary></indexterm>
<para><computeroutput><link linkend="_glad_8h_1a68c4714e43d8e827d80759f9cb864f3c">GLuint</link> occlusion_query</computeroutput></para><para>
Definition at line 98 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1aa47ee607e93b09919d4b1f7da3a5a390"/>    <section>
    <title>swap_clear</title>
<indexterm><primary>swap_clear</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>swap_clear</secondary></indexterm>
<para><computeroutput>int swap_clear = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a61ead1dc2dd7e18d7bf67a165f1d28d2">nk_false</link></computeroutput></para><para>
Definition at line 94 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1acda392c4359729f9c39b9d9b54d1d832"/>    <section>
    <title>swap_finish</title>
<indexterm><primary>swap_finish</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>swap_finish</secondary></indexterm>
<para><computeroutput>int swap_finish = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a05630fa56b9871b46b97083d5f9bb56f">nk_true</link></computeroutput></para><para>
Definition at line 95 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1a54dec265285674365f21fc57e65796ae"/>    <section>
    <title>swap_occlusion_query</title>
<indexterm><primary>swap_occlusion_query</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>swap_occlusion_query</secondary></indexterm>
<para><computeroutput>int swap_occlusion_query = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a61ead1dc2dd7e18d7bf67a165f1d28d2">nk_false</link></computeroutput></para><para>
Definition at line 96 of file inputlag.c.</para>
    </section><anchor xml:id="_inputlag_8c_1ae089bd438c24faf9c2a0513239d51cd3"/>    <section>
    <title>swap_read_pixels</title>
<indexterm><primary>swap_read_pixels</primary><secondary>inputlag.c</secondary></indexterm>
<indexterm><primary>inputlag.c</primary><secondary>swap_read_pixels</secondary></indexterm>
<para><computeroutput>int swap_read_pixels = <link linkend="_nuklear_8h_1abc6126af1d45847bc59afa0aa3216b04a61ead1dc2dd7e18d7bf67a165f1d28d2">nk_false</link></computeroutput></para><para>
Definition at line 97 of file inputlag.c.</para>
</section>
</section>
</section>
