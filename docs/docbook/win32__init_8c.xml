<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_win32__init_8c">
<title>deps/glfw/src/win32_init.c File Reference</title>
<indexterm><primary>deps/glfw/src/win32_init.c</primary></indexterm>
<programlisting>#include &quot;internal.h&quot;
#include &lt;stdlib.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_win32__init_8c_1ad40d95988c015c7af2bfa7347a0af5b9">GUID_DEVINTERFACE_HID</link>   _glfw_GUID_DEVINTERFACE_HID</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>WCHAR * <link linkend="_win32__init_8c_1afcf517cf44f0f8a87489860bc9373a54">_glfwCreateWideStringFromUTF8Win32</link> (const char *<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>)</para>
</listitem>
            <listitem><para>char * <link linkend="_win32__init_8c_1a17207e4093e353bc490b8c23fef40e3e">_glfwCreateUTF8FromWideStringWin32</link> (const WCHAR *<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link> (int <link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>, const char *description)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__init_8c_1afc4eeee5a7d5b62252466d3f6740c48b">_glfwUpdateKeyNamesWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para>BOOL <link linkend="_win32__init_8c_1a78f377571872189aa6e46ef54afae7a4">_glfwIsWindowsVersionOrGreaterWin32</link> (WORD major, WORD minor, WORD sp)</para>
</listitem>
            <listitem><para>BOOL <link linkend="_win32__init_8c_1a5ce4ee459a0874a32dc1b0e79c3a0619">_glfwIsWindows10BuildOrGreaterWin32</link> (WORD build)</para>
</listitem>
            <listitem><para><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> <link linkend="_win32__init_8c_1a3c83872580850a72c3cde2861fdc229f">_glfwConnectWin32</link> (int platformID, <link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link> *platform)</para>
</listitem>
            <listitem><para>int <link linkend="_win32__init_8c_1af4042dcaff3b650d19d2052ea5778bbf">_glfwInitWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_win32__init_8c_1ae5fd5e0d48189d6a1ea0e11418e9a236">_glfwTerminateWin32</link> (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_win32__init_8c_1ad40d95988c015c7af2bfa7347a0af5b9"/>    <section>
    <title>GUID_DEVINTERFACE_HID</title>
<indexterm><primary>GUID_DEVINTERFACE_HID</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>GUID_DEVINTERFACE_HID</secondary></indexterm>
<para><computeroutput>#define GUID_DEVINTERFACE_HID   _glfw_GUID_DEVINTERFACE_HID</computeroutput></para><para>
Definition at line 37 of file win32_init.c.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_win32__init_8c_1a3c83872580850a72c3cde2861fdc229f"/>    <section>
    <title>_glfwConnectWin32()</title>
<indexterm><primary>_glfwConnectWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwConnectWin32</secondary></indexterm>
<para><computeroutput><link linkend="_internal_8h_1ac5743c31bece872e24528b5a45e354c5">GLFWbool</link> _glfwConnectWin32 (int platformID, <link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link> * platform)</computeroutput></para><para>
Definition at line 539 of file win32_init.c.</para>
<programlisting>540 {
541 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct___g_l_f_wplatform">_GLFWplatform</link>&#32;win32&#32;=
542 &#32;&#32;&#32;&#32;{
543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group__init_1ga8d3d17df2ab57492cef665da52c603a1">GLFW_PLATFORM_WIN32</link>,
544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1af4042dcaff3b650d19d2052ea5778bbf">_glfwInitWin32</link>,
545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1ae5fd5e0d48189d6a1ea0e11418e9a236">_glfwTerminateWin32</link>,
546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a731aa16e1109aa6963a7902af9b1e290">_glfwGetCursorPosWin32</link>,
547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a7adc955bc72784fdf854cfd6e32ba287">_glfwSetCursorPosWin32</link>,
548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0e6560aa1f1fc5f556543bd1dbc954f3">_glfwSetCursorModeWin32</link>,
549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ad52b5863f16d0498407bbb612ea6f378">_glfwSetRawMouseMotionWin32</link>,
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a87187d130a267838b8565c44603151e5">_glfwRawMouseMotionSupportedWin32</link>,
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5b60a1c1d42c9f51b6681afca63a154a">_glfwCreateCursorWin32</link>,
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ab83aeb5b11824c61a09ee83ca90d22e3">_glfwCreateStandardCursorWin32</link>,
553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a17e1a4d5ad34e0e6c9bfd31e78460618">_glfwDestroyCursorWin32</link>,
554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ab5d21e2433ee1d512ae83b39549e49fc">_glfwSetCursorWin32</link>,
555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a7e6687a8499d9bf866660ad394b19750">_glfwGetScancodeNameWin32</link>,
556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a2083a2b904b8909ef96ebe7e34f373c3">_glfwGetKeyScancodeWin32</link>,
557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1abf1a0ba92102516bdbc00c164edf5017">_glfwSetClipboardStringWin32</link>,
558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1af195ff960b1b462d052bfee6c8e64ea6">_glfwGetClipboardStringWin32</link>,
559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a3e920595135793177be13d7ad39d20b7">_glfwInitJoysticksWin32</link>,
560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a219b355c48800354e45f6091d7b2e564">_glfwTerminateJoysticksWin32</link>,
561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a031cd959c74b03ac0523bbe77f3b117e">_glfwPollJoystickWin32</link>,
562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1ab4f284ba366d4134e9fb38c4f76c10a3">_glfwGetMappingNameWin32</link>,
563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__joystick_8c_1a148681c996ee9d03ca7be51de6360ee4">_glfwUpdateGamepadGUIDWin32</link>,
564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a9df387b074c350e1cca8dbd26a375243">_glfwFreeMonitorWin32</link>,
565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a4261cca207894705081bbe41a912529b">_glfwGetMonitorPosWin32</link>,
566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a3fe7a2258a3ce26e3a8257c3d0ea1ca0">_glfwGetMonitorContentScaleWin32</link>,
567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a844e706059e08613de692291969111d2">_glfwGetMonitorWorkareaWin32</link>,
568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1ab4ce13c23c2b2bc9635e36ee5387375e">_glfwGetVideoModesWin32</link>,
569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a7b43d8548648f7a49903525cda10e09c">_glfwGetVideoModeWin32</link>,
570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1afb31cbafed71b1ea3fd13f1110d44af8">_glfwGetGammaRampWin32</link>,
571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a605f08f68a28c0bde60a12a0a399938e">_glfwSetGammaRampWin32</link>,
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a37cb0ccc0788efd9a66af8f32bf5518c">_glfwCreateWindowWin32</link>,
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa152206c5c520bd0dece9b837b143fa0">_glfwDestroyWindowWin32</link>,
574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a86d6e8b4e6609cfeba7691e466b21184">_glfwSetWindowTitleWin32</link>,
575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a36bc130cc992e12d40e25a6a48e5a53b">_glfwSetWindowIconWin32</link>,
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a11dbd52d555826a65ab903f5967a6c0d">_glfwGetWindowPosWin32</link>,
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a497c96018316ca28c83a6ef2f1461a19">_glfwSetWindowPosWin32</link>,
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa7047fda835205edd1f16fe265829654">_glfwGetWindowSizeWin32</link>,
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a658f42d345f10d3ab52613b030d801c6">_glfwSetWindowSizeWin32</link>,
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ada7a6afa85a12d7a6ff3efe78e6abe0c">_glfwSetWindowSizeLimitsWin32</link>,
581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ab5e4af472645ebb89e26d1e9c6366aa4">_glfwSetWindowAspectRatioWin32</link>,
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5f58eba94e456b57b09b2cc1841ce4c8">_glfwGetFramebufferSizeWin32</link>,
583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a4d10fcc47127623f35696d95b5a14f05">_glfwGetWindowFrameSizeWin32</link>,
584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5c8171151c6daa5a7b1f22f45e1c4827">_glfwGetWindowContentScaleWin32</link>,
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a4608d975b87d98c03adbf753b4ff6976">_glfwIconifyWindowWin32</link>,
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a7c516bd818882391fdaeabe7a13eba52">_glfwRestoreWindowWin32</link>,
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1cf6741c3f061de6500770ce5116d14d">_glfwMaximizeWindowWin32</link>,
588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a02bfef52e9e9352b7cf691434d01ec70">_glfwShowWindowWin32</link>,
589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a41ff01be90f8280a68455451b1d5cd64">_glfwHideWindowWin32</link>,
590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a072d8e8fc92daf82e56bf4d615d2cda5">_glfwRequestWindowAttentionWin32</link>,
591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5e136a8b748e12c555e0c044c337358f">_glfwFocusWindowWin32</link>,
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a20e0a994ae4879caedde480b1dddf948">_glfwSetWindowMonitorWin32</link>,
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a9b069dba7d331d2cae0ecb3e975b027e">_glfwWindowFocusedWin32</link>,
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a1ef31772bba9bbbb70966126a08778d0">_glfwWindowIconifiedWin32</link>,
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a08f4731441f2215f589dc641eb015bb4">_glfwWindowVisibleWin32</link>,
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a4640f26608b837f9793ef0ee923036eb">_glfwWindowMaximizedWin32</link>,
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6e0135d2fd5538719c900c41424caa8b">_glfwWindowHoveredWin32</link>,
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a5a02f919a9134279e0d46ce430986dbe">_glfwFramebufferTransparentWin32</link>,
599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1abfdc4284feacb8b35eb527b81b630731">_glfwGetWindowOpacityWin32</link>,
600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa9ba9944e5152d29f1aa551f14d75b2d">_glfwSetWindowResizableWin32</link>,
601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a0d35deb7d39352e99fba8fa96013d969">_glfwSetWindowDecoratedWin32</link>,
602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a9da5d6290cad503b221e73482b67218e">_glfwSetWindowFloatingWin32</link>,
603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a9428adda957ce508e3041119d670de0f">_glfwSetWindowOpacityWin32</link>,
604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a08fda6580fcceccb5465cdb1fe770d7f">_glfwSetWindowMousePassthroughWin32</link>,
605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a8de69356bacf2073a7d4903d2d6ec741">_glfwPollEventsWin32</link>,
606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a482c57b8e130d21ad68ddf965f74e1a0">_glfwWaitEventsWin32</link>,
607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a62c585e2432977fa2b9fa4757a0d4cf9">_glfwWaitEventsTimeoutWin32</link>,
608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aaef33130746d9bb932ba1d7d7b51dabd">_glfwPostEmptyEventWin32</link>,
609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1afdce1538a8e79a96033a8899db6e09c2">_glfwGetEGLPlatformWin32</link>,
610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a142f59c1c4c9897efbecad74e02698f1">_glfwGetEGLNativeDisplayWin32</link>,
611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a6c9791d77eda997cb697a353fc77d065">_glfwGetEGLNativeWindowWin32</link>,
612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a42b3c1869e809150cfd5c661cf291108">_glfwGetRequiredInstanceExtensionsWin32</link>,
613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a80c3e9913415584c38f9af75ba2838a5">_glfwGetPhysicalDevicePresentationSupportWin32</link>,
614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1ae332c39d7d375053b5c56d340fb8acd9">_glfwCreateWindowSurfaceWin32</link>,
615 &#32;&#32;&#32;&#32;};
616 
617 &#32;&#32;&#32;&#32;*platform&#32;=&#32;win32;
618 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
619 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1a17207e4093e353bc490b8c23fef40e3e"/>    <section>
    <title>_glfwCreateUTF8FromWideStringWin32()</title>
<indexterm><primary>_glfwCreateUTF8FromWideStringWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwCreateUTF8FromWideStringWin32</secondary></indexterm>
<para><computeroutput>char* _glfwCreateUTF8FromWideStringWin32 (const WCHAR * source)</computeroutput></para><para>
Definition at line 408 of file win32_init.c.</para>
<programlisting>409 {
410 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
411 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>;
412 
413 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>&#32;=&#32;WideCharToMultiByte(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>)
415 &#32;&#32;&#32;&#32;{
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;to&#32;UTF-8&quot;</emphasis>);
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
419 &#32;&#32;&#32;&#32;}
420 
421 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;1);
422 
423 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!WideCharToMultiByte(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>,&#32;<link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))
424 &#32;&#32;&#32;&#32;{
425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;to&#32;UTF-8&quot;</emphasis>);
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>);
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
429 &#32;&#32;&#32;&#32;}
430 
431 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
432 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1afcf517cf44f0f8a87489860bc9373a54"/>    <section>
    <title>_glfwCreateWideStringFromUTF8Win32()</title>
<indexterm><primary>_glfwCreateWideStringFromUTF8Win32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwCreateWideStringFromUTF8Win32</secondary></indexterm>
<para><computeroutput>WCHAR* _glfwCreateWideStringFromUTF8Win32 (const char * source)</computeroutput></para><para>
Definition at line 380 of file win32_init.c.</para>
<programlisting>381 {
382 &#32;&#32;&#32;&#32;WCHAR*&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
383 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>;
384 
385 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>&#32;=&#32;MultiByteToWideChar(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>)
387 &#32;&#32;&#32;&#32;{
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;from&#32;UTF-8&quot;</emphasis>);
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
391 &#32;&#32;&#32;&#32;}
392 
393 &#32;&#32;&#32;&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>&#32;=&#32;<link linkend="_init_8c_1afdf24e4f0665535fd3d012b810ffb18f">_glfw_calloc</link>(<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR));
394 
395 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!MultiByteToWideChar(CP_UTF8,&#32;0,&#32;<link linkend="_glad_8h_1afdd0f0e67e302eefcb4f6b23732e7ea3">source</link>,&#32;-1,&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>,&#32;<link linkend="_glad_8h_1a5b40aca7a9682963dd00a8f5aef0a901">count</link>))
396 &#32;&#32;&#32;&#32;{
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1a596868de8858d6d69cc642152a319b24">_glfwInputErrorWin32</link>(<link linkend="_group__errors_1gad44162d78100ea5e87cdd38426b8c7a1">GLFW_PLATFORM_ERROR</link>,
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Win32:&#32;Failed&#32;to&#32;convert&#32;string&#32;from&#32;UTF-8&quot;</emphasis>);
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>);
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
401 &#32;&#32;&#32;&#32;}
402 
403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_glad_8h_1aa43eab0fe80422366a4602998d53b133">target</link>;
404 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1af4042dcaff3b650d19d2052ea5778bbf"/>    <section>
    <title>_glfwInitWin32()</title>
<indexterm><primary>_glfwInitWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwInitWin32</secondary></indexterm>
<para><computeroutput>int _glfwInitWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 621 of file win32_init.c.</para>
<programlisting>622 {
623 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!loadLibraries())
624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
625 
626 &#32;&#32;&#32;&#32;createKeyTables();
627 &#32;&#32;&#32;&#32;<link linkend="_win32__init_8c_1afc4eeee5a7d5b62252466d3f6740c48b">_glfwUpdateKeyNamesWin32</link>();
628 
629 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a8889f30a5ad0faeff9dcfb915ac5cf27">_glfwIsWindows10CreatorsUpdateOrGreaterWin32</link>())
630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a067e1d6f40e35ce50c89b3df937f8bbe">SetProcessDpiAwarenessContext</link>(<link linkend="_win32__platform_8h_1ac007743843b15f477f33dc5c3dd0507a">DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2</link>);
631 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a5e26976cd63d69f6ff83f646e6a6f27f">IsWindows8Point1OrGreater</link>())
632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1aa2f8c4cf133af6bf2fb63a09d5cb9451">SetProcessDpiAwareness</link>(<link linkend="_win32__platform_8h_1a0b4072c3e306aab56e4b1f41f66ecfd0aad0077e9938715939b18fc533eeae097">PROCESS_PER_MONITOR_DPI_AWARE</link>);
633 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_win32__platform_8h_1a4bcb1405eb8c8c83bcb5b3089e6d2547">IsWindowsVistaOrGreater</link>())
634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a33bdd095adc0364c3ffd9ef077ea2f5b">SetProcessDPIAware</link>();
635 
636 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_win32__platform_8h_1a51e8da6667fce5464f07bc810fc780dc">_glfwRegisterWindowClassWin32</link>())
637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
638 
639 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!createHelperWindow())
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1gac877fe3b627d21ef3a0a23e0a73ba8c5">GLFW_FALSE</link>;
641 
642 &#32;&#32;&#32;&#32;<link linkend="_win32__monitor_8c_1a345b11644c658a9a94b0eeb4ed4a0618">_glfwPollMonitorsWin32</link>();
643 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group__init_1ga2744fbb29b5631bb28802dbe0cf36eba">GLFW_TRUE</link>;
644 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1a596868de8858d6d69cc642152a319b24"/>    <section>
    <title>_glfwInputErrorWin32()</title>
<indexterm><primary>_glfwInputErrorWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwInputErrorWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwInputErrorWin32 (int error, const char * description)</computeroutput></para><para>
Definition at line 436 of file win32_init.c.</para>
<programlisting>437 {
438 &#32;&#32;&#32;&#32;WCHAR&#32;<link linkend="_structbuffer">buffer</link>[<link linkend="_internal_8h_1af6333ef81718d365141bb1a64ed0c2e3">_GLFW_MESSAGE_SIZE</link>]&#32;=&#32;<link linkend="_stb__vorbis_8c_1aa73214aa5f2f94f63d90bb4e3d99fe53">L</link><emphasis role="stringliteral">&quot;&quot;</emphasis>;
439 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>[<link linkend="_internal_8h_1af6333ef81718d365141bb1a64ed0c2e3">_GLFW_MESSAGE_SIZE</link>]&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
440 
441 &#32;&#32;&#32;&#32;FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM&#32;|
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FORMAT_MESSAGE_IGNORE_INSERTS&#32;|
443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FORMAT_MESSAGE_MAX_WIDTH_MASK,
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetLastError()&#32;&amp;&#32;0xffff,
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MAKELANGID(LANG_NEUTRAL,&#32;SUBLANG_DEFAULT),
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structbuffer">buffer</link>,
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structbuffer">buffer</link>)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR),
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
450 &#32;&#32;&#32;&#32;WideCharToMultiByte(CP_UTF8,&#32;0,&#32;<link linkend="_structbuffer">buffer</link>,&#32;-1,&#32;<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>),&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
451 
452 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3287b282ec57a4a89127ae51f49f10f5">_glfwInputError</link>(<link linkend="_cave__main_8c_1a42c6b1edc1bd763019f0eb5edce18793">error</link>,&#32;<emphasis role="stringliteral">&quot;%s:&#32;%s&quot;</emphasis>,&#32;description,&#32;<link linkend="_glad_8h_1ab5d4c2bfcb78f279c688575297d42f74">message</link>);
453 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1a5ce4ee459a0874a32dc1b0e79c3a0619"/>    <section>
    <title>_glfwIsWindows10BuildOrGreaterWin32()</title>
<indexterm><primary>_glfwIsWindows10BuildOrGreaterWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwIsWindows10BuildOrGreaterWin32</secondary></indexterm>
<para><computeroutput>BOOL _glfwIsWindows10BuildOrGreaterWin32 (WORD build)</computeroutput></para><para>
Definition at line 526 of file win32_init.c.</para>
<programlisting>527 {
528 &#32;&#32;&#32;&#32;OSVERSIONINFOEXW&#32;osvi&#32;=&#32;{&#32;<emphasis role="keyword">sizeof</emphasis>(osvi),&#32;10,&#32;0,&#32;build&#32;};
529 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;=&#32;VER_MAJORVERSION&#32;|&#32;VER_MINORVERSION&#32;|&#32;VER_BUILDNUMBER;
530 &#32;&#32;&#32;&#32;ULONGLONG&#32;cond&#32;=&#32;VerSetConditionMask(0,&#32;VER_MAJORVERSION,&#32;VER_GREATER_EQUAL);
531 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_MINORVERSION,&#32;VER_GREATER_EQUAL);
532 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_BUILDNUMBER,&#32;VER_GREATER_EQUAL);
533 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Use&#32;RtlVerifyVersionInfo&#32;instead&#32;of&#32;VerifyVersionInfoW&#32;as&#32;the</emphasis>
534 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;latter&#32;lies&#32;unless&#32;the&#32;user&#32;knew&#32;to&#32;embed&#32;a&#32;non-default&#32;manifest</emphasis>
535 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;announcing&#32;support&#32;for&#32;Windows&#32;10&#32;via&#32;supportedOS&#32;GUID</emphasis>
536 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_win32__platform_8h_1abfd9f0bf7f4fe1da260cc3a694d6228f">RtlVerifyVersionInfo</link>(&amp;osvi,&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>,&#32;cond)&#32;==&#32;0;
537 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1a78f377571872189aa6e46ef54afae7a4"/>    <section>
    <title>_glfwIsWindowsVersionOrGreaterWin32()</title>
<indexterm><primary>_glfwIsWindowsVersionOrGreaterWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwIsWindowsVersionOrGreaterWin32</secondary></indexterm>
<para><computeroutput>BOOL _glfwIsWindowsVersionOrGreaterWin32 (WORD major, WORD minor, WORD sp)</computeroutput></para><para>
Definition at line 511 of file win32_init.c.</para>
<programlisting>512 {
513 &#32;&#32;&#32;&#32;OSVERSIONINFOEXW&#32;osvi&#32;=&#32;{&#32;<emphasis role="keyword">sizeof</emphasis>(osvi),&#32;major,&#32;minor,&#32;0,&#32;0,&#32;{0},&#32;sp&#32;};
514 &#32;&#32;&#32;&#32;DWORD&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>&#32;=&#32;VER_MAJORVERSION&#32;|&#32;VER_MINORVERSION&#32;|&#32;VER_SERVICEPACKMAJOR;
515 &#32;&#32;&#32;&#32;ULONGLONG&#32;cond&#32;=&#32;VerSetConditionMask(0,&#32;VER_MAJORVERSION,&#32;VER_GREATER_EQUAL);
516 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_MINORVERSION,&#32;VER_GREATER_EQUAL);
517 &#32;&#32;&#32;&#32;cond&#32;=&#32;VerSetConditionMask(cond,&#32;VER_SERVICEPACKMAJOR,&#32;VER_GREATER_EQUAL);
518 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;Use&#32;RtlVerifyVersionInfo&#32;instead&#32;of&#32;VerifyVersionInfoW&#32;as&#32;the</emphasis>
519 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;latter&#32;lies&#32;unless&#32;the&#32;user&#32;knew&#32;to&#32;embed&#32;a&#32;non-default&#32;manifest</emphasis>
520 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;announcing&#32;support&#32;for&#32;Windows&#32;10&#32;via&#32;supportedOS&#32;GUID</emphasis>
521 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_win32__platform_8h_1abfd9f0bf7f4fe1da260cc3a694d6228f">RtlVerifyVersionInfo</link>(&amp;osvi,&#32;<link linkend="_glad_8h_1a582594109983c43d7023a28318a0bb3c">mask</link>,&#32;cond)&#32;==&#32;0;
522 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1ae5fd5e0d48189d6a1ea0e11418e9a236"/>    <section>
    <title>_glfwTerminateWin32()</title>
<indexterm><primary>_glfwTerminateWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwTerminateWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwTerminateWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 646 of file win32_init.c.</para>
<programlisting>647 {
648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.deviceNotificationHandle)
649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnregisterDeviceNotification(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.deviceNotificationHandle);
650 
651 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle)
652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyWindow(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.helperWindowHandle);
653 
654 &#32;&#32;&#32;&#32;<link linkend="_win32__platform_8h_1a85fb6be0a27d7f17a5d90eaec5320627">_glfwUnregisterWindowClassWin32</link>();
655 
656 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.clipboardString);
657 &#32;&#32;&#32;&#32;<link linkend="_init_8c_1abcf72962b101a8a5c539da1a278b0e9e">_glfw_free</link>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.rawInput);
658 
659 &#32;&#32;&#32;&#32;<link linkend="_wgl__context_8c_1a441ed61fa295e53fca605f2e00c51e83">_glfwTerminateWGL</link>();
660 &#32;&#32;&#32;&#32;<link linkend="_egl__context_8c_1ab095be9ec2b3a40942da090ee7ab2960">_glfwTerminateEGL</link>();
661 
662 &#32;&#32;&#32;&#32;freeLibraries();
663 }
</programlisting>    </section><anchor xml:id="_win32__init_8c_1afc4eeee5a7d5b62252466d3f6740c48b"/>    <section>
    <title>_glfwUpdateKeyNamesWin32()</title>
<indexterm><primary>_glfwUpdateKeyNamesWin32</primary><secondary>win32_init.c</secondary></indexterm>
<indexterm><primary>win32_init.c</primary><secondary>_glfwUpdateKeyNamesWin32</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> _glfwUpdateKeyNamesWin32 (<link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> )</computeroutput></para><para>
Definition at line 457 of file win32_init.c.</para>
<programlisting>458 {
459 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>;
460 &#32;&#32;&#32;&#32;BYTE&#32;state[256]&#32;=&#32;{0};
461 
462 &#32;&#32;&#32;&#32;memset(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames));
463 
464 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;=&#32;<link linkend="_group__keys_1gaddb2c23772b97fd7e26e8ee66f1ad014">GLFW_KEY_SPACE</link>;&#32;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;&lt;=&#32;<link linkend="_group__keys_1ga442cbaef7bfb9a4ba13594dd7fbf2789">GLFW_KEY_LAST</link>;&#32;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>++)
465 &#32;&#32;&#32;&#32;{
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT&#32;vk;
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;scancode,&#32;<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>;
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WCHAR&#32;chars[16];
469 
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scancode&#32;=&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.scancodes[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>];
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(scancode&#32;==&#32;-1)
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
473 
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;&gt;=&#32;<link linkend="_group__keys_1ga10515dafc55b71e7683f5b4fedd1c70d">GLFW_KEY_KP_0</link>&#32;&amp;&amp;&#32;<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;&lt;=&#32;<link linkend="_group__keys_1gad09c7c98acc79e89aa6a0a91275becac">GLFW_KEY_KP_ADD</link>)
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UINT&#32;vks[]&#32;=&#32;{
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_NUMPAD0,&#32;&#32;VK_NUMPAD1,&#32;&#32;VK_NUMPAD2,&#32;VK_NUMPAD3,
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_NUMPAD4,&#32;&#32;VK_NUMPAD5,&#32;&#32;VK_NUMPAD6,&#32;VK_NUMPAD7,
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_NUMPAD8,&#32;&#32;VK_NUMPAD9,&#32;&#32;VK_DECIMAL,&#32;VK_DIVIDE,
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VK_MULTIPLY,&#32;VK_SUBTRACT,&#32;VK_ADD
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
482 
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vk&#32;=&#32;vks[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>&#32;-&#32;<link linkend="_group__keys_1ga10515dafc55b71e7683f5b4fedd1c70d">GLFW_KEY_KP_0</link>];
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vk&#32;=&#32;MapVirtualKey(scancode,&#32;MAPVK_VSC_TO_VK);
487 
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;=&#32;ToUnicode(vk,&#32;scancode,&#32;state,
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chars,&#32;<emphasis role="keyword">sizeof</emphasis>(chars)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR),
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
491 
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;==&#32;-1)
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;=&#32;ToUnicode(vk,&#32;scancode,&#32;state,
495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chars,&#32;<emphasis role="keyword">sizeof</emphasis>(chars)&#32;/&#32;<emphasis role="keyword">sizeof</emphasis>(WCHAR),
496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
498 
499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>&#32;&lt;&#32;1)
500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
501 
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WideCharToMultiByte(CP_UTF8,&#32;0,&#32;chars,&#32;1,
503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>],
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_init_8c_1a3007bc654ca6468ee69759007f70ba1e">_glfw</link>.win32.keynames[<link linkend="_gears_8c_1accd6b5b92b78666e36543412d4ac14cd">key</link>]),
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
506 &#32;&#32;&#32;&#32;}
507 }
</programlisting></section>
</section>
</section>
