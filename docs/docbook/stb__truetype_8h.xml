<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stb__truetype_8h">
<title>deps/stb/stb_truetype.h File Reference</title>
<indexterm><primary>deps/stb/stb_truetype.h</primary></indexterm>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structstbtt____buf">stbtt__buf</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__packedchar">stbtt_packedchar</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__pack__range">stbtt_pack_range</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__pack__context">stbtt_pack_context</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt__vertex">stbtt_vertex</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structstbtt____bitmap">stbtt__bitmap</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1a793c93dc8e39787cf5966bec548730d5">__STB_INCLUDE_STB_TRUETYPE_H__</link></para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link>   extern</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1a42c4058f71988e703efdf4703d5dfe31">STBTT_POINT_SIZE</link>(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)   (-(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>))</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22">stbtt_vertex_type</link>   short</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1ac914b70667c9abbe432dcc4c048e6542">STBTT_MACSTYLE_DONTCARE</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1a3856cc4fbab4c126c2c438c6f567525d">STBTT_MACSTYLE_BOLD</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1a95e8d57e767119c978652397df54afef">STBTT_MACSTYLE_ITALIC</link>   2</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1a9064e582d96dcbaf2f573896cccd5ef7">STBTT_MACSTYLE_UNDERSCORE</link>   4</para>
</listitem>
            <listitem><para>#define <link linkend="_stb__truetype_8h_1accb2ecf3e0d840362ebba3fe3da192da">STBTT_MACSTYLE_NONE</link>   8</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_structstbtt__pack__context">stbtt_pack_context</link> <link linkend="_stb__truetype_8h_1a37d613643adacbed24c22718faf6afc7">stbtt_pack_context</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> <link linkend="_stb__truetype_8h_1a82ca6622f6983cc08eca850280126daf">stbtt_fontinfo</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structstbrp__rect">stbrp_rect</link> <link linkend="_stb__truetype_8h_1a7c4a99b31ea2207a0b2bbcbdab8f3840">stbrp_rect</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link> <link linkend="_stb__truetype_8h_1a988d6ec9ddb583b248cc96f17449dd6b">stbtt_kerningentry</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab335ba97e1798b621313de85a9a6e69d">STBTT_vmove</link> =1, 
<link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>, 
<link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>, 
<link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab6cd2670234c731eafba404d3a2470fd">STBTT_vcubic</link>
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6a7df9cd0e95e0b375d03348661b399b69">STBTT_PLATFORM_ID_UNICODE</link> =0, 
<link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6adc1a3ed4f2abe63dd4e91d789136db3f">STBTT_PLATFORM_ID_MAC</link> =1, 
<link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6acd63703eafd91118387dfb70b384132d">STBTT_PLATFORM_ID_ISO</link> =2, 
<link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6a86f00e4c49cfec574b34090faa47f878">STBTT_PLATFORM_ID_MICROSOFT</link> =3
 }</para>
</listitem>
            <listitem><para>enum { 
<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbbaeec1111b4adcd61a20a461138726fc46">STBTT_UNICODE_EID_UNICODE_1_0</link> =0, 
<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbbaa13de23938974ed5ed2039ad0c623901">STBTT_UNICODE_EID_UNICODE_1_1</link> =1, 
<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba2803b7d7150216b6e67cdd2ef9e734b0">STBTT_UNICODE_EID_ISO_10646</link> =2, 
<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba4ead513507e004e256fb772d7ee91f60">STBTT_UNICODE_EID_UNICODE_2_0_BMP</link> =3, 

<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba95f85f02ffe39539e6b4032a3db58eed">STBTT_UNICODE_EID_UNICODE_2_0_FULL</link> =4
 }</para>
</listitem>
            <listitem><para>enum { <link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baa87372d512b2e4be1dce36fe0153b8cc0">STBTT_MS_EID_SYMBOL</link> =0, 
<link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baaf3b7a17fc226e7540f025d241f36f17d">STBTT_MS_EID_UNICODE_BMP</link> =1, 
<link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baaaaab3da7b4e39433ac3db32fd9a83808">STBTT_MS_EID_SHIFTJIS</link> =2, 
<link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baa08224d2a200bd947c6513926290f4640">STBTT_MS_EID_UNICODE_FULL</link> =10
 }</para>
</listitem>
            <listitem><para>enum { 
<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea11789a74295482059768d7ed21ddc1ae">STBTT_MAC_EID_ROMAN</link> =0, 
<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaedbd64dd9fc105aabbbae72bae09be1f">STBTT_MAC_EID_ARABIC</link> =4, 
<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaa1cd5f4622dd634ffafe0487a2135524">STBTT_MAC_EID_JAPANESE</link> =1, 
<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea4f4920b5c91733bd8bb176d5425bd106">STBTT_MAC_EID_HEBREW</link> =5, 

<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea808bbaa74269579caa945ffdae31c62a">STBTT_MAC_EID_CHINESE_TRAD</link> =2, 
<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceac3c0a50ac37d4b5a68e0ea22824bee75">STBTT_MAC_EID_GREEK</link> =6, 
<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea0b8da1ad3177e0c9b1564c780fc11f0b">STBTT_MAC_EID_KOREAN</link> =3, 
<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaba7e217cc8f987ce69ab91180bd15a7f">STBTT_MAC_EID_RUSSIAN</link> =7
 }</para>
</listitem>
            <listitem><para>enum { 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a73e1e353a8727baf20ce85ee329b310b">STBTT_MS_LANG_ENGLISH</link> =0x0409, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a9d1b0af23f2f76cd1789e0cd638b935d">STBTT_MS_LANG_ITALIAN</link> =0x0410, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a6092851487f2d9708532ee955d4a75bd">STBTT_MS_LANG_CHINESE</link> =0x0804, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a0e44b54e59bcc095ff9fe786850cbf74">STBTT_MS_LANG_JAPANESE</link> =0x0411, 

<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a0b5f77089567369488e03917d99ddbe5">STBTT_MS_LANG_DUTCH</link> =0x0413, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90adc4f5bbc60ef97f1418902574fd9b418">STBTT_MS_LANG_KOREAN</link> =0x0412, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a3b89fa08e6376c8314c330bd1e9837b5">STBTT_MS_LANG_FRENCH</link> =0x040c, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a7930264450b0313e58f7590550520786">STBTT_MS_LANG_RUSSIAN</link> =0x0419, 

<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90aebb69f5af1155d26a280778c5ab72580">STBTT_MS_LANG_GERMAN</link> =0x0407, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a541da99c0255bb044006cc32c2ae50a2">STBTT_MS_LANG_SPANISH</link> =0x0409, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90aed7119e1e991009f49065071f4df39c6">STBTT_MS_LANG_HEBREW</link> =0x040d, 
<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a126d5bcdbb6e42a9799873b4ffde6c34">STBTT_MS_LANG_SWEDISH</link> =0x041D
 }</para>
</listitem>
            <listitem><para>enum { 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa845b632475daa7639bb3438785ca3fc9">STBTT_MAC_LANG_ENGLISH</link> =0, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa988de1366d401829c919b481c5c3c8e2">STBTT_MAC_LANG_JAPANESE</link> =11, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aae6f91a195abd217070ca9cee63849420">STBTT_MAC_LANG_ARABIC</link> =12, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa236502e69e2e07df089168e80dc1330d">STBTT_MAC_LANG_KOREAN</link> =23, 

<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf2757f8c4078dfb9fe9ad9dc32e801ee">STBTT_MAC_LANG_DUTCH</link> =4, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf99640bf65945428bcb19f3b9e6e287f">STBTT_MAC_LANG_RUSSIAN</link> =32, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa9a8ae7b8dca3b2902eb69ece32b817a3">STBTT_MAC_LANG_FRENCH</link> =1, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa5399db7b554ed772c935f1b5d9d67852">STBTT_MAC_LANG_SPANISH</link> =6, 

<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aae3360f5396032fdf22ebb35f3d30e849">STBTT_MAC_LANG_GERMAN</link> =2, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa0315abafecf696110de133e4d54ade8c">STBTT_MAC_LANG_SWEDISH</link> =5, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aad60d41526c1e9ee9ec50e8fd8950b9a4">STBTT_MAC_LANG_HEBREW</link> =10, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa552ed7fe17ee850f3883344b3424e26b">STBTT_MAC_LANG_CHINESE_SIMPLIFIED</link> =33, 

<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa50fb98b75fe8bc23d2bc963e45ea8d96">STBTT_MAC_LANG_ITALIAN</link> =3, 
<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf7d2b171e725e29ef4fbfbff7c3b5926">STBTT_MAC_LANG_CHINESE_TRAD</link> =19
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3">stbtt_BakeFontBitmap</link> (const unsigned char *<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>, int <link linkend="_glad_8h_1ac915cd848f42b26af51745f204a3b9af">offset</link>, float pixel_height, unsigned char *<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>, int pw, int ph, int first_char, int num_chars, <link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link> *<link linkend="_structchardata">chardata</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f">stbtt_GetBakedQuad</link> (const <link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link> *<link linkend="_structchardata">chardata</link>, int pw, int ph, int char_index, float *xpos, float *ypos, <link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link> *<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>, int opengl_fillrule)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42">stbtt_GetScaledFontVMetrics</link> (const unsigned char *fontdata, int <link linkend="_glad_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>, float <link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>, float *ascent, float *descent, float *lineGap)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c">stbtt_PackBegin</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, unsigned char *<link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>, int <link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int <link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int stride_in_bytes, int <link linkend="_sdf__test_8c_1a78dca952886227190969e885fbdd4fb4">padding</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *alloc_context)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140">stbtt_PackEnd</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f">stbtt_PackFontRange</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, const unsigned char *fontdata, int font_index, float font_size, int first_unicode_char_in_range, int num_chars_in_range, <link linkend="_structstbtt__packedchar">stbtt_packedchar</link> *chardata_for_range)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157">stbtt_PackFontRanges</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, const unsigned char *fontdata, int font_index, <link linkend="_structstbtt__pack__range">stbtt_pack_range</link> *ranges, int num_ranges)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e">stbtt_PackSetOversampling</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, unsigned int h_oversample, unsigned int v_oversample)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e">stbtt_PackSetSkipMissingCodepoints</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, int skip)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e">stbtt_GetPackedQuad</link> (const <link linkend="_structstbtt__packedchar">stbtt_packedchar</link> *<link linkend="_structchardata">chardata</link>, int pw, int ph, int char_index, float *xpos, float *ypos, <link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link> *<link linkend="_glext_8h_1a8fc1e7b9baaae687804c7eed46ca09c6">q</link>, int align_to_integer)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50">stbtt_PackFontRangesGatherRects</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, <link linkend="_structstbtt__pack__range">stbtt_pack_range</link> *ranges, int num_ranges, <link linkend="_structstbrp__rect">stbrp_rect</link> *rects)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259">stbtt_PackFontRangesPackRects</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, <link linkend="_structstbrp__rect">stbrp_rect</link> *rects, int num_rects)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631">stbtt_PackFontRangesRenderIntoRects</link> (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> *spc, const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, <link linkend="_structstbtt__pack__range">stbtt_pack_range</link> *ranges, int num_ranges, <link linkend="_structstbrp__rect">stbrp_rect</link> *rects)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672">stbtt_GetNumberOfFonts</link> (const unsigned char *<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89">stbtt_GetFontOffsetForIndex</link> (const unsigned char *<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>, int <link linkend="_glad_8h_1a57f14e05b1900f16a2da82ade47d0c6d">index</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link> (<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, const unsigned char *<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>, int <link linkend="_glad_8h_1ac915cd848f42b26af51745f204a3b9af">offset</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a">stbtt_FindGlyphIndex</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int unicode_codepoint)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> float <link linkend="_stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float <link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> float <link linkend="_stb__truetype_8h_1a76da72e13355eae763c567ffde0b4607">stbtt_ScaleForMappingEmToPixels</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float <link linkend="_glad_8h_1ad2818938351edcd54eba6bd5dce29ac3">pixels</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0">stbtt_GetFontVMetrics</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int *ascent, int *descent, int *lineGap)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a12154e222685026a3cf315a1b5720f24">stbtt_GetFontVMetricsOS2</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int *typoAscent, int *typoDescent, int *typoLineGap)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639">stbtt_GetFontBoundingBox</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int *<link linkend="_glext_8h_1a98ac434677655cc8438bb72de2719f39">x0</link>, int *<link linkend="_glext_8h_1ae7f97ed6c9c8e502fcbc44c7cb8a8312">y0</link>, int *<link linkend="_glext_8h_1a49825216c96caaeb09237b36651181c5">x1</link>, int *<link linkend="_glext_8h_1a3af6c78fcdfccea028a5878bc747ef39">y1</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7">stbtt_GetCodepointHMetrics</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int codepoint, int *advanceWidth, int *leftSideBearing)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a83703ede616bacefc0312ef2803774a1">stbtt_GetCodepointKernAdvance</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int ch1, int ch2)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d">stbtt_GetCodepointBox</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int codepoint, int *<link linkend="_glext_8h_1a98ac434677655cc8438bb72de2719f39">x0</link>, int *<link linkend="_glext_8h_1ae7f97ed6c9c8e502fcbc44c7cb8a8312">y0</link>, int *<link linkend="_glext_8h_1a49825216c96caaeb09237b36651181c5">x1</link>, int *<link linkend="_glext_8h_1a3af6c78fcdfccea028a5878bc747ef39">y1</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a">stbtt_GetGlyphHMetrics</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int glyph_index, int *advanceWidth, int *leftSideBearing)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1acf0b09547b1c2002ad0266802224552d">stbtt_GetGlyphKernAdvance</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int glyph1, int glyph2)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1accf148d2d285fd55178d9a401734ba92">stbtt_GetGlyphBox</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int glyph_index, int *<link linkend="_glext_8h_1a98ac434677655cc8438bb72de2719f39">x0</link>, int *<link linkend="_glext_8h_1ae7f97ed6c9c8e502fcbc44c7cb8a8312">y0</link>, int *<link linkend="_glext_8h_1a49825216c96caaeb09237b36651181c5">x1</link>, int *<link linkend="_glext_8h_1a3af6c78fcdfccea028a5878bc747ef39">y1</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e">stbtt_GetKerningTableLength</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3">stbtt_GetKerningTable</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, <link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link> *<link linkend="_structtable">table</link>, int table_length)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485">stbtt_IsGlyphEmpty</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int glyph_index)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795">stbtt_GetCodepointShape</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int unicode_codepoint, <link linkend="_structstbtt__vertex">stbtt_vertex</link> **vertices)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b">stbtt_GetGlyphShape</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int glyph_index, <link linkend="_structstbtt__vertex">stbtt_vertex</link> **vertices)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93">stbtt_FreeShape</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, <link linkend="_structstbtt__vertex">stbtt_vertex</link> *vertices)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char * <link linkend="_stb__truetype_8h_1a9617bfe6a5af15d4f4281527817c65b1">stbtt_FindSVGDoc</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int gl)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a">stbtt_GetCodepointSVG</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int unicode_codepoint, const char **svg)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17">stbtt_GetGlyphSVG</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, int gl, const char **svg)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a8254e6763560645597c44e00024b58fa">stbtt_FreeBitmap</link> (unsigned char *<link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *userdata)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char * <link linkend="_stb__truetype_8h_1ae0b8431bbb0b6aa53126fd7c71839157">stbtt_GetCodepointBitmap</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float scale_x, float scale_y, int codepoint, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int *xoff, int *yoff)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char * <link linkend="_stb__truetype_8h_1a8a7a6a78f74633fce32d70cb18f90c9c">stbtt_GetCodepointBitmapSubpixel</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int *xoff, int *yoff)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb">stbtt_MakeCodepointBitmap</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, unsigned char *<link linkend="_structoutput">output</link>, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int codepoint)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71">stbtt_MakeCodepointBitmapSubpixel</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, unsigned char *<link linkend="_structoutput">output</link>, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be">stbtt_MakeCodepointBitmapSubpixelPrefilter</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, unsigned char *<link linkend="_structoutput">output</link>, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float *sub_x, float *sub_y, int codepoint)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f">stbtt_GetCodepointBitmapBox</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>, int codepoint, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a18fae014dd2261e554248ca737d05578">stbtt_GetCodepointBitmapBoxSubpixel</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>, int codepoint, float scale_x, float scale_y, float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char * <link linkend="_stb__truetype_8h_1a6268874111f9c616cd53c63ea509a8d3">stbtt_GetGlyphBitmap</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float scale_x, float scale_y, int glyph, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int *xoff, int *yoff)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char * <link linkend="_stb__truetype_8h_1a94b39dcc8fcc6921ddbfee882daf70fd">stbtt_GetGlyphBitmapSubpixel</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float scale_x, float scale_y, float shift_x, float shift_y, int glyph, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int *xoff, int *yoff)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a915acab7676b20098f4d480376c5b589">stbtt_MakeGlyphBitmap</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, unsigned char *<link linkend="_structoutput">output</link>, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int glyph)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7">stbtt_MakeGlyphBitmapSubpixel</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, unsigned char *<link linkend="_structoutput">output</link>, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int glyph)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a006159e27c5c733ea11c688211e47c25">stbtt_MakeGlyphBitmapSubpixelPrefilter</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, unsigned char *<link linkend="_structoutput">output</link>, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float *sub_x, float *sub_y, int glyph)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53">stbtt_GetGlyphBitmapBox</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>, int glyph, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f">stbtt_GetGlyphBitmapBoxSubpixel</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>, int glyph, float scale_x, float scale_y, float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db">stbtt_Rasterize</link> (<link linkend="_structstbtt____bitmap">stbtt__bitmap</link> *<link linkend="_structresult">result</link>, float flatness_in_pixels, <link linkend="_structstbtt__vertex">stbtt_vertex</link> *vertices, int num_verts, float scale_x, float scale_y, float shift_x, float shift_y, int x_off, int y_off, int <link linkend="_glad_8h_1afcc4054e54dc14717dc9df064f152b6b">invert</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *userdata)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_stb__truetype_8h_1a1254dc807df81931ab070c6e80370489">stbtt_FreeSDF</link> (unsigned char *<link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> *userdata)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char * <link linkend="_stb__truetype_8h_1a3e41dff0cd53e65bbce3b37591ac6c88">stbtt_GetGlyphSDF</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float <link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>, int glyph, int <link linkend="_sdf__test_8c_1a78dca952886227190969e885fbdd4fb4">padding</link>, unsigned char <link linkend="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96">onedge_value</link>, float <link linkend="_sdf__test_8c_1abd1fe0ef88af2596228389ab423ec6ee">pixel_dist_scale</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int *xoff, int *yoff)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char * <link linkend="_stb__truetype_8h_1af5e7bd15f27b2add615b0141af2a9683">stbtt_GetCodepointSDF</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_structinfo">info</link>, float <link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>, int codepoint, int <link linkend="_sdf__test_8c_1a78dca952886227190969e885fbdd4fb4">padding</link>, unsigned char <link linkend="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96">onedge_value</link>, float <link linkend="_sdf__test_8c_1abd1fe0ef88af2596228389ab423ec6ee">pixel_dist_scale</link>, int *<link linkend="_glad_8h_1a77a72419a6bb6d8b56f8d9db93a120d0">width</link>, int *<link linkend="_glad_8h_1a2e94a4956fa3fc42600a71518b6e6284">height</link>, int *xoff, int *yoff)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f">stbtt_FindMatchingFont</link> (const unsigned char *fontdata, const char *<link linkend="_glad_8h_1ad977737dfc9a274a62741b9500c49a32">name</link>, int <link linkend="_glad_8h_1aa9459b47e7388437191d2d9a69c10d98">flags</link>)</para>
</listitem>
            <listitem><para><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int <link linkend="_stb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31">stbtt_CompareUTF8toUTF16_bigendian</link> (const char *<link linkend="_glext_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003">s1</link>, int len1, const char *s2, int len2)</para>
</listitem>
            <listitem><para>const <link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> char * <link linkend="_stb__truetype_8h_1a2e5f457c640d48681f98fdff91f2a12c">stbtt_GetFontNameString</link> (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> *<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>, int *<link linkend="_glad_8h_1a921fa83f7755f0139c84ba1831417a2e">length</link>, int platformID, int encodingID, int languageID, int nameID)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_stb__truetype_8h_1a793c93dc8e39787cf5966bec548730d5"/>    <section>
    <title>__STB_INCLUDE_STB_TRUETYPE_H__</title>
<indexterm><primary>__STB_INCLUDE_STB_TRUETYPE_H__</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>__STB_INCLUDE_STB_TRUETYPE_H__</secondary></indexterm>
<para><computeroutput>#define __STB_INCLUDE_STB_TRUETYPE_H__</computeroutput></para><para>
Definition at line 500 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827"/>    <section>
    <title>STBTT_DEF</title>
<indexterm><primary>STBTT_DEF</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_DEF</secondary></indexterm>
<para><computeroutput>#define STBTT_DEF   extern</computeroutput></para><para>
Definition at line 505 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1a3856cc4fbab4c126c2c438c6f567525d"/>    <section>
    <title>STBTT_MACSTYLE_BOLD</title>
<indexterm><primary>STBTT_MACSTYLE_BOLD</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MACSTYLE_BOLD</secondary></indexterm>
<para><computeroutput>#define STBTT_MACSTYLE_BOLD   1</computeroutput></para><para>
Definition at line 1027 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1ac914b70667c9abbe432dcc4c048e6542"/>    <section>
    <title>STBTT_MACSTYLE_DONTCARE</title>
<indexterm><primary>STBTT_MACSTYLE_DONTCARE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MACSTYLE_DONTCARE</secondary></indexterm>
<para><computeroutput>#define STBTT_MACSTYLE_DONTCARE   0</computeroutput></para><para>
Definition at line 1026 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1a95e8d57e767119c978652397df54afef"/>    <section>
    <title>STBTT_MACSTYLE_ITALIC</title>
<indexterm><primary>STBTT_MACSTYLE_ITALIC</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MACSTYLE_ITALIC</secondary></indexterm>
<para><computeroutput>#define STBTT_MACSTYLE_ITALIC   2</computeroutput></para><para>
Definition at line 1028 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1accb2ecf3e0d840362ebba3fe3da192da"/>    <section>
    <title>STBTT_MACSTYLE_NONE</title>
<indexterm><primary>STBTT_MACSTYLE_NONE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MACSTYLE_NONE</secondary></indexterm>
<para><computeroutput>#define STBTT_MACSTYLE_NONE   8</computeroutput></para><para>
Definition at line 1030 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1a9064e582d96dcbaf2f573896cccd5ef7"/>    <section>
    <title>STBTT_MACSTYLE_UNDERSCORE</title>
<indexterm><primary>STBTT_MACSTYLE_UNDERSCORE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MACSTYLE_UNDERSCORE</secondary></indexterm>
<para><computeroutput>#define STBTT_MACSTYLE_UNDERSCORE   4</computeroutput></para><para>
Definition at line 1029 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1a42c4058f71988e703efdf4703d5dfe31"/>    <section>
    <title>STBTT_POINT_SIZE</title>
<indexterm><primary>STBTT_POINT_SIZE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_POINT_SIZE</secondary></indexterm>
<para><computeroutput>#define STBTT_POINT_SIZE( <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)   (-(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>))</computeroutput></para><para>
Definition at line 602 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1ab8fd8e5e0b82b0f7da54532035e47b22"/>    <section>
    <title>stbtt_vertex_type</title>
<indexterm><primary>stbtt_vertex_type</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_vertex_type</secondary></indexterm>
<para><computeroutput>#define stbtt_vertex_type   short</computeroutput></para><para>
Definition at line 834 of file stb_truetype.h.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_stb__truetype_8h_1a7c4a99b31ea2207a0b2bbcbdab8f3840"/>    <section>
    <title>stbrp_rect</title>
<indexterm><primary>stbrp_rect</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbrp_rect</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structstbrp__rect">stbrp_rect</link> <link linkend="_structstbrp__rect">stbrp_rect</link></computeroutput></para><para>
Definition at line 585 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1a82ca6622f6983cc08eca850280126daf"/>    <section>
    <title>stbtt_fontinfo</title>
<indexterm><primary>stbtt_fontinfo</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_fontinfo</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link></computeroutput></para><para>
Definition at line 583 of file stb_truetype.h.</para>
    </section><anchor xml:id="_stb__truetype_8h_1a988d6ec9ddb583b248cc96f17449dd6b"/>    <section>
    <title>stbtt_kerningentry</title>
<indexterm><primary>stbtt_kerningentry</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_kerningentry</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link> <link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link></computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a37d613643adacbed24c22718faf6afc7"/>    <section>
    <title>stbtt_pack_context</title>
<indexterm><primary>stbtt_pack_context</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_pack_context</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structstbtt__pack__context">stbtt_pack_context</link> <link linkend="_structstbtt__pack__context">stbtt_pack_context</link></computeroutput></para><para>
Definition at line 582 of file stb_truetype.h.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBTT_vmove</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_vmove</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab335ba97e1798b621313de85a9a6e69d"/>STBTT_vmove</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_vline</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_vline</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ade4bb6465c32e56588f35e5120769e2e"/>STBTT_vline</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_vcurve</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_vcurve</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab9ac3e527ce18873abeab556f6768ce4"/>STBTT_vcurve</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_vcubic</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_vcubic</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab6cd2670234c731eafba404d3a2470fd"/>STBTT_vcubic</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 824 of file stb_truetype.h.</para>
<programlisting>824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
825 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab335ba97e1798b621313de85a9a6e69d">STBTT_vmove</link>=1,
826 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ade4bb6465c32e56588f35e5120769e2e">STBTT_vline</link>,
827 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab9ac3e527ce18873abeab556f6768ce4">STBTT_vcurve</link>,
828 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a9e93d8eae633734dfeb29e24a1f3a7c0ab6cd2670234c731eafba404d3a2470fd">STBTT_vcubic</link>
829 &#32;&#32;&#32;};
</programlisting>    </section><anchor xml:id="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBTT_PLATFORM_ID_UNICODE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_PLATFORM_ID_UNICODE</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6a7df9cd0e95e0b375d03348661b399b69"/>STBTT_PLATFORM_ID_UNICODE</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_PLATFORM_ID_MAC</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_PLATFORM_ID_MAC</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6adc1a3ed4f2abe63dd4e91d789136db3f"/>STBTT_PLATFORM_ID_MAC</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_PLATFORM_ID_ISO</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_PLATFORM_ID_ISO</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6acd63703eafd91118387dfb70b384132d"/>STBTT_PLATFORM_ID_ISO</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_PLATFORM_ID_MICROSOFT</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_PLATFORM_ID_MICROSOFT</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6a86f00e4c49cfec574b34090faa47f878"/>STBTT_PLATFORM_ID_MICROSOFT</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 1044 of file stb_truetype.h.</para>
<programlisting>1044 &#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;platformID</emphasis>
1045 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6a7df9cd0e95e0b375d03348661b399b69">STBTT_PLATFORM_ID_UNICODE</link>&#32;&#32;&#32;=0,
1046 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6adc1a3ed4f2abe63dd4e91d789136db3f">STBTT_PLATFORM_ID_MAC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=1,
1047 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6acd63703eafd91118387dfb70b384132d">STBTT_PLATFORM_ID_ISO</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=2,
1048 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aeb8e1c282570d629a6b603a94a4650d6a86f00e4c49cfec574b34090faa47f878">STBTT_PLATFORM_ID_MICROSOFT</link>&#32;=3
1049 };
</programlisting>    </section><anchor xml:id="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbb"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBTT_UNICODE_EID_UNICODE_1_0</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_UNICODE_EID_UNICODE_1_0</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbbaeec1111b4adcd61a20a461138726fc46"/>STBTT_UNICODE_EID_UNICODE_1_0</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_UNICODE_EID_UNICODE_1_1</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_UNICODE_EID_UNICODE_1_1</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbbaa13de23938974ed5ed2039ad0c623901"/>STBTT_UNICODE_EID_UNICODE_1_1</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_UNICODE_EID_ISO_10646</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_UNICODE_EID_ISO_10646</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba2803b7d7150216b6e67cdd2ef9e734b0"/>STBTT_UNICODE_EID_ISO_10646</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_UNICODE_EID_UNICODE_2_0_BMP</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_UNICODE_EID_UNICODE_2_0_BMP</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba4ead513507e004e256fb772d7ee91f60"/>STBTT_UNICODE_EID_UNICODE_2_0_BMP</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_UNICODE_EID_UNICODE_2_0_FULL</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_UNICODE_EID_UNICODE_2_0_FULL</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba95f85f02ffe39539e6b4032a3db58eed"/>STBTT_UNICODE_EID_UNICODE_2_0_FULL</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 1051 of file stb_truetype.h.</para>
<programlisting>1051 &#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;encodingID&#32;for&#32;STBTT_PLATFORM_ID_UNICODE</emphasis>
1052 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbbaeec1111b4adcd61a20a461138726fc46">STBTT_UNICODE_EID_UNICODE_1_0</link>&#32;&#32;&#32;&#32;=0,
1053 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbbaa13de23938974ed5ed2039ad0c623901">STBTT_UNICODE_EID_UNICODE_1_1</link>&#32;&#32;&#32;&#32;=1,
1054 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba2803b7d7150216b6e67cdd2ef9e734b0">STBTT_UNICODE_EID_ISO_10646</link>&#32;&#32;&#32;&#32;&#32;&#32;=2,
1055 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba4ead513507e004e256fb772d7ee91f60">STBTT_UNICODE_EID_UNICODE_2_0_BMP</link>=3,
1056 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a109bfaad92bd6d348dab484aec11edbba95f85f02ffe39539e6b4032a3db58eed">STBTT_UNICODE_EID_UNICODE_2_0_FULL</link>=4
1057 };
</programlisting>    </section><anchor xml:id="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6ba"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBTT_MS_EID_SYMBOL</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_EID_SYMBOL</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baa87372d512b2e4be1dce36fe0153b8cc0"/>STBTT_MS_EID_SYMBOL</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_EID_UNICODE_BMP</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_EID_UNICODE_BMP</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baaf3b7a17fc226e7540f025d241f36f17d"/>STBTT_MS_EID_UNICODE_BMP</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_EID_SHIFTJIS</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_EID_SHIFTJIS</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baaaaab3da7b4e39433ac3db32fd9a83808"/>STBTT_MS_EID_SHIFTJIS</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_EID_UNICODE_FULL</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_EID_UNICODE_FULL</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baa08224d2a200bd947c6513926290f4640"/>STBTT_MS_EID_UNICODE_FULL</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 1059 of file stb_truetype.h.</para>
<programlisting>1059 &#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;encodingID&#32;for&#32;STBTT_PLATFORM_ID_MICROSOFT</emphasis>
1060 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baa87372d512b2e4be1dce36fe0153b8cc0">STBTT_MS_EID_SYMBOL</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=0,
1061 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baaf3b7a17fc226e7540f025d241f36f17d">STBTT_MS_EID_UNICODE_BMP</link>&#32;&#32;&#32;=1,
1062 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baaaaab3da7b4e39433ac3db32fd9a83808">STBTT_MS_EID_SHIFTJIS</link>&#32;&#32;&#32;&#32;&#32;&#32;=2,
1063 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a550cb4231d535863c55643bbd2d3c6baa08224d2a200bd947c6513926290f4640">STBTT_MS_EID_UNICODE_FULL</link>&#32;&#32;=10
1064 };
</programlisting>    </section><anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ce"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBTT_MAC_EID_ROMAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_ROMAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea11789a74295482059768d7ed21ddc1ae"/>STBTT_MAC_EID_ROMAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_EID_ARABIC</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_ARABIC</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaedbd64dd9fc105aabbbae72bae09be1f"/>STBTT_MAC_EID_ARABIC</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_EID_JAPANESE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_JAPANESE</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaa1cd5f4622dd634ffafe0487a2135524"/>STBTT_MAC_EID_JAPANESE</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_EID_HEBREW</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_HEBREW</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea4f4920b5c91733bd8bb176d5425bd106"/>STBTT_MAC_EID_HEBREW</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_EID_CHINESE_TRAD</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_CHINESE_TRAD</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea808bbaa74269579caa945ffdae31c62a"/>STBTT_MAC_EID_CHINESE_TRAD</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_EID_GREEK</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_GREEK</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceac3c0a50ac37d4b5a68e0ea22824bee75"/>STBTT_MAC_EID_GREEK</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_EID_KOREAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_KOREAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea0b8da1ad3177e0c9b1564c780fc11f0b"/>STBTT_MAC_EID_KOREAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_EID_RUSSIAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_EID_RUSSIAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaba7e217cc8f987ce69ab91180bd15a7f"/>STBTT_MAC_EID_RUSSIAN</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 1066 of file stb_truetype.h.</para>
<programlisting>1066 &#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;encodingID&#32;for&#32;STBTT_PLATFORM_ID_MAC;&#32;same&#32;as&#32;Script&#32;Manager&#32;codes</emphasis>
1067 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea11789a74295482059768d7ed21ddc1ae">STBTT_MAC_EID_ROMAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=0,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaedbd64dd9fc105aabbbae72bae09be1f">STBTT_MAC_EID_ARABIC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=4,
1068 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaa1cd5f4622dd634ffafe0487a2135524">STBTT_MAC_EID_JAPANESE</link>&#32;&#32;&#32;&#32;&#32;=1,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea4f4920b5c91733bd8bb176d5425bd106">STBTT_MAC_EID_HEBREW</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=5,
1069 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea808bbaa74269579caa945ffdae31c62a">STBTT_MAC_EID_CHINESE_TRAD</link>&#32;=2,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceac3c0a50ac37d4b5a68e0ea22824bee75">STBTT_MAC_EID_GREEK</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=6,
1070 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8cea0b8da1ad3177e0c9b1564c780fc11f0b">STBTT_MAC_EID_KOREAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=3,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a83e8bc15645f9d99ab91a152bb3dc8ceaba7e217cc8f987ce69ab91180bd15a7f">STBTT_MAC_EID_RUSSIAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=7
1071 };
</programlisting>    </section><anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBTT_MS_LANG_ENGLISH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_ENGLISH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a73e1e353a8727baf20ce85ee329b310b"/>STBTT_MS_LANG_ENGLISH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_ITALIAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_ITALIAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a9d1b0af23f2f76cd1789e0cd638b935d"/>STBTT_MS_LANG_ITALIAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_CHINESE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_CHINESE</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a6092851487f2d9708532ee955d4a75bd"/>STBTT_MS_LANG_CHINESE</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_JAPANESE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_JAPANESE</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a0e44b54e59bcc095ff9fe786850cbf74"/>STBTT_MS_LANG_JAPANESE</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_DUTCH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_DUTCH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a0b5f77089567369488e03917d99ddbe5"/>STBTT_MS_LANG_DUTCH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_KOREAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_KOREAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90adc4f5bbc60ef97f1418902574fd9b418"/>STBTT_MS_LANG_KOREAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_FRENCH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_FRENCH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a3b89fa08e6376c8314c330bd1e9837b5"/>STBTT_MS_LANG_FRENCH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_RUSSIAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_RUSSIAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a7930264450b0313e58f7590550520786"/>STBTT_MS_LANG_RUSSIAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_GERMAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_GERMAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90aebb69f5af1155d26a280778c5ab72580"/>STBTT_MS_LANG_GERMAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_SPANISH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_SPANISH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a541da99c0255bb044006cc32c2ae50a2"/>STBTT_MS_LANG_SPANISH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_HEBREW</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_HEBREW</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90aed7119e1e991009f49065071f4df39c6"/>STBTT_MS_LANG_HEBREW</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MS_LANG_SWEDISH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MS_LANG_SWEDISH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a126d5bcdbb6e42a9799873b4ffde6c34"/>STBTT_MS_LANG_SWEDISH</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 1073 of file stb_truetype.h.</para>
<programlisting>1073 &#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;languageID&#32;for&#32;STBTT_PLATFORM_ID_MICROSOFT;&#32;same&#32;as&#32;LCID...</emphasis>
1074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;problematic&#32;because&#32;there&#32;are&#32;e.g.&#32;16&#32;english&#32;LCIDs&#32;and&#32;16&#32;arabic&#32;LCIDs</emphasis>
1075 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a73e1e353a8727baf20ce85ee329b310b">STBTT_MS_LANG_ENGLISH</link>&#32;&#32;&#32;&#32;&#32;=0x0409,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a9d1b0af23f2f76cd1789e0cd638b935d">STBTT_MS_LANG_ITALIAN</link>&#32;&#32;&#32;&#32;&#32;=0x0410,
1076 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a6092851487f2d9708532ee955d4a75bd">STBTT_MS_LANG_CHINESE</link>&#32;&#32;&#32;&#32;&#32;=0x0804,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a0e44b54e59bcc095ff9fe786850cbf74">STBTT_MS_LANG_JAPANESE</link>&#32;&#32;&#32;&#32;=0x0411,
1077 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a0b5f77089567369488e03917d99ddbe5">STBTT_MS_LANG_DUTCH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=0x0413,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90adc4f5bbc60ef97f1418902574fd9b418">STBTT_MS_LANG_KOREAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x0412,
1078 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a3b89fa08e6376c8314c330bd1e9837b5">STBTT_MS_LANG_FRENCH</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x040c,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a7930264450b0313e58f7590550520786">STBTT_MS_LANG_RUSSIAN</link>&#32;&#32;&#32;&#32;&#32;=0x0419,
1079 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90aebb69f5af1155d26a280778c5ab72580">STBTT_MS_LANG_GERMAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x0407,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a541da99c0255bb044006cc32c2ae50a2">STBTT_MS_LANG_SPANISH</link>&#32;&#32;&#32;&#32;&#32;=0x0409,
1080 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90aed7119e1e991009f49065071f4df39c6">STBTT_MS_LANG_HEBREW</link>&#32;&#32;&#32;&#32;&#32;&#32;=0x040d,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a68c01102755fc7d1c810bb0b0635fa90a126d5bcdbb6e42a9799873b4ffde6c34">STBTT_MS_LANG_SWEDISH</link>&#32;&#32;&#32;&#32;&#32;=0x041D
1081 };
</programlisting>    </section><anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47a"/>    <section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum</computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>STBTT_MAC_LANG_ENGLISH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_ENGLISH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa845b632475daa7639bb3438785ca3fc9"/>STBTT_MAC_LANG_ENGLISH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_JAPANESE</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_JAPANESE</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa988de1366d401829c919b481c5c3c8e2"/>STBTT_MAC_LANG_JAPANESE</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_ARABIC</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_ARABIC</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aae6f91a195abd217070ca9cee63849420"/>STBTT_MAC_LANG_ARABIC</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_KOREAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_KOREAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa236502e69e2e07df089168e80dc1330d"/>STBTT_MAC_LANG_KOREAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_DUTCH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_DUTCH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf2757f8c4078dfb9fe9ad9dc32e801ee"/>STBTT_MAC_LANG_DUTCH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_RUSSIAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_RUSSIAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf99640bf65945428bcb19f3b9e6e287f"/>STBTT_MAC_LANG_RUSSIAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_FRENCH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_FRENCH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa9a8ae7b8dca3b2902eb69ece32b817a3"/>STBTT_MAC_LANG_FRENCH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_SPANISH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_SPANISH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa5399db7b554ed772c935f1b5d9d67852"/>STBTT_MAC_LANG_SPANISH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_GERMAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_GERMAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aae3360f5396032fdf22ebb35f3d30e849"/>STBTT_MAC_LANG_GERMAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_SWEDISH</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_SWEDISH</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa0315abafecf696110de133e4d54ade8c"/>STBTT_MAC_LANG_SWEDISH</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_HEBREW</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_HEBREW</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aad60d41526c1e9ee9ec50e8fd8950b9a4"/>STBTT_MAC_LANG_HEBREW</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_CHINESE_SIMPLIFIED</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_CHINESE_SIMPLIFIED</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa552ed7fe17ee850f3883344b3424e26b"/>STBTT_MAC_LANG_CHINESE_SIMPLIFIED</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_ITALIAN</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_ITALIAN</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa50fb98b75fe8bc23d2bc963e45ea8d96"/>STBTT_MAC_LANG_ITALIAN</entry><entry></entry></row><row><entry><indexterm><primary>STBTT_MAC_LANG_CHINESE_TRAD</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>STBTT_MAC_LANG_CHINESE_TRAD</secondary></indexterm>
<anchor xml:id="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf7d2b171e725e29ef4fbfbff7c3b5926"/>STBTT_MAC_LANG_CHINESE_TRAD</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 1083 of file stb_truetype.h.</para>
<programlisting>1083 &#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//&#32;languageID&#32;for&#32;STBTT_PLATFORM_ID_MAC</emphasis>
1084 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa845b632475daa7639bb3438785ca3fc9">STBTT_MAC_LANG_ENGLISH</link>&#32;&#32;&#32;&#32;&#32;&#32;=0&#32;,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa988de1366d401829c919b481c5c3c8e2">STBTT_MAC_LANG_JAPANESE</link>&#32;&#32;&#32;&#32;&#32;=11,
1085 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aae6f91a195abd217070ca9cee63849420">STBTT_MAC_LANG_ARABIC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=12,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa236502e69e2e07df089168e80dc1330d">STBTT_MAC_LANG_KOREAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=23,
1086 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf2757f8c4078dfb9fe9ad9dc32e801ee">STBTT_MAC_LANG_DUTCH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=4&#32;,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf99640bf65945428bcb19f3b9e6e287f">STBTT_MAC_LANG_RUSSIAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=32,
1087 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa9a8ae7b8dca3b2902eb69ece32b817a3">STBTT_MAC_LANG_FRENCH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=1&#32;,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa5399db7b554ed772c935f1b5d9d67852">STBTT_MAC_LANG_SPANISH</link>&#32;&#32;&#32;&#32;&#32;&#32;=6&#32;,
1088 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aae3360f5396032fdf22ebb35f3d30e849">STBTT_MAC_LANG_GERMAN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=2&#32;,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa0315abafecf696110de133e4d54ade8c">STBTT_MAC_LANG_SWEDISH</link>&#32;&#32;&#32;&#32;&#32;&#32;=5&#32;,
1089 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aad60d41526c1e9ee9ec50e8fd8950b9a4">STBTT_MAC_LANG_HEBREW</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=10,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa552ed7fe17ee850f3883344b3424e26b">STBTT_MAC_LANG_CHINESE_SIMPLIFIED</link>&#32;=33,
1090 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aa50fb98b75fe8bc23d2bc963e45ea8d96">STBTT_MAC_LANG_ITALIAN</link>&#32;&#32;&#32;&#32;&#32;&#32;=3&#32;,&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1aa618c4d8c29ef4efe6f10c741fb1f47aaf7d2b171e725e29ef4fbfbff7c3b5926">STBTT_MAC_LANG_CHINESE_TRAD</link>&#32;=19
1091 };
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_stb__truetype_8h_1a9f906556cc09c60d136cb9af18305ef3"/>    <section>
    <title>stbtt_BakeFontBitmap()</title>
<indexterm><primary>stbtt_BakeFontBitmap</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_BakeFontBitmap</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_BakeFontBitmap (const unsigned char * data, int offset, float pixel_height, unsigned char * pixels, int pw, int ph, int first_char, int num_chars, <link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link> * chardata)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1aafc4974ee424f18246f47b0926a1cd31"/>    <section>
    <title>stbtt_CompareUTF8toUTF16_bigendian()</title>
<indexterm><primary>stbtt_CompareUTF8toUTF16_bigendian</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_CompareUTF8toUTF16_bigendian</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_CompareUTF8toUTF16_bigendian (const char * s1, int len1, const char * s2, int len2)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a213d5628c6b2e5c107b99378eefc6e3a"/>    <section>
    <title>stbtt_FindGlyphIndex()</title>
<indexterm><primary>stbtt_FindGlyphIndex</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_FindGlyphIndex</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_FindGlyphIndex (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int unicode_codepoint)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a76ec14e5c7e57981dc5a409d89b5e92f"/>    <section>
    <title>stbtt_FindMatchingFont()</title>
<indexterm><primary>stbtt_FindMatchingFont</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_FindMatchingFont</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_FindMatchingFont (const unsigned char * fontdata, const char * name, int flags)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a9617bfe6a5af15d4f4281527817c65b1"/>    <section>
    <title>stbtt_FindSVGDoc()</title>
<indexterm><primary>stbtt_FindSVGDoc</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_FindSVGDoc</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char* stbtt_FindSVGDoc (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int gl)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a8254e6763560645597c44e00024b58fa"/>    <section>
    <title>stbtt_FreeBitmap()</title>
<indexterm><primary>stbtt_FreeBitmap</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_FreeBitmap</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_FreeBitmap (unsigned char * bitmap, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * userdata)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a1254dc807df81931ab070c6e80370489"/>    <section>
    <title>stbtt_FreeSDF()</title>
<indexterm><primary>stbtt_FreeSDF</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_FreeSDF</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_FreeSDF (unsigned char * bitmap, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * userdata)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a8aa85852fbc25667bf0438e29e128c93"/>    <section>
    <title>stbtt_FreeShape()</title>
<indexterm><primary>stbtt_FreeShape</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_FreeShape</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_FreeShape (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, <link linkend="_structstbtt__vertex">stbtt_vertex</link> * vertices)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ab7f7e3a2bc7ae72720057b07a13c400f"/>    <section>
    <title>stbtt_GetBakedQuad()</title>
<indexterm><primary>stbtt_GetBakedQuad</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetBakedQuad</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetBakedQuad (const <link linkend="_structstbtt__bakedchar">stbtt_bakedchar</link> * chardata, int pw, int ph, int char_index, float * xpos, float * ypos, <link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link> * q, int opengl_fillrule)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ae0b8431bbb0b6aa53126fd7c71839157"/>    <section>
    <title>stbtt_GetCodepointBitmap()</title>
<indexterm><primary>stbtt_GetCodepointBitmap</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointBitmap</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char* stbtt_GetCodepointBitmap (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float scale_x, float scale_y, int codepoint, int * width, int * height, int * xoff, int * yoff)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a2e607ba774cee7f2425917105dabd16f"/>    <section>
    <title>stbtt_GetCodepointBitmapBox()</title>
<indexterm><primary>stbtt_GetCodepointBitmapBox</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointBitmapBox</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetCodepointBitmapBox (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * font, int codepoint, float scale_x, float scale_y, int * ix0, int * iy0, int * ix1, int * iy1)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a18fae014dd2261e554248ca737d05578"/>    <section>
    <title>stbtt_GetCodepointBitmapBoxSubpixel()</title>
<indexterm><primary>stbtt_GetCodepointBitmapBoxSubpixel</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointBitmapBoxSubpixel</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetCodepointBitmapBoxSubpixel (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * font, int codepoint, float scale_x, float scale_y, float shift_x, float shift_y, int * ix0, int * iy0, int * ix1, int * iy1)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a8a7a6a78f74633fce32d70cb18f90c9c"/>    <section>
    <title>stbtt_GetCodepointBitmapSubpixel()</title>
<indexterm><primary>stbtt_GetCodepointBitmapSubpixel</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointBitmapSubpixel</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char* stbtt_GetCodepointBitmapSubpixel (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint, int * width, int * height, int * xoff, int * yoff)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1abbfa26d9cbfeae7e224f2f62ef6c096d"/>    <section>
    <title>stbtt_GetCodepointBox()</title>
<indexterm><primary>stbtt_GetCodepointBox</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointBox</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetCodepointBox (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int codepoint, int * x0, int * y0, int * x1, int * y1)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7"/>    <section>
    <title>stbtt_GetCodepointHMetrics()</title>
<indexterm><primary>stbtt_GetCodepointHMetrics</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointHMetrics</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetCodepointHMetrics (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int codepoint, int * advanceWidth, int * leftSideBearing)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a83703ede616bacefc0312ef2803774a1"/>    <section>
    <title>stbtt_GetCodepointKernAdvance()</title>
<indexterm><primary>stbtt_GetCodepointKernAdvance</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointKernAdvance</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetCodepointKernAdvance (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int ch1, int ch2)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1af5e7bd15f27b2add615b0141af2a9683"/>    <section>
    <title>stbtt_GetCodepointSDF()</title>
<indexterm><primary>stbtt_GetCodepointSDF</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointSDF</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char* stbtt_GetCodepointSDF (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float scale, int codepoint, int padding, unsigned char onedge_value, float pixel_dist_scale, int * width, int * height, int * xoff, int * yoff)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a073c07bd3c08775d2528a0a602be1795"/>    <section>
    <title>stbtt_GetCodepointShape()</title>
<indexterm><primary>stbtt_GetCodepointShape</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointShape</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetCodepointShape (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int unicode_codepoint, <link linkend="_structstbtt__vertex">stbtt_vertex</link> ** vertices)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a5d290c4aa81bf0f7b933ea290d123a3a"/>    <section>
    <title>stbtt_GetCodepointSVG()</title>
<indexterm><primary>stbtt_GetCodepointSVG</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetCodepointSVG</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetCodepointSVG (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int unicode_codepoint, const char ** svg)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a4dd4ca3bff4e304b2c8d952f87fbb639"/>    <section>
    <title>stbtt_GetFontBoundingBox()</title>
<indexterm><primary>stbtt_GetFontBoundingBox</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetFontBoundingBox</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetFontBoundingBox (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int * x0, int * y0, int * x1, int * y1)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a2e5f457c640d48681f98fdff91f2a12c"/>    <section>
    <title>stbtt_GetFontNameString()</title>
<indexterm><primary>stbtt_GetFontNameString</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetFontNameString</secondary></indexterm>
<para><computeroutput>const <link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> char* stbtt_GetFontNameString (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * font, int * length, int platformID, int encodingID, int languageID, int nameID)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a5ba17159df62ca39649e6f2231ac6e89"/>    <section>
    <title>stbtt_GetFontOffsetForIndex()</title>
<indexterm><primary>stbtt_GetFontOffsetForIndex</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetFontOffsetForIndex</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetFontOffsetForIndex (const unsigned char * data, int index)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a2784e0e55678a5980e950b1c9fbc75f0"/>    <section>
    <title>stbtt_GetFontVMetrics()</title>
<indexterm><primary>stbtt_GetFontVMetrics</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetFontVMetrics</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetFontVMetrics (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int * ascent, int * descent, int * lineGap)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a12154e222685026a3cf315a1b5720f24"/>    <section>
    <title>stbtt_GetFontVMetricsOS2()</title>
<indexterm><primary>stbtt_GetFontVMetricsOS2</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetFontVMetricsOS2</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetFontVMetricsOS2 (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int * typoAscent, int * typoDescent, int * typoLineGap)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a6268874111f9c616cd53c63ea509a8d3"/>    <section>
    <title>stbtt_GetGlyphBitmap()</title>
<indexterm><primary>stbtt_GetGlyphBitmap</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphBitmap</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char* stbtt_GetGlyphBitmap (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float scale_x, float scale_y, int glyph, int * width, int * height, int * xoff, int * yoff)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a7bba8bb63f534246ccd3ed5b9390cc53"/>    <section>
    <title>stbtt_GetGlyphBitmapBox()</title>
<indexterm><primary>stbtt_GetGlyphBitmapBox</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphBitmapBox</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetGlyphBitmapBox (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * font, int glyph, float scale_x, float scale_y, int * ix0, int * iy0, int * ix1, int * iy1)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a597ef6b92ab0b5800c74478548b4782f"/>    <section>
    <title>stbtt_GetGlyphBitmapBoxSubpixel()</title>
<indexterm><primary>stbtt_GetGlyphBitmapBoxSubpixel</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphBitmapBoxSubpixel</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetGlyphBitmapBoxSubpixel (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * font, int glyph, float scale_x, float scale_y, float shift_x, float shift_y, int * ix0, int * iy0, int * ix1, int * iy1)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a94b39dcc8fcc6921ddbfee882daf70fd"/>    <section>
    <title>stbtt_GetGlyphBitmapSubpixel()</title>
<indexterm><primary>stbtt_GetGlyphBitmapSubpixel</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphBitmapSubpixel</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char* stbtt_GetGlyphBitmapSubpixel (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float scale_x, float scale_y, float shift_x, float shift_y, int glyph, int * width, int * height, int * xoff, int * yoff)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1accf148d2d285fd55178d9a401734ba92"/>    <section>
    <title>stbtt_GetGlyphBox()</title>
<indexterm><primary>stbtt_GetGlyphBox</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphBox</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetGlyphBox (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int glyph_index, int * x0, int * y0, int * x1, int * y1)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ab593f3066f2a8a7e33e7b7011d1b1f9a"/>    <section>
    <title>stbtt_GetGlyphHMetrics()</title>
<indexterm><primary>stbtt_GetGlyphHMetrics</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphHMetrics</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetGlyphHMetrics (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int glyph_index, int * advanceWidth, int * leftSideBearing)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1acf0b09547b1c2002ad0266802224552d"/>    <section>
    <title>stbtt_GetGlyphKernAdvance()</title>
<indexterm><primary>stbtt_GetGlyphKernAdvance</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphKernAdvance</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetGlyphKernAdvance (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int glyph1, int glyph2)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a3e41dff0cd53e65bbce3b37591ac6c88"/>    <section>
    <title>stbtt_GetGlyphSDF()</title>
<indexterm><primary>stbtt_GetGlyphSDF</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphSDF</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> unsigned char* stbtt_GetGlyphSDF (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float scale, int glyph, int padding, unsigned char onedge_value, float pixel_dist_scale, int * width, int * height, int * xoff, int * yoff)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a695c82840a7d4eaa1d5be00131c9718b"/>    <section>
    <title>stbtt_GetGlyphShape()</title>
<indexterm><primary>stbtt_GetGlyphShape</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphShape</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetGlyphShape (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int glyph_index, <link linkend="_structstbtt__vertex">stbtt_vertex</link> ** vertices)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a6233237aecda00cf9ccd2c2d50dd6b17"/>    <section>
    <title>stbtt_GetGlyphSVG()</title>
<indexterm><primary>stbtt_GetGlyphSVG</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetGlyphSVG</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetGlyphSVG (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int gl, const char ** svg)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a190bffe156cdb32ac891e835248c90e3"/>    <section>
    <title>stbtt_GetKerningTable()</title>
<indexterm><primary>stbtt_GetKerningTable</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetKerningTable</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetKerningTable (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, <link linkend="_structstbtt__kerningentry">stbtt_kerningentry</link> * table, int table_length)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ab638ddcf9ae1b15ea18b2de58443136e"/>    <section>
    <title>stbtt_GetKerningTableLength()</title>
<indexterm><primary>stbtt_GetKerningTableLength</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetKerningTableLength</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetKerningTableLength (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1af7ee37667bd84fee4c1fcf640fe8a672"/>    <section>
    <title>stbtt_GetNumberOfFonts()</title>
<indexterm><primary>stbtt_GetNumberOfFonts</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetNumberOfFonts</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_GetNumberOfFonts (const unsigned char * data)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1abbca8f4e5de8209200a7be6c1c57661e"/>    <section>
    <title>stbtt_GetPackedQuad()</title>
<indexterm><primary>stbtt_GetPackedQuad</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetPackedQuad</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetPackedQuad (const <link linkend="_structstbtt__packedchar">stbtt_packedchar</link> * chardata, int pw, int ph, int char_index, float * xpos, float * ypos, <link linkend="_structstbtt__aligned__quad">stbtt_aligned_quad</link> * q, int align_to_integer)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ae402c69747eee588a5fc18d8ea506b42"/>    <section>
    <title>stbtt_GetScaledFontVMetrics()</title>
<indexterm><primary>stbtt_GetScaledFontVMetrics</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_GetScaledFontVMetrics</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_GetScaledFontVMetrics (const unsigned char * fontdata, int index, float size, float * ascent, float * descent, float * lineGap)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5"/>    <section>
    <title>stbtt_InitFont()</title>
<indexterm><primary>stbtt_InitFont</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_InitFont</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_InitFont (<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, const unsigned char * data, int offset)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a3378c5794e9ab2a16492ab7e3c3c9485"/>    <section>
    <title>stbtt_IsGlyphEmpty()</title>
<indexterm><primary>stbtt_IsGlyphEmpty</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_IsGlyphEmpty</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_IsGlyphEmpty (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, int glyph_index)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a4416bb8395a4d2e717f613bb4903c7eb"/>    <section>
    <title>stbtt_MakeCodepointBitmap()</title>
<indexterm><primary>stbtt_MakeCodepointBitmap</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_MakeCodepointBitmap</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_MakeCodepointBitmap (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int codepoint)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a51bd3fc45817d8606c749e585241fa71"/>    <section>
    <title>stbtt_MakeCodepointBitmapSubpixel()</title>
<indexterm><primary>stbtt_MakeCodepointBitmapSubpixel</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_MakeCodepointBitmapSubpixel</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_MakeCodepointBitmapSubpixel (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a4b3487c748701f5b89b7be56625df1be"/>    <section>
    <title>stbtt_MakeCodepointBitmapSubpixelPrefilter()</title>
<indexterm><primary>stbtt_MakeCodepointBitmapSubpixelPrefilter</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_MakeCodepointBitmapSubpixelPrefilter</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_MakeCodepointBitmapSubpixelPrefilter (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float * sub_x, float * sub_y, int codepoint)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a915acab7676b20098f4d480376c5b589"/>    <section>
    <title>stbtt_MakeGlyphBitmap()</title>
<indexterm><primary>stbtt_MakeGlyphBitmap</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_MakeGlyphBitmap</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_MakeGlyphBitmap (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int glyph)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1aa82d35f758bc70bd675c48da381e7ea7"/>    <section>
    <title>stbtt_MakeGlyphBitmapSubpixel()</title>
<indexterm><primary>stbtt_MakeGlyphBitmapSubpixel</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_MakeGlyphBitmapSubpixel</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_MakeGlyphBitmapSubpixel (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int glyph)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a006159e27c5c733ea11c688211e47c25"/>    <section>
    <title>stbtt_MakeGlyphBitmapSubpixelPrefilter()</title>
<indexterm><primary>stbtt_MakeGlyphBitmapSubpixelPrefilter</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_MakeGlyphBitmapSubpixelPrefilter</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_MakeGlyphBitmapSubpixelPrefilter (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float * sub_x, float * sub_y, int glyph)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1adfc8faff4ebfbad1ce0bff9b4ebc691c"/>    <section>
    <title>stbtt_PackBegin()</title>
<indexterm><primary>stbtt_PackBegin</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackBegin</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_PackBegin (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, unsigned char * pixels, int width, int height, int stride_in_bytes, int padding, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * alloc_context)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ab51e492c4b320b8af6ef557ad3388140"/>    <section>
    <title>stbtt_PackEnd()</title>
<indexterm><primary>stbtt_PackEnd</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackEnd</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_PackEnd (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a344fc3b0ff7829d993ca8db3eadd321f"/>    <section>
    <title>stbtt_PackFontRange()</title>
<indexterm><primary>stbtt_PackFontRange</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackFontRange</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_PackFontRange (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, const unsigned char * fontdata, int font_index, float font_size, int first_unicode_char_in_range, int num_chars_in_range, <link linkend="_structstbtt__packedchar">stbtt_packedchar</link> * chardata_for_range)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a051bbf0eddd73f253c1b1050a9e47157"/>    <section>
    <title>stbtt_PackFontRanges()</title>
<indexterm><primary>stbtt_PackFontRanges</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackFontRanges</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_PackFontRanges (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, const unsigned char * fontdata, int font_index, <link linkend="_structstbtt__pack__range">stbtt_pack_range</link> * ranges, int num_ranges)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a8cf20362ceefc78d4df2e1703de3da50"/>    <section>
    <title>stbtt_PackFontRangesGatherRects()</title>
<indexterm><primary>stbtt_PackFontRangesGatherRects</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackFontRangesGatherRects</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_PackFontRangesGatherRects (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, <link linkend="_structstbtt__pack__range">stbtt_pack_range</link> * ranges, int num_ranges, <link linkend="_structstbrp__rect">stbrp_rect</link> * rects)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1aeec3933fdb14884b7c2919e6ddc44259"/>    <section>
    <title>stbtt_PackFontRangesPackRects()</title>
<indexterm><primary>stbtt_PackFontRangesPackRects</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackFontRangesPackRects</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_PackFontRangesPackRects (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, <link linkend="_structstbrp__rect">stbrp_rect</link> * rects, int num_rects)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1ab6eca9e0104838ca2483dea24dd9e631"/>    <section>
    <title>stbtt_PackFontRangesRenderIntoRects()</title>
<indexterm><primary>stbtt_PackFontRangesRenderIntoRects</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackFontRangesRenderIntoRects</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> int stbtt_PackFontRangesRenderIntoRects (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, <link linkend="_structstbtt__pack__range">stbtt_pack_range</link> * ranges, int num_ranges, <link linkend="_structstbrp__rect">stbrp_rect</link> * rects)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a4c55e174efbacaf82a8ddb9d1956717e"/>    <section>
    <title>stbtt_PackSetOversampling()</title>
<indexterm><primary>stbtt_PackSetOversampling</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackSetOversampling</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_PackSetOversampling (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, unsigned int h_oversample, unsigned int v_oversample)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a0549774d30f6c64b85b88acc2329e89e"/>    <section>
    <title>stbtt_PackSetSkipMissingCodepoints()</title>
<indexterm><primary>stbtt_PackSetSkipMissingCodepoints</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_PackSetSkipMissingCodepoints</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_PackSetSkipMissingCodepoints (<link linkend="_structstbtt__pack__context">stbtt_pack_context</link> * spc, int skip)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a5b868ef9a9f92e0cc8b6bc0dd52087db"/>    <section>
    <title>stbtt_Rasterize()</title>
<indexterm><primary>stbtt_Rasterize</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_Rasterize</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> stbtt_Rasterize (<link linkend="_structstbtt____bitmap">stbtt__bitmap</link> * result, float flatness_in_pixels, <link linkend="_structstbtt__vertex">stbtt_vertex</link> * vertices, int num_verts, float scale_x, float scale_y, float shift_x, float shift_y, int x_off, int y_off, int invert, <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> * userdata)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1a76da72e13355eae763c567ffde0b4607"/>    <section>
    <title>stbtt_ScaleForMappingEmToPixels()</title>
<indexterm><primary>stbtt_ScaleForMappingEmToPixels</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_ScaleForMappingEmToPixels</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> float stbtt_ScaleForMappingEmToPixels (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float pixels)</computeroutput></para>    </section><anchor xml:id="_stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b"/>    <section>
    <title>stbtt_ScaleForPixelHeight()</title>
<indexterm><primary>stbtt_ScaleForPixelHeight</primary><secondary>stb_truetype.h</secondary></indexterm>
<indexterm><primary>stb_truetype.h</primary><secondary>stbtt_ScaleForPixelHeight</secondary></indexterm>
<para><computeroutput><link linkend="_stb__truetype_8h_1ab459250c5579b1d942e0d8eb23936827">STBTT_DEF</link> float stbtt_ScaleForPixelHeight (const <link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link> * info, float pixels)</computeroutput></para></section>
</section>
</section>
