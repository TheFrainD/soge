<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sdf__test_8c">
<title>deps/stb/tests/sdf/sdf_test.c File Reference</title>
<indexterm><primary>deps/stb/tests/sdf/sdf_test.c</primary></indexterm>
<programlisting>#include &quot;stb.h&quot;
#include &quot;stb_truetype.h&quot;
#include &quot;stb_image_write.h&quot;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structfontchar">fontchar</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_sdf__test_8c_1a5640e9acc84db268e2628d4c5dad308c">STB_DEFINE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_sdf__test_8c_1afaa2f2d0d9d6726cfae6da070e736347">STB_TRUETYPE_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_sdf__test_8c_1aefe397a94e8feddc652f92ef40ce9597">STB_IMAGE_WRITE_IMPLEMENTATION</link></para>
</listitem>
            <listitem><para>#define <link linkend="_sdf__test_8c_1a656f5f3b79374cb202a52981d618f51b">BITMAP_W</link>   1200</para>
</listitem>
            <listitem><para>#define <link linkend="_sdf__test_8c_1aae2c3ae29687122b55079265ac857b4b">BITMAP_H</link>   800</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_sdf__test_8c_1a7d75211228b1523691400654436377db">blend_pixel</link> (int <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, int <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, int <link linkend="_glad_8h_1a3ea846f998d64f079b86052b6c4193a8">color</link>, float <link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_sdf__test_8c_1a3ef1db368c5f8e896bcdf794fc6d35aa">draw_char</link> (float px, float py, char <link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>, float relative_scale)</para>
</listitem>
            <listitem><para><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_sdf__test_8c_1a1d7b18d1822a8712cf193ad9e43629ee">print_text</link> (float <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>, float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>, char *text, float <link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_sdf__test_8c_1a3c04138a5bfe5d72780bb7e82a18e627">main</link> (int argc, char **argv)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>float <link linkend="_sdf__test_8c_1afdd610f823f10d42207b1ff46718e2f7">sdf_size</link> = 32.0</para>
</listitem>
            <listitem><para>float <link linkend="_sdf__test_8c_1abd1fe0ef88af2596228389ab423ec6ee">pixel_dist_scale</link> = 64.0</para>
</listitem>
            <listitem><para>int <link linkend="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96">onedge_value</link> = 128</para>
</listitem>
            <listitem><para>int <link linkend="_sdf__test_8c_1a78dca952886227190969e885fbdd4fb4">padding</link> = 3</para>
</listitem>
            <listitem><para><link linkend="_structfontchar">fontchar</link> <link linkend="_sdf__test_8c_1a338271ebd05bc3b187abf01a009447df">fdata</link> [128]</para>
</listitem>
            <listitem><para>unsigned char <link linkend="_sdf__test_8c_1aa7b6b5f472785d97c07c939cc21fda28">bitmap</link> [<link linkend="_sdf__test_8c_1aae2c3ae29687122b55079265ac857b4b">BITMAP_H</link>][<link linkend="_sdf__test_8c_1a656f5f3b79374cb202a52981d618f51b">BITMAP_W</link>][3]</para>
</listitem>
            <listitem><para>char * <link linkend="_sdf__test_8c_1a0ee36e455977d4a9a971dcf5a03e3707">sample</link> = &quot;This is goofy text, <link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link> %d!&quot;</para>
</listitem>
            <listitem><para>char * <link linkend="_sdf__test_8c_1a48f07aec56db3f715dd351f2b38bd4b0">small_sample</link> = &quot;This is goofy text, <link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link> %d! Really needs <link linkend="_glext_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>-<link linkend="_structshader">shader</link> supersampling to look good.&quot;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_sdf__test_8c_1aae2c3ae29687122b55079265ac857b4b"/>    <section>
    <title>BITMAP_H</title>
<indexterm><primary>BITMAP_H</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>BITMAP_H</secondary></indexterm>
<para><computeroutput>#define BITMAP_H   800</computeroutput></para><para>
Definition at line 28 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1a656f5f3b79374cb202a52981d618f51b"/>    <section>
    <title>BITMAP_W</title>
<indexterm><primary>BITMAP_W</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>BITMAP_W</secondary></indexterm>
<para><computeroutput>#define BITMAP_W   1200</computeroutput></para><para>
Definition at line 27 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1a5640e9acc84db268e2628d4c5dad308c"/>    <section>
    <title>STB_DEFINE</title>
<indexterm><primary>STB_DEFINE</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>STB_DEFINE</secondary></indexterm>
<para><computeroutput>#define STB_DEFINE</computeroutput></para><para>
Definition at line 1 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1aefe397a94e8feddc652f92ef40ce9597"/>    <section>
    <title>STB_IMAGE_WRITE_IMPLEMENTATION</title>
<indexterm><primary>STB_IMAGE_WRITE_IMPLEMENTATION</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>STB_IMAGE_WRITE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define STB_IMAGE_WRITE_IMPLEMENTATION</computeroutput></para><para>
Definition at line 7 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1afaa2f2d0d9d6726cfae6da070e736347"/>    <section>
    <title>STB_TRUETYPE_IMPLEMENTATION</title>
<indexterm><primary>STB_TRUETYPE_IMPLEMENTATION</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>STB_TRUETYPE_IMPLEMENTATION</secondary></indexterm>
<para><computeroutput>#define STB_TRUETYPE_IMPLEMENTATION</computeroutput></para><para>
Definition at line 4 of file sdf_test.c.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_sdf__test_8c_1a7d75211228b1523691400654436377db"/>    <section>
    <title>blend_pixel()</title>
<indexterm><primary>blend_pixel</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>blend_pixel</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> blend_pixel (int x, int y, int color, float alpha)</computeroutput></para><para>
Definition at line 34 of file sdf_test.c.</para>
<programlisting>35 {
36 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
37 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;i&#32;&lt;&#32;3;&#32;++i)
38 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>[<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>][<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>][i]&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>)&#32;(<link linkend="_stb_8h_1a04294576726bb19173a0633324e0b17c">stb_lerp</link>(<link linkend="_glad_8h_1ac03904b1f7e359bb2acf10a755e97c5a">alpha</link>,&#32;<link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>[<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>][<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>][i],&#32;<link linkend="_glad_8h_1a3ea846f998d64f079b86052b6c4193a8">color</link>)+0.5);&#32;<emphasis role="comment">//&#32;round</emphasis>
39 }
</programlisting>    </section><anchor xml:id="_sdf__test_8c_1a3ef1db368c5f8e896bcdf794fc6d35aa"/>    <section>
    <title>draw_char()</title>
<indexterm><primary>draw_char</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>draw_char</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> draw_char (float px, float py, char c, float relative_scale)</computeroutput></para><para>
Definition at line 41 of file sdf_test.c.</para>
<programlisting>42 {
43 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>;
44 &#32;&#32;&#32;<link linkend="_structfontchar">fontchar</link>&#32;*fc&#32;=&#32;&amp;<link linkend="_sdf__test_8c_1a338271ebd05bc3b187abf01a009447df">fdata</link>[<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>];
45 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fx0&#32;=&#32;px&#32;+&#32;fc-&gt;<link linkend="_structfontchar_1a7a51acd0b0d9fa8d5dc0928ba3d27cea">xoff</link>*relative_scale;
46 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fy0&#32;=&#32;py&#32;+&#32;fc-&gt;<link linkend="_structfontchar_1a4a3b3c816650abadf80095232ea67200">yoff</link>*relative_scale;
47 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fx1&#32;=&#32;fx0&#32;+&#32;fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>*relative_scale;
48 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fy1&#32;=&#32;fy0&#32;+&#32;fc-&gt;<link linkend="_structfontchar_1a4591f90252fe059185bc517c6398afd7">h</link>*relative_scale;
49 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ix0&#32;=&#32;(int)&#32;floor(fx0);
50 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;iy0&#32;=&#32;(int)&#32;floor(fy0);
51 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ix1&#32;=&#32;(int)&#32;ceil(fx1);
52 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;iy1&#32;=&#32;(int)&#32;ceil(fy1);
53 &#32;&#32;&#32;<emphasis role="comment">//&#32;clamp&#32;to&#32;viewport</emphasis>
54 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ix0&#32;&lt;&#32;0)&#32;ix0&#32;=&#32;0;
55 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iy0&#32;&lt;&#32;0)&#32;iy0&#32;=&#32;0;
56 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ix1&#32;&gt;&#32;<link linkend="_sdf__test_8c_1a656f5f3b79374cb202a52981d618f51b">BITMAP_W</link>)&#32;ix1&#32;=&#32;<link linkend="_sdf__test_8c_1a656f5f3b79374cb202a52981d618f51b">BITMAP_W</link>;
57 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iy1&#32;&gt;&#32;<link linkend="_sdf__test_8c_1aae2c3ae29687122b55079265ac857b4b">BITMAP_H</link>)&#32;iy1&#32;=&#32;<link linkend="_sdf__test_8c_1aae2c3ae29687122b55079265ac857b4b">BITMAP_H</link>;
58 
59 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>=iy0;&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;&lt;&#32;iy1;&#32;++<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)&#32;{
60 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>=ix0;&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;&lt;&#32;ix1;&#32;++<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)&#32;{
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sdf_dist,&#32;pix_dist;
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;bmx&#32;=&#32;<link linkend="_stb_8h_1ab2a4b1beb0e146a2cd0fed985d185909">stb_linear_remap</link>(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,&#32;fx0,&#32;fx1,&#32;0,&#32;fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>);
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;bmy&#32;=&#32;<link linkend="_stb_8h_1ab2a4b1beb0e146a2cd0fed985d185909">stb_linear_remap</link>(<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,&#32;fy0,&#32;fy1,&#32;0,&#32;fc-&gt;<link linkend="_structfontchar_1a4591f90252fe059185bc517c6398afd7">h</link>);
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;v00,v01,v10,v11;
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>,<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>,<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sx0&#32;=&#32;(int)&#32;bmx;
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sx1&#32;=&#32;sx0+1;
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sy0&#32;=&#32;(int)&#32;bmy;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sy1&#32;=&#32;sy0+1;
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;compute&#32;lerp&#32;weights</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bmx&#32;=&#32;bmx&#32;-&#32;sx0;
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bmy&#32;=&#32;bmy&#32;-&#32;sy0;
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clamp&#32;to&#32;edge</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sx0&#32;=&#32;<link linkend="_stb_8h_1aa2da260fd60eea58549bb266f54a4d85">stb_clamp</link>(sx0,&#32;0,&#32;fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>-1);
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sx1&#32;=&#32;<link linkend="_stb_8h_1aa2da260fd60eea58549bb266f54a4d85">stb_clamp</link>(sx1,&#32;0,&#32;fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>-1);
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy0&#32;=&#32;<link linkend="_stb_8h_1aa2da260fd60eea58549bb266f54a4d85">stb_clamp</link>(sy0,&#32;0,&#32;fc-&gt;<link linkend="_structfontchar_1a4591f90252fe059185bc517c6398afd7">h</link>-1);
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sy1&#32;=&#32;<link linkend="_stb_8h_1aa2da260fd60eea58549bb266f54a4d85">stb_clamp</link>(sy1,&#32;0,&#32;fc-&gt;<link linkend="_structfontchar_1a4591f90252fe059185bc517c6398afd7">h</link>-1);
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bilinear&#32;texture&#32;sample</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v00&#32;=&#32;fc-&gt;<link linkend="_structfontchar_1a075786c0475e971145c99001beb86894">data</link>[sy0*fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>+sx0];
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v01&#32;=&#32;fc-&gt;<link linkend="_structfontchar_1a075786c0475e971145c99001beb86894">data</link>[sy0*fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>+sx1];
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v10&#32;=&#32;fc-&gt;<link linkend="_structfontchar_1a075786c0475e971145c99001beb86894">data</link>[sy1*fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>+sx0];
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v11&#32;=&#32;fc-&gt;<link linkend="_structfontchar_1a075786c0475e971145c99001beb86894">data</link>[sy1*fc-&gt;<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>+sx1];
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>&#32;=&#32;<link linkend="_stb_8h_1a04294576726bb19173a0633324e0b17c">stb_lerp</link>(bmx,v00,v01);
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>&#32;=&#32;<link linkend="_stb_8h_1a04294576726bb19173a0633324e0b17c">stb_lerp</link>(bmx,v10,v11);
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>&#32;&#32;=&#32;<link linkend="_stb_8h_1a04294576726bb19173a0633324e0b17c">stb_lerp</link>(bmy,<link linkend="_glad_8h_1a7062a23d1d434121d4a88f530703d06a">v0</link>&#32;,<link linkend="_glad_8h_1a435c176a02c061b43e19bdf7c86cceae">v1</link>&#32;);
86 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;0</emphasis>
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;non-anti-aliased</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>&#32;&gt;&#32;<link linkend="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96">onedge_value</link>)
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_sdf__test_8c_1a7d75211228b1523691400654436377db">blend_pixel</link>(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,0,1.0);
90 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Following&#32;math&#32;can&#32;be&#32;greatly&#32;simplified</emphasis>
92 
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;distance&#32;in&#32;SDF&#32;value&#32;to&#32;distance&#32;in&#32;SDF&#32;bitmap</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sdf_dist&#32;=&#32;<link linkend="_stb_8h_1ab2a4b1beb0e146a2cd0fed985d185909">stb_linear_remap</link>(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>,&#32;<link linkend="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96">onedge_value</link>,&#32;<link linkend="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96">onedge_value</link>+<link linkend="_sdf__test_8c_1abd1fe0ef88af2596228389ab423ec6ee">pixel_dist_scale</link>,&#32;0,&#32;1);
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;distance&#32;in&#32;SDF&#32;bitmap&#32;to&#32;distance&#32;in&#32;output&#32;bitmap</emphasis>
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pix_dist&#32;=&#32;sdf_dist&#32;*&#32;relative_scale;
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;anti-alias&#32;by&#32;mapping&#32;1/2&#32;pixel&#32;around&#32;contour&#32;from&#32;0..1&#32;alpha</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>&#32;=&#32;<link linkend="_stb_8h_1ab2a4b1beb0e146a2cd0fed985d185909">stb_linear_remap</link>(pix_dist,&#32;-0.5<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;0.5<link linkend="_glad_8h_1a691492ec0bd6383f91200e49f6ae40ed">f</link>,&#32;0,&#32;1);
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>&#32;&gt;&#32;1)&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>&#32;=&#32;1;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>&#32;&gt;&#32;0)
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_sdf__test_8c_1a7d75211228b1523691400654436377db">blend_pixel</link>(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,0,<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>);
102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;}
104 &#32;&#32;&#32;}
105 }
</programlisting>    </section><anchor xml:id="_sdf__test_8c_1a3c04138a5bfe5d72780bb7e82a18e627"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (int argc, char ** argv)</computeroutput></para><para>
Definition at line 118 of file sdf_test.c.</para>
<programlisting>119 {
120 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ch;
121 &#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>,&#32;ypos;
122 &#32;&#32;&#32;<link linkend="_structstbtt__fontinfo">stbtt_fontinfo</link>&#32;<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>;
123 &#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>&#32;=&#32;<link linkend="_stb_8h_1a80d53e18fd67d6511e4c15dd04bc1d45">stb_file</link>(<emphasis role="stringliteral">&quot;c:/windows/fonts/times.ttf&quot;</emphasis>,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
124 &#32;&#32;&#32;<link linkend="_stb__truetype_8h_1ac3b6bda1851d0b1a4fd53f5f353668e5">stbtt_InitFont</link>(&amp;<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>,&#32;<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>,&#32;0);
125 
126 &#32;&#32;&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>&#32;=&#32;<link linkend="_stb__truetype_8h_1aad275d7211530a3d817fcd8647690b7b">stbtt_ScaleForPixelHeight</link>(&amp;<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>,&#32;<link linkend="_sdf__test_8c_1afdd610f823f10d42207b1ff46718e2f7">sdf_size</link>);
127 
128 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ch=32;&#32;ch&#32;&lt;&#32;127;&#32;++ch)&#32;{
129 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structfontchar">fontchar</link>&#32;fc;
130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xoff,yoff,<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>,&#32;advance;
131 &#32;&#32;&#32;&#32;&#32;&#32;fc.<link linkend="_structfontchar_1a075786c0475e971145c99001beb86894">data</link>&#32;=&#32;<link linkend="_stb__truetype_8h_1af5e7bd15f27b2add615b0141af2a9683">stbtt_GetCodepointSDF</link>(&amp;<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>,&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>,&#32;ch,&#32;<link linkend="_sdf__test_8c_1a78dca952886227190969e885fbdd4fb4">padding</link>,&#32;<link linkend="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96">onedge_value</link>,&#32;<link linkend="_sdf__test_8c_1abd1fe0ef88af2596228389ab423ec6ee">pixel_dist_scale</link>,&#32;&amp;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>,&#32;&amp;<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>,&#32;&amp;xoff,&#32;&amp;yoff);
132 &#32;&#32;&#32;&#32;&#32;&#32;fc.<link linkend="_structfontchar_1a7a51acd0b0d9fa8d5dc0928ba3d27cea">xoff</link>&#32;=&#32;xoff;
133 &#32;&#32;&#32;&#32;&#32;&#32;fc.<link linkend="_structfontchar_1a4a3b3c816650abadf80095232ea67200">yoff</link>&#32;=&#32;yoff;
134 &#32;&#32;&#32;&#32;&#32;&#32;fc.<link linkend="_structfontchar_1a21de10952ddb48da172c4ea4c5ab0673">w</link>&#32;=&#32;<link linkend="_glad_8h_1a713abae75276598501f75c68917c5e2d">w</link>;
135 &#32;&#32;&#32;&#32;&#32;&#32;fc.<link linkend="_structfontchar_1a4591f90252fe059185bc517c6398afd7">h</link>&#32;=&#32;<link linkend="_glad_8h_1afa0fb1b5e976920c0abeff2dca3ed774">h</link>;
136 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stb__truetype_8h_1a015fbd6e96df8ee58bd41bb4211b64e7">stbtt_GetCodepointHMetrics</link>(&amp;<link linkend="_oversample_2main_8c_1a8ccc89e79d23f73388aba9309637cecc">font</link>,&#32;ch,&#32;&amp;advance,&#32;<link linkend="_include_2vally_2config_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
137 &#32;&#32;&#32;&#32;&#32;&#32;fc.<link linkend="_structfontchar_1a39f4f3e3675bbe4a59d242d7daa03057">advance</link>&#32;=&#32;advance&#32;*&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>;
138 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_sdf__test_8c_1a338271ebd05bc3b187abf01a009447df">fdata</link>[ch]&#32;=&#32;fc;
139 &#32;&#32;&#32;}
140 
141 &#32;&#32;&#32;ypos&#32;=&#32;60;
142 &#32;&#32;&#32;memset(<link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>,&#32;255,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>));
143 &#32;&#32;&#32;<link linkend="_sdf__test_8c_1a1d7b18d1822a8712cf193ad9e43629ee">print_text</link>(400,&#32;ypos+30,&#32;<link linkend="_stb_8h_1adaabe895f1a146aa609843309b34a5d3">stb_sprintf</link>(<emphasis role="stringliteral">&quot;sdf&#32;bitmap&#32;height&#32;%d&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;<link linkend="_sdf__test_8c_1afdd610f823f10d42207b1ff46718e2f7">sdf_size</link>),&#32;30/<link linkend="_sdf__test_8c_1afdd610f823f10d42207b1ff46718e2f7">sdf_size</link>);
144 &#32;&#32;&#32;ypos&#32;+=&#32;80;
145 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>&#32;=&#32;8.0;&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>&#32;&lt;&#32;120.0;&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>&#32;*=&#32;1.33f)&#32;{
146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_sdf__test_8c_1a1d7b18d1822a8712cf193ad9e43629ee">print_text</link>(80,&#32;ypos+<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>,&#32;<link linkend="_stb_8h_1adaabe895f1a146aa609843309b34a5d3">stb_sprintf</link>(<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>&#32;==&#32;8.0&#32;?&#32;<link linkend="_sdf__test_8c_1a48f07aec56db3f715dd351f2b38bd4b0">small_sample</link>&#32;:&#32;<link linkend="_sdf__test_8c_1a0ee36e455977d4a9a971dcf5a03e3707">sample</link>,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>),&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>&#32;/&#32;<link linkend="_sdf__test_8c_1afdd610f823f10d42207b1ff46718e2f7">sdf_size</link>);
147 &#32;&#32;&#32;&#32;&#32;&#32;ypos&#32;+=&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>*1.05f&#32;+&#32;20;
148 &#32;&#32;&#32;}
149 
150 &#32;&#32;&#32;<link linkend="_glfw_2deps_2stb__image__write_8h_1a9c03e5171f6aea47fde6dafcf3249ccf">stbi_write_png</link>(<emphasis role="stringliteral">&quot;sdf_test.png&quot;</emphasis>,&#32;<link linkend="_sdf__test_8c_1a656f5f3b79374cb202a52981d618f51b">BITMAP_W</link>,&#32;<link linkend="_sdf__test_8c_1aae2c3ae29687122b55079265ac857b4b">BITMAP_H</link>,&#32;3,&#32;<link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>,&#32;0);
151 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
152 }
</programlisting>    </section><anchor xml:id="_sdf__test_8c_1a1d7b18d1822a8712cf193ad9e43629ee"/>    <section>
    <title>print_text()</title>
<indexterm><primary>print_text</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>print_text</secondary></indexterm>
<para><computeroutput><link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> print_text (float x, float y, char * text, float scale)</computeroutput></para><para>
Definition at line 108 of file sdf_test.c.</para>
<programlisting>109 {
110 &#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
111 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;text[i];&#32;++i)&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sdf__test_8c_1a338271ebd05bc3b187abf01a009447df">fdata</link>[text[i]].<link linkend="_glad_8h_1a41a8247b39e9cdb744299c3331ca3453">data</link>)
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_sdf__test_8c_1a3ef1db368c5f8e896bcdf794fc6d35aa">draw_char</link>(<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>,<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>,text[i],<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>);
114 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;+=&#32;<link linkend="_sdf__test_8c_1a338271ebd05bc3b187abf01a009447df">fdata</link>[text[i]].<link linkend="_structfontchar_1a39f4f3e3675bbe4a59d242d7daa03057">advance</link>&#32;*&#32;<link linkend="_glext_8h_1a281421b881aa7a1266842b73a3bc7655">scale</link>;
115 &#32;&#32;&#32;}
116 }
</programlisting></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_sdf__test_8c_1aa7b6b5f472785d97c07c939cc21fda28"/>    <section>
    <title>bitmap</title>
<indexterm><primary>bitmap</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>bitmap</secondary></indexterm>
<para><computeroutput>unsigned char <link linkend="_glext_8h_1a6068a789bc2c3cc8cbe16e3280544c9d">bitmap</link>[<link linkend="_sdf__test_8c_1aae2c3ae29687122b55079265ac857b4b">BITMAP_H</link>][<link linkend="_sdf__test_8c_1a656f5f3b79374cb202a52981d618f51b">BITMAP_W</link>][3]</computeroutput></para><para>
Definition at line 29 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1a338271ebd05bc3b187abf01a009447df"/>    <section>
    <title>fdata</title>
<indexterm><primary>fdata</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>fdata</secondary></indexterm>
<para><computeroutput><link linkend="_structfontchar">fontchar</link> fdata[128]</computeroutput></para><para>
Definition at line 25 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1a55f7d9f37255ff3301dd118afed3cc96"/>    <section>
    <title>onedge_value</title>
<indexterm><primary>onedge_value</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>onedge_value</secondary></indexterm>
<para><computeroutput>int onedge_value = 128</computeroutput></para><para>
Definition at line 13 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1a78dca952886227190969e885fbdd4fb4"/>    <section>
    <title>padding</title>
<indexterm><primary>padding</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>padding</secondary></indexterm>
<para><computeroutput>int padding = 3</computeroutput></para><para>
Definition at line 14 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1abd1fe0ef88af2596228389ab423ec6ee"/>    <section>
    <title>pixel_dist_scale</title>
<indexterm><primary>pixel_dist_scale</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>pixel_dist_scale</secondary></indexterm>
<para><computeroutput>float pixel_dist_scale = 64.0</computeroutput></para><para>
Definition at line 12 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1a0ee36e455977d4a9a971dcf5a03e3707"/>    <section>
    <title>sample</title>
<indexterm><primary>sample</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>sample</secondary></indexterm>
<para><computeroutput>char* sample = &quot;This is goofy text, <link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link> %d!&quot;</computeroutput></para><para>
Definition at line 31 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1afdd610f823f10d42207b1ff46718e2f7"/>    <section>
    <title>sdf_size</title>
<indexterm><primary>sdf_size</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>sdf_size</secondary></indexterm>
<para><computeroutput>float sdf_size = 32.0</computeroutput></para><para>
Definition at line 11 of file sdf_test.c.</para>
    </section><anchor xml:id="_sdf__test_8c_1a48f07aec56db3f715dd351f2b38bd4b0"/>    <section>
    <title>small_sample</title>
<indexterm><primary>small_sample</primary><secondary>sdf_test.c</secondary></indexterm>
<indexterm><primary>sdf_test.c</primary><secondary>small_sample</secondary></indexterm>
<para><computeroutput>char* small_sample = &quot;This is goofy text, <link linkend="_glad_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link> %d! Really needs <link linkend="_glext_8h_1a83ad0ee7f1e06b59c90271716e689080">in</link>-<link linkend="_structshader">shader</link> supersampling to look good.&quot;</computeroutput></para><para>
Definition at line 32 of file sdf_test.c.</para>
</section>
</section>
</section>
