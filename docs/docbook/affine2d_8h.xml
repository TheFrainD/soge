<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_affine2d_8h">
<title>deps/cglm/include/cglm/affine2d.h File Reference</title>
<indexterm><primary>deps/cglm/include/cglm/affine2d.h</primary></indexterm>
<programlisting>#include &quot;common.h&quot;
#include &quot;util.h&quot;
#include &quot;vec2.h&quot;
#include &quot;mat3.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a32d460adf2b3f2ec35ae07d81ff0666d">glm_translate2d</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>translate existing 2d transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a6a9b6c86e9bebd77736306c315a5240f">glm_translate2d_to</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</para>

<para>translate existing 2d transform matrix by v vector and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1aa91934e451a7f0fe6cda8b973a29ba47">glm_translate2d_x</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>)</para>

<para>translate existing 2d transform matrix by x factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a7cb7ae41126fd75943fce589a1923714">glm_translate2d_y</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>)</para>

<para>translate existing 2d transform matrix by y factor </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a13433d4df56adf984e69d855fd0a2dc8">glm_translate2d_make</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW translate 2d transform matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1ad332523a4152db113401a5363686708a">glm_scale2d_to</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</para>

<para>scale existing 2d transform matrix by v vector and store result in dest </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1ae86412ffdc4b094d1a55c58435856d63">glm_scale2d_make</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>creates NEW 2d scale matrix by v vector </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a0ef9f732a294035156a5b9995dbf1d26">glm_scale2d</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> <link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>)</para>

<para>scales existing 2d transform matrix by v vector and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a0b215786f19c6d5196c894a185510703">glm_scale2d_uni</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>)</para>

<para>applies uniform scale to existing 2d transform matrix v = [s, s] and stores result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a2eda8f3d779c4d9a130148a4051fec95">glm_rotate2d_make</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>creates NEW rotation matrix by angle around Z axis </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1acba834c9aea5662fea27a4d890cc12db">glm_rotate2d</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>)</para>

<para>rotate existing 2d transform matrix around Z axis by angle and store result in same matrix </para>
</listitem>
            <listitem><para><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> <link linkend="_affine2d_8h_1a42752a4bd5cc3057b06fa4766eb4600e">glm_rotate2d_to</link> (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> <link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>, float <link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</para>

<para>rotate existing 2d transform matrix around Z axis by angle and store result in dest </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_affine2d_8h_1acba834c9aea5662fea27a4d890cc12db"/>    <section>
    <title>glm_rotate2d()</title>
<indexterm><primary>glm_rotate2d</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_rotate2d</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate2d (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, float angle)</computeroutput></para><para>

<para>rotate existing 2d transform matrix around Z axis by angle and store result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 218 of file affine2d.h.</para>
<programlisting>218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
219 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m00&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0],&#32;&#32;m10&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0],
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m01&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1],&#32;&#32;m11&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1],
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m02&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2],&#32;&#32;m12&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2];
222 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
223 
224 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;=&#32;sinf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
225 &#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;=&#32;cosf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
226 &#32;&#32;
227 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;=&#32;m00&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;+&#32;m10&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
228 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;=&#32;m01&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;+&#32;m11&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
229 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;=&#32;m02&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;+&#32;m12&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
230 
231 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;=&#32;m00&#32;*&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;+&#32;m10&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
232 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;=&#32;m01&#32;*&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;+&#32;m11&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
233 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;=&#32;m02&#32;*&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;+&#32;m12&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
234 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a2eda8f3d779c4d9a130148a4051fec95"/>    <section>
    <title>glm_rotate2d_make()</title>
<indexterm><primary>glm_rotate2d_make</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_rotate2d_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate2d_make (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, float angle)</computeroutput></para><para>

<para>creates NEW rotation matrix by angle around Z axis </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 190 of file affine2d.h.</para>
<programlisting>190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
191 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
192 
193 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;=&#32;sinf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
194 &#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;=&#32;cosf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
195 &#32;&#32;
196 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;=&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
197 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;=&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
198 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;=&#32;0;
199 
200 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;=&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
201 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;=&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
202 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;=&#32;0;
203 &#32;&#32;
204 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0]&#32;=&#32;0.0f;
205 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1]&#32;=&#32;0.0f;
206 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2]&#32;=&#32;1.0f;
207 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a42752a4bd5cc3057b06fa4766eb4600e"/>    <section>
    <title>glm_rotate2d_to()</title>
<indexterm><primary>glm_rotate2d_to</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_rotate2d_to</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_rotate2d_to (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, float angle, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</computeroutput></para><para>

<para>rotate existing 2d transform matrix around Z axis by angle and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>angle</entry>
                                <entry>
<para>angle (radians) </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>destination </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 246 of file affine2d.h.</para>
<programlisting>246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
247 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m00&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0],&#32;&#32;m10&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0],
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m01&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1],&#32;&#32;m11&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1],
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m02&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2],&#32;&#32;m12&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2];
250 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>,&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
251 
252 &#32;&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;=&#32;sinf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
253 &#32;&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;=&#32;cosf(<link linkend="_glext_8h_1a9e06c1f76a20fed54ca742cd25cb02c4">angle</link>);
254 &#32;&#32;
255 &#32;&#32;dest[0][0]&#32;=&#32;m00&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;+&#32;m10&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
256 &#32;&#32;dest[0][1]&#32;=&#32;m01&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;+&#32;m11&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
257 &#32;&#32;dest[0][2]&#32;=&#32;m02&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>&#32;+&#32;m12&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
258 
259 &#32;&#32;dest[1][0]&#32;=&#32;m00&#32;*&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;+&#32;m10&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
260 &#32;&#32;dest[1][1]&#32;=&#32;m01&#32;*&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;+&#32;m11&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
261 &#32;&#32;dest[1][2]&#32;=&#32;m02&#32;*&#32;-<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&#32;+&#32;m12&#32;*&#32;<link linkend="_glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73">c</link>;
262 &#32;&#32;
263 &#32;&#32;dest[2][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0];
264 &#32;&#32;dest[2][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1];
265 &#32;&#32;dest[2][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2];
266 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a0ef9f732a294035156a5b9995dbf1d26"/>    <section>
    <title>glm_scale2d()</title>
<indexterm><primary>glm_scale2d</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_scale2d</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale2d (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v)</computeroutput></para><para>

<para>scales existing 2d transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 153 of file affine2d.h.</para>
<programlisting>153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
154 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
155 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
156 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
157 
158 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
159 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
160 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
161 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1ae86412ffdc4b094d1a55c58435856d63"/>    <section>
    <title>glm_scale2d_make()</title>
<indexterm><primary>glm_scale2d_make</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_scale2d_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale2d_make (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v)</computeroutput></para><para>

<para>creates NEW 2d scale matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 138 of file affine2d.h.</para>
<programlisting>138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
139 &#32;&#32;<link linkend="_mat3_8h_1a36b50414501b20dabf8fdfb80fd7faab">glm_mat3_identity</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
140 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;=&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
141 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;=&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
142 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1ad332523a4152db113401a5363686708a"/>    <section>
    <title>glm_scale2d_to()</title>
<indexterm><primary>glm_scale2d_to</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_scale2d_to</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale2d_to (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</computeroutput></para><para>

<para>scale existing 2d transform matrix by v vector and store result in dest </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>scale vector [x, y] </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>scaled matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 116 of file affine2d.h.</para>
<programlisting>116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
117 &#32;&#32;dest[0][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
118 &#32;&#32;dest[0][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
119 &#32;&#32;dest[0][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
120 &#32;&#32;
121 &#32;&#32;dest[1][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
122 &#32;&#32;dest[1][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
123 &#32;&#32;dest[1][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
124 &#32;&#32;
125 &#32;&#32;dest[2][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0];
126 &#32;&#32;dest[2][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1];
127 &#32;&#32;dest[2][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2];
128 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a0b215786f19c6d5196c894a185510703"/>    <section>
    <title>glm_scale2d_uni()</title>
<indexterm><primary>glm_scale2d_uni</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_scale2d_uni</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_scale2d_uni (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, float s)</computeroutput></para><para>

<para>applies uniform scale to existing 2d transform matrix v = [s, s] and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>s</entry>
                                <entry>
<para>scale factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 172 of file affine2d.h.</para>
<programlisting>172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
173 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
174 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
175 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
176 
177 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
178 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
179 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;*&#32;<link linkend="_glext_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>;
180 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a32d460adf2b3f2ec35ae07d81ff0666d"/>    <section>
    <title>glm_translate2d()</title>
<indexterm><primary>glm_translate2d</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_translate2d</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate2d (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v)</computeroutput></para><para>

<para>translate existing 2d transform matrix by v vector and stores result in same matrix </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 41 of file affine2d.h.</para>
<programlisting>41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
42 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0]&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1]&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0];
43 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0]&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1]&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1];
44 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0]&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;*&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1]&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2];
45 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a13433d4df56adf984e69d855fd0a2dc8"/>    <section>
    <title>glm_translate2d_make()</title>
<indexterm><primary>glm_translate2d_make</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_translate2d_make</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate2d_make (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v)</computeroutput></para><para>

<para>creates NEW translate 2d transform matrix by v vector </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y] </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 100 of file affine2d.h.</para>
<programlisting>100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
101 &#32;&#32;<link linkend="_mat3_8h_1a36b50414501b20dabf8fdfb80fd7faab">glm_mat3_identity</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>);
102 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0]&#32;=&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[0];
103 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1]&#32;=&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>[1];
104 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a6a9b6c86e9bebd77736306c315a5240f"/>    <section>
    <title>glm_translate2d_to()</title>
<indexterm><primary>glm_translate2d_to</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_translate2d_to</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate2d_to (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, <link linkend="_types_8h_1a5edc995c0f7248db90aa314c4e98af6a">vec2</link> v, <link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> dest)</computeroutput></para><para>

<para>translate existing 2d transform matrix by v vector and store result in dest </para>
</para>

<para>source matrix will remain same</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>v</entry>
                                <entry>
<para>translate vector [x, y] </para>
</entry>
                            </row>
                            <row>
                                <entry>out                                </entry>                                <entry>dest</entry>
                                <entry>
<para>translated matrix </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 59 of file affine2d.h.</para>
<programlisting>59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
60 &#32;&#32;<link linkend="_mat3_8h_1a96f88b7cda5b096e3c0e2cb1d5b6daf9">glm_mat3_copy</link>(<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>,&#32;dest);
61 &#32;&#32;<link linkend="_affine2d_8h_1a32d460adf2b3f2ec35ae07d81ff0666d">glm_translate2d</link>(dest,&#32;<link linkend="_glad_8h_1a10a82eabcb59d2fcd74acee063775f90">v</link>);
62 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1aa91934e451a7f0fe6cda8b973a29ba47"/>    <section>
    <title>glm_translate2d_x()</title>
<indexterm><primary>glm_translate2d_x</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_translate2d_x</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate2d_x (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, float x)</computeroutput></para><para>

<para>translate existing 2d transform matrix by x factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>x</entry>
                                <entry>
<para>x factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 72 of file affine2d.h.</para>
<programlisting>72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
73 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][0]&#32;*&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0];
74 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][1]&#32;*&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1];
75 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[0][2]&#32;*&#32;<link linkend="_glad_8h_1a1af10666aa42292f407f6acc2af11948">x</link>&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2];
76 }
</programlisting>    </section><anchor xml:id="_affine2d_8h_1a7cb7ae41126fd75943fce589a1923714"/>    <section>
    <title>glm_translate2d_y()</title>
<indexterm><primary>glm_translate2d_y</primary><secondary>affine2d.h</secondary></indexterm>
<indexterm><primary>affine2d.h</primary><secondary>glm_translate2d_y</secondary></indexterm>
<para><computeroutput><link linkend="_include_2cglm_2common_8h_1a132eda4e8b82a997831a6c857f7d26c1">CGLM_INLINE</link> <link linkend="_glext_8h_1a46df6112013cf583e82b25cebd5cb499">void</link> glm_translate2d_y (<link linkend="_types_8h_1a68e0f5fed49f769f2fca0e61daeab5f5">mat3</link> m, float y)</computeroutput></para><para>

<para>translate existing 2d transform matrix by y factor </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in,out                                </entry>                                <entry>m</entry>
                                <entry>
<para>affine transfrom </para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>y</entry>
                                <entry>
<para>y factor </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 86 of file affine2d.h.</para>
<programlisting>86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
87 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][0]&#32;*&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][0];
88 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][1]&#32;*&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][1];
89 &#32;&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2]&#32;=&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[1][2]&#32;*&#32;<link linkend="_glad_8h_1af2e2675ea2e0b9a7ec6a98fcb44a938a">y</link>&#32;+&#32;<link linkend="_glext_8h_1af593500c283bf1a787a6f947f503a5c2">m</link>[2][2];
90 }
</programlisting></section>
</section>
</section>
