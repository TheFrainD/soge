<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_math_8h" xml:lang="en-US">
<title>include/vally/math/math.h File Reference</title>
<indexterm><primary>include/vally/math/math.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;vally/config.h&gt;
#include &lt;vally/math/math_types.h&gt;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link>   3.141592653589793F</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a4188585d48ca16dcf83b756b92b6f2c2">V_2PI</link>   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> * 2.0F</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a7e40036069a7063bb3ecd9a51cff14fa">V_PI_2</link>   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> / 2.0F</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a2421438b6878660354c51d1aed58e48e">V_PI_3</link>   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> / 3.0F</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a10d98495d0e10dfa2e086f18823a24cd">V_PI_4</link>   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> / 4.0F</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a933c9e6c3e7bc4468b8286109fbe4186">V_SQRT2</link>   1.41421356237F</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a73bcece6f75a3ca7961c4d29d6ce676d">LERP</link>(w,  v1,  v2)   ((1.0 - (w)) * (v1) + (w) * (v2))</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(x,  y)   ((<link linkend="_structvector2f">vector2f</link>){x, y})</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1acea8545c47e4b783b1de3961c0f37216">vector3f_create</link>(x,  y,  z)   ((<link linkend="_structvector3f">vector3f</link>){x, y, z})</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1ad30410a6d35fe3b32c0e78dea820265c">vector2i_create</link>(x,  y)   ((<link linkend="_structvector2i">vector2i</link>){x, y})</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a7bf25dc5a650311c5aa383b166f4172c">vector3i_create</link>(x,  y,  z)   ((<link linkend="_structvector3i">vector3i</link>){x, y, z})</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a62eb5919a653ff66ee1078e5f76b708c">vector2f_zero</link>   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(0.0f, 0.0f)</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1ac8e2e3f8ccd2aec8abf7202baba4ec6a">vector2f_one</link>   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(1.0f, 1.0f)</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1ac85db85a16af4c6f45e61fbb6d59bfe8">vector2f_right</link>   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(1.0f, 0.0f)</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1afca2d1c67cdb148a41e8b23ab85c55dc">vector2f_left</link>   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(-1.0f, 0.0f)</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1af2f50e6ef467bb07d87ed5c1d2b33b54">vector2f_up</link>   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(0.0f, 1.0f)</para>
</listitem>
            <listitem><para>#define <link linkend="_math_8h_1a3481113d85980c19754b80c14bfc468e">vector2f_down</link>   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(0.0f, -1.0f)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1aa123ce902e90a53a288840e7ce2cca8c">vsin</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a274cd141d07c551a2e83c49657191970">vcos</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a86cb7b5e056819fa2c1f3a31cf70845c">vtan</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a2cc1a528785dfda6519cf20846c0ea75">vasin</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1aeb3e7013c6e7f709840a0e840486c244">vacos</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1ade2f0cdc5b8dac5c328e8ebf1470a631">vatan</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1afa67517ed5ecc39ac5e5ee00797e83a3">vsqrt</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a60f435b583d145c4f7d8b2fb3d42e3ac">vabs</link> (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> <link linkend="_math_8h_1a13dbdbb7798d60f496314411e6ae8d7f">vector2f_add</link> (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> <link linkend="_math_8h_1a35a2762f769df126611f194c84ec7f1d">vector2f_sub</link> (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> <link linkend="_math_8h_1ae1691581bbb7159911f2156fa9f299a8">vector2f_mul</link> (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> <link linkend="_math_8h_1aeec24a948814fce0b8abbf7c63539efa">vector2f_muls</link> (<link linkend="_structvector2f">vector2f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> <link linkend="_math_8h_1a1e77e37729cfe078fb68764154f1eb21">vector2f_divs</link> (<link linkend="_structvector2f">vector2f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> <link linkend="_math_8h_1ae0e5d83b5ee6cffb373e16da98000445">vector2f_div</link> (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1ad40bcbdc691ed97ef8f98716fe08edcd">vector2f_length</link> (<link linkend="_structvector2f">vector2f</link> vector)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> <link linkend="_math_8h_1afc5332482607ad4e8af0d4e86d4418e9">vector2f_normalized</link> (<link linkend="_structvector2f">vector2f</link> vector)</para>
</listitem>
            <listitem><para>VALLY_INLINE void <link linkend="_math_8h_1a11d8c6a7d153f199d1d2078f500d73b9">vector2f_normalize</link> (<link linkend="_structvector2f">vector2f</link> *vector)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a40a1b3d2714fb410bd188dd9ea8fec36">vector2f_distance</link> (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1acd40ba3b94b3436ee0ac20af8f384da1">vector3f_add</link> (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1aad585ecea15adf3ea220143e1ffacb92">vector3f_sub</link> (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1a4f940965819eaf0593457c17b1a772e6">vector3f_cross</link> (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a644dabb9d834649c677d51a0cb973157">vector3f_dot</link> (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1a5f87035a7d86368e4efd806326675fcb">vector3f_mul</link> (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1a70349163e6d269e77b61ba49fc49c8ec">vector3f_div</link> (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1a0912ed44ac10d1eb11fd65f81f9aeab2">vector3f_muls</link> (<link linkend="_structvector3f">vector3f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1a9fe2617f6f61a92928f47b44081ff196">vector3f_divs</link> (<link linkend="_structvector3f">vector3f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a6192240e9f5a26ed196749df8c3de839">vector3f_length</link> (<link linkend="_structvector3f">vector3f</link> vector)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> <link linkend="_math_8h_1aefeb4672999b3a285425c73c57328be9">vector3f_normalized</link> (<link linkend="_structvector3f">vector3f</link> vector)</para>
</listitem>
            <listitem><para>VALLY_INLINE void <link linkend="_math_8h_1a5c3300f68bd2a4c67523628cb2003eb9">vector3f_normalize</link> (<link linkend="_structvector3f">vector3f</link> *vector)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> <link linkend="_math_8h_1a35340bb7e68d0d0b6418950e2f02015c">vector3f_distance</link> (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2i">vector2i</link> <link linkend="_math_8h_1ad8b23112c0060aa64837211a85636f2a">vector2i_add</link> (<link linkend="_structvector2i">vector2i</link> a, <link linkend="_structvector2i">vector2i</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3i">vector3i</link> <link linkend="_math_8h_1a5ce3bd1cc5f0266750bfe3edad7b2e62">vector3i_add</link> (<link linkend="_structvector3i">vector3i</link> a, <link linkend="_structvector3i">vector3i</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector2i">vector2i</link> <link linkend="_math_8h_1ad0b5dde0b943ec484a8cccd686879cfd">vector2i_sub</link> (<link linkend="_structvector2i">vector2i</link> a, <link linkend="_structvector2i">vector2i</link> b)</para>
</listitem>
            <listitem><para>VALLY_INLINE <link linkend="_structvector3i">vector3i</link> <link linkend="_math_8h_1ae865f7c617d3d48cc7f5b9262262dd01">vector3i_sub</link> (<link linkend="_structvector3i">vector3i</link> a, <link linkend="_structvector3i">vector3i</link> b)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_math_8h_1a73bcece6f75a3ca7961c4d29d6ce676d"/><section>
    <title>LERP</title>
<indexterm><primary>LERP</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>LERP</secondary></indexterm>
<para><computeroutput>#define LERP( w,  v1,  v2)   ((1.0 - (w)) * (v1) + (w) * (v2))</computeroutput></para></section>
<anchor xml:id="_math_8h_1a4188585d48ca16dcf83b756b92b6f2c2"/><section>
    <title>V_2PI</title>
<indexterm><primary>V_2PI</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>V_2PI</secondary></indexterm>
<para><computeroutput>#define V_2PI   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> * 2.0F</computeroutput></para></section>
<anchor xml:id="_math_8h_1abb238b3aa98973cfc0e956327326a949"/><section>
    <title>V_PI</title>
<indexterm><primary>V_PI</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>V_PI</secondary></indexterm>
<para><computeroutput>#define V_PI   3.141592653589793F</computeroutput></para></section>
<anchor xml:id="_math_8h_1a7e40036069a7063bb3ecd9a51cff14fa"/><section>
    <title>V_PI_2</title>
<indexterm><primary>V_PI_2</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>V_PI_2</secondary></indexterm>
<para><computeroutput>#define V_PI_2   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> / 2.0F</computeroutput></para></section>
<anchor xml:id="_math_8h_1a2421438b6878660354c51d1aed58e48e"/><section>
    <title>V_PI_3</title>
<indexterm><primary>V_PI_3</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>V_PI_3</secondary></indexterm>
<para><computeroutput>#define V_PI_3   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> / 3.0F</computeroutput></para></section>
<anchor xml:id="_math_8h_1a10d98495d0e10dfa2e086f18823a24cd"/><section>
    <title>V_PI_4</title>
<indexterm><primary>V_PI_4</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>V_PI_4</secondary></indexterm>
<para><computeroutput>#define V_PI_4   <link linkend="_math_8h_1abb238b3aa98973cfc0e956327326a949">V_PI</link> / 4.0F</computeroutput></para></section>
<anchor xml:id="_math_8h_1a933c9e6c3e7bc4468b8286109fbe4186"/><section>
    <title>V_SQRT2</title>
<indexterm><primary>V_SQRT2</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>V_SQRT2</secondary></indexterm>
<para><computeroutput>#define V_SQRT2   1.41421356237F</computeroutput></para></section>
<anchor xml:id="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb"/><section>
    <title>vector2f_create</title>
<indexterm><primary>vector2f_create</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_create</secondary></indexterm>
<para><computeroutput>#define vector2f_create( x,  y)   ((<link linkend="_structvector2f">vector2f</link>){x, y})</computeroutput></para></section>
<anchor xml:id="_math_8h_1a3481113d85980c19754b80c14bfc468e"/><section>
    <title>vector2f_down</title>
<indexterm><primary>vector2f_down</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_down</secondary></indexterm>
<para><computeroutput>#define vector2f_down   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(0.0f, -1.0f)</computeroutput></para></section>
<anchor xml:id="_math_8h_1afca2d1c67cdb148a41e8b23ab85c55dc"/><section>
    <title>vector2f_left</title>
<indexterm><primary>vector2f_left</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_left</secondary></indexterm>
<para><computeroutput>#define vector2f_left   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(-1.0f, 0.0f)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ac8e2e3f8ccd2aec8abf7202baba4ec6a"/><section>
    <title>vector2f_one</title>
<indexterm><primary>vector2f_one</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_one</secondary></indexterm>
<para><computeroutput>#define vector2f_one   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(1.0f, 1.0f)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ac85db85a16af4c6f45e61fbb6d59bfe8"/><section>
    <title>vector2f_right</title>
<indexterm><primary>vector2f_right</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_right</secondary></indexterm>
<para><computeroutput>#define vector2f_right   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(1.0f, 0.0f)</computeroutput></para></section>
<anchor xml:id="_math_8h_1af2f50e6ef467bb07d87ed5c1d2b33b54"/><section>
    <title>vector2f_up</title>
<indexterm><primary>vector2f_up</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_up</secondary></indexterm>
<para><computeroutput>#define vector2f_up   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(0.0f, 1.0f)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a62eb5919a653ff66ee1078e5f76b708c"/><section>
    <title>vector2f_zero</title>
<indexterm><primary>vector2f_zero</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_zero</secondary></indexterm>
<para><computeroutput>#define vector2f_zero   <link linkend="_math_8h_1a19431f940e3c5e70e3de779a80a0d1fb">vector2f_create</link>(0.0f, 0.0f)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ad30410a6d35fe3b32c0e78dea820265c"/><section>
    <title>vector2i_create</title>
<indexterm><primary>vector2i_create</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2i_create</secondary></indexterm>
<para><computeroutput>#define vector2i_create( x,  y)   ((<link linkend="_structvector2i">vector2i</link>){x, y})</computeroutput></para></section>
<anchor xml:id="_math_8h_1acea8545c47e4b783b1de3961c0f37216"/><section>
    <title>vector3f_create</title>
<indexterm><primary>vector3f_create</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_create</secondary></indexterm>
<para><computeroutput>#define vector3f_create( x,  y,  z)   ((<link linkend="_structvector3f">vector3f</link>){x, y, z})</computeroutput></para></section>
<anchor xml:id="_math_8h_1a7bf25dc5a650311c5aa383b166f4172c"/><section>
    <title>vector3i_create</title>
<indexterm><primary>vector3i_create</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3i_create</secondary></indexterm>
<para><computeroutput>#define vector3i_create( x,  y,  z)   ((<link linkend="_structvector3i">vector3i</link>){x, y, z})</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_math_8h_1a60f435b583d145c4f7d8b2fb3d42e3ac"/><section>
    <title>vabs()</title>
<indexterm><primary>vabs</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vabs</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vabs (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
<anchor xml:id="_math_8h_1aeb3e7013c6e7f709840a0e840486c244"/><section>
    <title>vacos()</title>
<indexterm><primary>vacos</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vacos</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vacos (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a2cc1a528785dfda6519cf20846c0ea75"/><section>
    <title>vasin()</title>
<indexterm><primary>vasin</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vasin</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vasin (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ade2f0cdc5b8dac5c328e8ebf1470a631"/><section>
    <title>vatan()</title>
<indexterm><primary>vatan</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vatan</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vatan (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a274cd141d07c551a2e83c49657191970"/><section>
    <title>vcos()</title>
<indexterm><primary>vcos</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vcos</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vcos (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a13dbdbb7798d60f496314411e6ae8d7f"/><section>
    <title>vector2f_add()</title>
<indexterm><primary>vector2f_add</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_add</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> vector2f_add (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a40a1b3d2714fb410bd188dd9ea8fec36"/><section>
    <title>vector2f_distance()</title>
<indexterm><primary>vector2f_distance</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_distance</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vector2f_distance (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ae0e5d83b5ee6cffb373e16da98000445"/><section>
    <title>vector2f_div()</title>
<indexterm><primary>vector2f_div</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_div</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> vector2f_div (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a1e77e37729cfe078fb68764154f1eb21"/><section>
    <title>vector2f_divs()</title>
<indexterm><primary>vector2f_divs</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_divs</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> vector2f_divs (<link linkend="_structvector2f">vector2f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ad40bcbdc691ed97ef8f98716fe08edcd"/><section>
    <title>vector2f_length()</title>
<indexterm><primary>vector2f_length</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_length</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vector2f_length (<link linkend="_structvector2f">vector2f</link> vector)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ae1691581bbb7159911f2156fa9f299a8"/><section>
    <title>vector2f_mul()</title>
<indexterm><primary>vector2f_mul</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_mul</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> vector2f_mul (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1aeec24a948814fce0b8abbf7c63539efa"/><section>
    <title>vector2f_muls()</title>
<indexterm><primary>vector2f_muls</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_muls</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> vector2f_muls (<link linkend="_structvector2f">vector2f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a11d8c6a7d153f199d1d2078f500d73b9"/><section>
    <title>vector2f_normalize()</title>
<indexterm><primary>vector2f_normalize</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_normalize</secondary></indexterm>
<para><computeroutput>VALLY_INLINE void vector2f_normalize (<link linkend="_structvector2f">vector2f</link> * vector)</computeroutput></para></section>
<anchor xml:id="_math_8h_1afc5332482607ad4e8af0d4e86d4418e9"/><section>
    <title>vector2f_normalized()</title>
<indexterm><primary>vector2f_normalized</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_normalized</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> vector2f_normalized (<link linkend="_structvector2f">vector2f</link> vector)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a35a2762f769df126611f194c84ec7f1d"/><section>
    <title>vector2f_sub()</title>
<indexterm><primary>vector2f_sub</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2f_sub</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2f">vector2f</link> vector2f_sub (<link linkend="_structvector2f">vector2f</link> a, <link linkend="_structvector2f">vector2f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ad8b23112c0060aa64837211a85636f2a"/><section>
    <title>vector2i_add()</title>
<indexterm><primary>vector2i_add</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2i_add</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2i">vector2i</link> vector2i_add (<link linkend="_structvector2i">vector2i</link> a, <link linkend="_structvector2i">vector2i</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ad0b5dde0b943ec484a8cccd686879cfd"/><section>
    <title>vector2i_sub()</title>
<indexterm><primary>vector2i_sub</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector2i_sub</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector2i">vector2i</link> vector2i_sub (<link linkend="_structvector2i">vector2i</link> a, <link linkend="_structvector2i">vector2i</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1acd40ba3b94b3436ee0ac20af8f384da1"/><section>
    <title>vector3f_add()</title>
<indexterm><primary>vector3f_add</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_add</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_add (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a4f940965819eaf0593457c17b1a772e6"/><section>
    <title>vector3f_cross()</title>
<indexterm><primary>vector3f_cross</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_cross</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_cross (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a35340bb7e68d0d0b6418950e2f02015c"/><section>
    <title>vector3f_distance()</title>
<indexterm><primary>vector3f_distance</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_distance</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vector3f_distance (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a70349163e6d269e77b61ba49fc49c8ec"/><section>
    <title>vector3f_div()</title>
<indexterm><primary>vector3f_div</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_div</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_div (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a9fe2617f6f61a92928f47b44081ff196"/><section>
    <title>vector3f_divs()</title>
<indexterm><primary>vector3f_divs</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_divs</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_divs (<link linkend="_structvector3f">vector3f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a644dabb9d834649c677d51a0cb973157"/><section>
    <title>vector3f_dot()</title>
<indexterm><primary>vector3f_dot</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_dot</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vector3f_dot (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a6192240e9f5a26ed196749df8c3de839"/><section>
    <title>vector3f_length()</title>
<indexterm><primary>vector3f_length</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_length</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vector3f_length (<link linkend="_structvector3f">vector3f</link> vector)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a5f87035a7d86368e4efd806326675fcb"/><section>
    <title>vector3f_mul()</title>
<indexterm><primary>vector3f_mul</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_mul</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_mul (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a0912ed44ac10d1eb11fd65f81f9aeab2"/><section>
    <title>vector3f_muls()</title>
<indexterm><primary>vector3f_muls</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_muls</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_muls (<link linkend="_structvector3f">vector3f</link> vector, <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> scalar)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a5c3300f68bd2a4c67523628cb2003eb9"/><section>
    <title>vector3f_normalize()</title>
<indexterm><primary>vector3f_normalize</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_normalize</secondary></indexterm>
<para><computeroutput>VALLY_INLINE void vector3f_normalize (<link linkend="_structvector3f">vector3f</link> * vector)</computeroutput></para></section>
<anchor xml:id="_math_8h_1aefeb4672999b3a285425c73c57328be9"/><section>
    <title>vector3f_normalized()</title>
<indexterm><primary>vector3f_normalized</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_normalized</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_normalized (<link linkend="_structvector3f">vector3f</link> vector)</computeroutput></para></section>
<anchor xml:id="_math_8h_1aad585ecea15adf3ea220143e1ffacb92"/><section>
    <title>vector3f_sub()</title>
<indexterm><primary>vector3f_sub</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3f_sub</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3f">vector3f</link> vector3f_sub (<link linkend="_structvector3f">vector3f</link> a, <link linkend="_structvector3f">vector3f</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a5ce3bd1cc5f0266750bfe3edad7b2e62"/><section>
    <title>vector3i_add()</title>
<indexterm><primary>vector3i_add</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3i_add</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3i">vector3i</link> vector3i_add (<link linkend="_structvector3i">vector3i</link> a, <link linkend="_structvector3i">vector3i</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1ae865f7c617d3d48cc7f5b9262262dd01"/><section>
    <title>vector3i_sub()</title>
<indexterm><primary>vector3i_sub</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vector3i_sub</secondary></indexterm>
<para><computeroutput>VALLY_INLINE <link linkend="_structvector3i">vector3i</link> vector3i_sub (<link linkend="_structvector3i">vector3i</link> a, <link linkend="_structvector3i">vector3i</link> b)</computeroutput></para></section>
<anchor xml:id="_math_8h_1aa123ce902e90a53a288840e7ce2cca8c"/><section>
    <title>vsin()</title>
<indexterm><primary>vsin</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vsin</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vsin (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
<anchor xml:id="_math_8h_1afa67517ed5ecc39ac5e5ee00797e83a3"/><section>
    <title>vsqrt()</title>
<indexterm><primary>vsqrt</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vsqrt</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vsqrt (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
<anchor xml:id="_math_8h_1a86cb7b5e056819fa2c1f3a31cf70845c"/><section>
    <title>vtan()</title>
<indexterm><primary>vtan</primary><secondary>math.h</secondary></indexterm>
<indexterm><primary>math.h</primary><secondary>vtan</secondary></indexterm>
<para><computeroutput><link linkend="_config_8h_1a36cc5e9ce793c35314cc59aaa819a91f">VALLY_API</link> <link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> vtan (<link linkend="_config_8h_1a5f6906312a689f27d70e9d086649d3fd">f32</link> x)</computeroutput></para></section>
</section>
</section>
